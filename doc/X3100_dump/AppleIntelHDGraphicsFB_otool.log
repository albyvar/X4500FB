/System/Library/Extensions/AppleIntelHDGraphicsFB.kext/Contents/MacOS/AppleIntelHDGraphicsFB:
(__TEXT,__text) section
__Z41__static_initialization_and_destruction_0ii:
0000000000001324	pushq	%rbp
0000000000001325	movq	%rsp,%rbp
0000000000001328	cmpl	$0x01,%edi
000000000000132b	jne	0x00001395
000000000000132d	cmpl	$0x0000ffff,%esi
0000000000001333	jne	0x000013c0
0000000000001339	movl	$0x00000750,%ecx
000000000000133e	movq	0x00013a73(%rip),%rdx
0000000000001345	leaq	0x000101d8(%rip),%rsi
000000000000134c	leaq	0x00013b0d(%rip),%rdi
0000000000001353	callq	0x00001358
0000000000001358	leaq	0x00012911(%rip),%rax
000000000000135f	movq	%rax,0x00013afa(%rip)
0000000000001366	movl	$0x00000500,%ecx
000000000000136b	movq	0x00013a4e(%rip),%rdx
0000000000001372	leaq	0x00010195(%rip),%rsi
0000000000001379	leaq	0x00013b20(%rip),%rdi
0000000000001380	callq	0x00001385
0000000000001385	leaq	0x00011cc4(%rip),%rax
000000000000138c	movq	%rax,0x00013b0d(%rip)
0000000000001393	jmp	0x000013c0
0000000000001395	testl	%edi,%edi
0000000000001397	jne	0x000013c0
0000000000001399	cmpl	$0x0000ffff,%esi
000000000000139f	jne	0x000013c0
00000000000013a1	leaq	0x00013af8(%rip),%rdi
00000000000013a8	call	*0x00011ca2(%rip)
00000000000013ae	leaq	0x00013aab(%rip),%rdi
00000000000013b5	movq	0x000128b4(%rip),%r11
00000000000013bc	leave
00000000000013bd	jmp	*%r11
00000000000013c0	leave
00000000000013c1	ret
00000000000013c2	nop
__GLOBAL__I__ZN22AppleIntelHDGraphicsFB10gMetaClassE:
00000000000013c3	pushq	%rbp
00000000000013c4	movq	%rsp,%rbp
00000000000013c7	movl	$0x0000ffff,%esi
00000000000013cc	movl	$0x00000001,%edi
00000000000013d1	leave
00000000000013d2	jmp	0x100001324
00000000000013d7	nop
__ZNK22AppleIntelHDGraphicsFB12getMetaClassEv:
00000000000013d8	pushq	%rbp
00000000000013d9	movq	%rsp,%rbp
00000000000013dc	leaq	0x00013a7d(%rip),%rax
00000000000013e3	leave
00000000000013e4	ret
00000000000013e5	nop
__ZNK21AppleIntelFramebuffer12getMetaClassEv:
00000000000013e6	pushq	%rbp
00000000000013e7	movq	%rsp,%rbp
00000000000013ea	leaq	0x00013aaf(%rip),%rax
00000000000013f1	leave
00000000000013f2	ret
00000000000013f3	nop
__ZN21AppleIntelFramebuffer15checkEDIDHeaderEPh:
00000000000013f4	pushq	%rbp
00000000000013f5	movq	%rsp,%rbp
00000000000013f8	cmpb	$0x00,(%rsi)
00000000000013fb	jne	0x0000142a
00000000000013fd	cmpb	$0xff,0x01(%rsi)
0000000000001401	jne	0x0000142a
0000000000001403	cmpb	$0xff,0x02(%rsi)
0000000000001407	jne	0x0000142a
0000000000001409	cmpb	$0xff,0x03(%rsi)
000000000000140d	jne	0x0000142a
000000000000140f	cmpb	$0xff,0x04(%rsi)
0000000000001413	jne	0x0000142a
0000000000001415	cmpb	$0xff,0x05(%rsi)
0000000000001419	jne	0x0000142a
000000000000141b	cmpb	$0xff,0x06(%rsi)
000000000000141f	jne	0x0000142a
0000000000001421	cmpb	$0x00,0x07(%rsi)
0000000000001425	sete	%al
0000000000001428	jmp	0x0000142c
000000000000142a	xorl	%eax,%eax
000000000000142c	movzbl	%al,%eax
000000000000142f	leave
0000000000001430	ret
0000000000001431	nop
__ZN21AppleIntelFramebuffer13hasDDCConnectEi:
0000000000001432	pushq	%rbp
0000000000001433	movq	%rsp,%rbp
0000000000001436	movl	$0x00000001,%eax
000000000000143b	leave
000000000000143c	ret
000000000000143d	nop
__ZN21AppleIntelFramebuffer15getPixelFormatsEv:
000000000000143e	pushq	%rbp
000000000000143f	movq	%rsp,%rbp
0000000000001442	movq	0x0001317f(%rip),%rax
0000000000001449	leave
000000000000144a	ret
000000000000144b	nop
__ZN21AppleIntelFramebuffer19getDisplayModeCountEv:
000000000000144c	pushq	%rbp
000000000000144d	movq	%rsp,%rbp
0000000000001450	movl	$0x00000001,%edx
0000000000001455	cmpb	$0x00,0x0000020d(%rdi)
000000000000145c	je	0x00001483
000000000000145e	testb	$0xf0,0x00000210(%rdi)
0000000000001465	jne	0x0000147e
0000000000001467	movq	0x000001d0(%rdi),%rax
000000000000146e	andq	$0xffffff00,%rdx
0000000000001475	cmpb	$0x00,0x00000193(%rax)
000000000000147c	je	0x00001483
000000000000147e	movl	$0x0000000a,%edx
0000000000001483	movl	%edx,%eax
0000000000001485	leave
0000000000001486	ret
0000000000001487	nop
__ZN21AppleIntelFramebuffer15getDisplayModesEPi:
0000000000001488	pushq	%rbp
0000000000001489	movq	%rsp,%rbp
000000000000148c	cmpb	$0x00,0x0000020d(%rdi)
0000000000001493	je	0x000014cf
0000000000001495	testb	$0xf0,0x00000210(%rdi)
000000000000149c	jne	0x000014ae
000000000000149e	movq	0x000001d0(%rdi),%rax
00000000000014a5	cmpb	$0x00,0x00000193(%rax)
00000000000014ac	je	0x000014d5
00000000000014ae	leaq	0x0001134b(%rip),%rdx
00000000000014b5	leaq	0x000113e4(%rip),%rcx
00000000000014bc	movl	(%rdx),%eax
00000000000014be	movl	%eax,(%rsi)
00000000000014c0	addq	$0x10,%rdx
00000000000014c4	addq	$0x04,%rsi
00000000000014c8	cmpq	%rcx,%rdx
00000000000014cb	jne	0x000014bc
00000000000014cd	jmp	0x000014d5
00000000000014cf	movl	$0x00000100,(%rsi)
00000000000014d5	xorl	%eax,%eax
00000000000014d7	leave
00000000000014d8	ret
00000000000014d9	nop
__ZN21AppleIntelFramebuffer29getPixelFormatsForDisplayModeEii:
00000000000014da	pushq	%rbp
00000000000014db	movq	%rsp,%rbp
00000000000014de	xorl	%eax,%eax
00000000000014e0	leave
00000000000014e1	ret
__ZN21AppleIntelFramebuffer17validateModeDepthEPK29IODetailedTimingInformationV2j:
00000000000014e2	pushq	%rbp
00000000000014e3	movq	%rsp,%rbp
00000000000014e6	cmpl	$0x01,%edx
00000000000014e9	sbbl	%eax,%eax
00000000000014eb	andl	$0x04,%eax
00000000000014ee	leave
00000000000014ef	ret
__ZN21AppleIntelFramebuffer18maxSupportedDepthsEPK29IODetailedTimingInformationV2:
00000000000014f0	pushq	%rbp
00000000000014f1	movq	%rsp,%rbp
00000000000014f4	movl	$0x00000001,%eax
00000000000014f9	leave
00000000000014fa	ret
00000000000014fb	nop
__ZN21AppleIntelFramebuffer21getCurrentDisplayModeEPiS0_:
00000000000014fc	pushq	%rbp
00000000000014fd	movq	%rsp,%rbp
0000000000001500	testq	%rsi,%rsi
0000000000001503	je	0x0000150d
0000000000001505	movl	0x000001dc(%rdi),%eax
000000000000150b	movl	%eax,(%rsi)
000000000000150d	testq	%rdx,%rdx
0000000000001510	je	0x0000151a
0000000000001512	movl	0x000001e0(%rdi),%eax
0000000000001518	movl	%eax,(%rdx)
000000000000151a	xorl	%eax,%eax
000000000000151c	leave
000000000000151d	ret
__ZN21AppleIntelFramebuffer15isConsoleDeviceEv:
000000000000151e	pushq	%rbp
000000000000151f	movq	%rsp,%rbp
0000000000001522	movzbl	0x0000049c(%rdi),%eax
0000000000001529	leave
000000000000152a	ret
000000000000152b	nop
__ZN21AppleIntelFramebuffer19registerAcceleratorEP13IOAccelerator:
000000000000152c	pushq	%rbp
000000000000152d	movq	%rsp,%rbp
0000000000001530	movq	%rsi,0x000004a0(%rdi)
0000000000001537	movq	0x000001d0(%rdi),%rax
000000000000153e	movq	%rsi,0x000006b8(%rax)
0000000000001545	leave
0000000000001546	ret
0000000000001547	nop
__ZN21AppleIntelFramebuffer12isScaledModeEv:
0000000000001548	pushq	%rbp
0000000000001549	movq	%rsp,%rbp
000000000000154c	xorl	%eax,%eax
000000000000154e	leave
000000000000154f	ret
__ZN21AppleIntelFramebuffer13getAppleSenseEiPjS0_S0_S0_:
0000000000001550	pushq	%rbp
0000000000001551	movq	%rsp,%rbp
0000000000001554	movq	%rdx,%rsi
0000000000001557	movq	%r9,%rcx
000000000000155a	cmpl	$0x40,0x00000210(%rdi)
0000000000001561	ja	0x00001684
0000000000001567	movl	0x00000210(%rdi),%eax
000000000000156d	leaq	0x0000000c(%rip),%rdx
0000000000001574	movslq	(%rdx,%rax,4),%rax
0000000000001578	addq	%rdx,%rax
000000000000157b	jmp	*%rax
000000000000157d	nopl	(%rax)
0000000000001580	addb	$0x01,%al
0000000000001582	addb	%al,(%rax)
0000000000001584	sbbl	%eax,(%rcx)
0000000000001586	addb	%al,(%rax)
0000000000001588	xorl	%eax,(%rcx)
000000000000158a	addb	%al,(%rax)
000000000000158c	orl	(%rcx),%eax
000000000000158e	addb	%al,(%rax)
0000000000001590	addb	$0x01,%al
0000000000001592	addb	%al,(%rax)
0000000000001594	addb	$0x01,%al
0000000000001596	addb	%al,(%rax)
0000000000001598	addb	$0x01,%al
000000000000159a	addb	%al,(%rax)
000000000000159c	addb	$0x01,%al
000000000000159e	addb	%al,(%rax)
00000000000015a0	addb	$0x01,%al
00000000000015a2	addb	%al,(%rax)
00000000000015a4	addb	$0x01,%al
00000000000015a6	addb	%al,(%rax)
00000000000015a8	addb	$0x01,%al
00000000000015aa	addb	%al,(%rax)
00000000000015ac	addb	$0x01,%al
00000000000015ae	addb	%al,(%rax)
00000000000015b0	addb	$0x01,%al
00000000000015b2	addb	%al,(%rax)
00000000000015b4	addb	$0x01,%al
00000000000015b6	addb	%al,(%rax)
00000000000015b8	addb	$0x01,%al
00000000000015ba	addb	%al,(%rax)
00000000000015bc	addb	$0x01,%al
00000000000015be	addb	%al,(%rax)
00000000000015c0	xorl	%eax,(%rcx)
00000000000015c2	addb	%al,(%rax)
00000000000015c4	addb	$0x01,%al
00000000000015c6	addb	%al,(%rax)
00000000000015c8	addb	$0x01,%al
00000000000015ca	addb	%al,(%rax)
00000000000015cc	addb	$0x01,%al
00000000000015ce	addb	%al,(%rax)
00000000000015d0	addb	$0x01,%al
00000000000015d2	addb	%al,(%rax)
00000000000015d4	addb	$0x01,%al
00000000000015d6	addb	%al,(%rax)
00000000000015d8	addb	$0x01,%al
00000000000015da	addb	%al,(%rax)
00000000000015dc	addb	$0x01,%al
00000000000015de	addb	%al,(%rax)
00000000000015e0	addb	$0x01,%al
00000000000015e2	addb	%al,(%rax)
00000000000015e4	addb	$0x01,%al
00000000000015e6	addb	%al,(%rax)
00000000000015e8	addb	$0x01,%al
00000000000015ea	addb	%al,(%rax)
00000000000015ec	addb	$0x01,%al
00000000000015ee	addb	%al,(%rax)
00000000000015f0	addb	$0x01,%al
00000000000015f2	addb	%al,(%rax)
00000000000015f4	addb	$0x01,%al
00000000000015f6	addb	%al,(%rax)
00000000000015f8	addb	$0x01,%al
00000000000015fa	addb	%al,(%rax)
00000000000015fc	addb	$0x01,%al
00000000000015fe	addb	%al,(%rax)
0000000000001600	xorl	%eax,(%rcx)
0000000000001602	addb	%al,(%rax)
0000000000001604	addb	$0x01,%al
0000000000001606	addb	%al,(%rax)
0000000000001608	addb	$0x01,%al
000000000000160a	addb	%al,(%rax)
000000000000160c	addb	$0x01,%al
000000000000160e	addb	%al,(%rax)
0000000000001610	addb	$0x01,%al
0000000000001612	addb	%al,(%rax)
0000000000001614	addb	$0x01,%al
0000000000001616	addb	%al,(%rax)
0000000000001618	addb	$0x01,%al
000000000000161a	addb	%al,(%rax)
000000000000161c	addb	$0x01,%al
000000000000161e	addb	%al,(%rax)
0000000000001620	addb	$0x01,%al
0000000000001622	addb	%al,(%rax)
0000000000001624	addb	$0x01,%al
0000000000001626	addb	%al,(%rax)
0000000000001628	addb	$0x01,%al
000000000000162a	addb	%al,(%rax)
000000000000162c	addb	$0x01,%al
000000000000162e	addb	%al,(%rax)
0000000000001630	addb	$0x01,%al
0000000000001632	addb	%al,(%rax)
0000000000001634	addb	$0x01,%al
0000000000001636	addb	%al,(%rax)
0000000000001638	addb	$0x01,%al
000000000000163a	addb	%al,(%rax)
000000000000163c	addb	$0x01,%al
000000000000163e	addb	%al,(%rax)
0000000000001640	xorl	%eax,(%rcx)
0000000000001642	addb	%al,(%rax)
0000000000001644	addb	$0x01,%al
0000000000001646	addb	%al,(%rax)
0000000000001648	addb	$0x01,%al
000000000000164a	addb	%al,(%rax)
000000000000164c	addb	$0x01,%al
000000000000164e	addb	%al,(%rax)
0000000000001650	addb	$0x01,%al
0000000000001652	addb	%al,(%rax)
0000000000001654	addb	$0x01,%al
0000000000001656	addb	%al,(%rax)
0000000000001658	addb	$0x01,%al
000000000000165a	addb	%al,(%rax)
000000000000165c	addb	$0x01,%al
000000000000165e	addb	%al,(%rax)
0000000000001660	addb	$0x01,%al
0000000000001662	addb	%al,(%rax)
0000000000001664	addb	$0x01,%al
0000000000001666	addb	%al,(%rax)
0000000000001668	addb	$0x01,%al
000000000000166a	addb	%al,(%rax)
000000000000166c	addb	$0x01,%al
000000000000166e	addb	%al,(%rax)
0000000000001670	addb	$0x01,%al
0000000000001672	addb	%al,(%rax)
0000000000001674	addb	$0x01,%al
0000000000001676	addb	%al,(%rax)
0000000000001678	addb	$0x01,%al
000000000000167a	addb	%al,(%rax)
000000000000167c	addb	$0x01,%al
000000000000167e	addb	%al,(%rax)
0000000000001680	xorl	%eax,(%rcx)
0000000000001682	addb	%al,(%rax)
0000000000001684	movl	$0xe00002c7,%eax
0000000000001689	jmp	0x000016d5
000000000000168b	testq	%r9,%r9
000000000000168e	je	0x000016bc
0000000000001690	movl	$0x00000002,(%r9)
0000000000001697	jmp	0x000016bc
0000000000001699	movl	0x00000220(%rdi),%eax
000000000000169f	testl	%eax,%eax
00000000000016a1	jne	0x000016b1
00000000000016a3	testq	%r9,%r9
00000000000016a6	je	0x000016bc
00000000000016a8	movl	$0x0000000a,(%r9)
00000000000016af	jmp	0x000016bc
00000000000016b1	testq	%rcx,%rcx
00000000000016b4	je	0x000016bc
00000000000016b6	movl	$0x00000015,(%rcx)
00000000000016bc	testq	%rsi,%rsi
00000000000016bf	je	0x000016c7
00000000000016c1	movl	$0x00000006,(%rsi)
00000000000016c7	xorl	%eax,%eax
00000000000016c9	testq	%r8,%r8
00000000000016cc	je	0x000016d5
00000000000016ce	movl	$0x0000003e,(%r8)
00000000000016d5	leave
00000000000016d6	ret
00000000000016d7	nop
__ZN22AppleIntelHDGraphicsFB27registerGPUInterruptHandlerEjPFvP8OSObjectPvES1_S2_:
00000000000016d8	pushq	%rbp
00000000000016d9	movq	%rsp,%rbp
00000000000016dc	cmpl	$0x02,%esi
00000000000016df	je	0x000016f8
00000000000016e1	cmpl	$0x03,%esi
00000000000016e4	je	0x00001701
00000000000016e6	movl	$0xe00002c2,%eax
00000000000016eb	decl	%esi
00000000000016ed	jne	0x0000174d
00000000000016ef	leaq	0x00000620(%rdi),%rsi
00000000000016f6	jmp	0x00001708
00000000000016f8	leaq	0x00000638(%rdi),%rsi
00000000000016ff	jmp	0x00001708
0000000000001701	leaq	0x00000650(%rdi),%rsi
0000000000001708	testq	%rdx,%rdx
000000000000170b	je	0x0000171a
000000000000170d	movl	$0xe00002d5,%eax
0000000000001712	cmpq	$0x00,(%rsi)
0000000000001716	jne	0x0000174d
0000000000001718	jmp	0x00001727
000000000000171a	movl	$0xe00002df,%eax
000000000000171f	cmpq	$0x00,(%rsi)
0000000000001723	jne	0x00001734
0000000000001725	jmp	0x0000174d
0000000000001727	movq	%rcx,0x08(%rsi)
000000000000172b	movq	%r8,0x10(%rsi)
000000000000172f	movq	%rdx,(%rsi)
0000000000001732	jmp	0x0000174b
0000000000001734	movq	$0x00000000,(%rsi)
000000000000173b	movq	$0x00000000,0x08(%rsi)
0000000000001743	movq	$0x00000000,0x10(%rsi)
000000000000174b	xorl	%eax,%eax
000000000000174d	leave
000000000000174e	ret
000000000000174f	nop
__ZN22AppleIntelHDGraphicsFB18getPhysicalAddressEP18IOMemoryDescriptorj:
0000000000001750	pushq	%rbp
0000000000001751	movq	%rsp,%rbp
0000000000001754	pushq	%rbx
0000000000001755	subq	$0x28,%rsp
0000000000001759	movq	%rdi,%rbx
000000000000175c	movl	%edx,%edx
000000000000175e	movq	%rdx,0xe0(%rbp)
0000000000001762	movl	$0x00000001,0xec(%rbp)
0000000000001769	movq	0x00000178(%rdi),%rdi
0000000000001770	movq	(%rdi),%rax
0000000000001773	movl	$0x00000001,%edx
0000000000001778	call	*0x00000128(%rax)
000000000000177e	testl	%eax,%eax
0000000000001780	jne	0x000017bd
0000000000001782	movq	0x00000178(%rbx),%rdi
0000000000001789	movq	(%rdi),%rax
000000000000178c	leaq	0xec(%rbp),%rcx
0000000000001790	leaq	0xd0(%rbp),%rdx
0000000000001794	leaq	0xe0(%rbp),%rsi
0000000000001798	call	*0x00000158(%rax)
000000000000179e	testl	%eax,%eax
00000000000017a0	jne	0x000017bd
00000000000017a2	movq	0x00000178(%rbx),%rdi
00000000000017a9	movq	(%rdi),%rax
00000000000017ac	movl	$0x00000001,%esi
00000000000017b1	call	*0x00000130(%rax)
00000000000017b7	movq	0xd0(%rbp),%rax
00000000000017bb	jmp	0x000017bf
00000000000017bd	xorl	%eax,%eax
00000000000017bf	addq	$0x28,%rsp
00000000000017c3	popq	%rbx
00000000000017c4	leave
00000000000017c5	ret
__ZN22AppleIntelHDGraphicsFB18printOSInformationEv:
00000000000017c6	pushq	%rbp
00000000000017c7	movq	%rsp,%rbp
00000000000017ca	leave
00000000000017cb	ret
__ZN22AppleIntelHDGraphicsFB11refreshRingEv:
00000000000017cc	pushq	%rbp
00000000000017cd	movq	%rsp,%rbp
00000000000017d0	movq	0x00000098(%rdi),%rax
00000000000017d7	addq	$0x00004034,%eax
00000000000017dd	movl	(%rax),%eax
00000000000017df	andl	$0x001ffffc,%eax
00000000000017e4	movl	%eax,0x0000049c(%rdi)
00000000000017ea	subl	0x00000494(%rdi),%eax
00000000000017f0	subl	$0x08,%eax
00000000000017f3	movl	%eax,0x00000490(%rdi)
00000000000017f9	testl	%eax,%eax
00000000000017fb	jns	0x00001809
00000000000017fd	addl	0x0000048c(%rdi),%eax
0000000000001803	movl	%eax,0x00000490(%rdi)
0000000000001809	leave
000000000000180a	ret
000000000000180b	nop
__ZN22AppleIntelHDGraphicsFB13enableVCSRingEv:
000000000000180c	pushq	%rbp
000000000000180d	movq	%rsp,%rbp
0000000000001810	movq	0x000135b1(%rip),%rax
0000000000001817	movl	(%rax),%ecx
0000000000001819	movl	0x0000048c(%rdi),%edx
000000000000181f	shrl	%cl,%edx
0000000000001821	decl	%edx
0000000000001823	shll	$0x0c,%edx
0000000000001826	orl	$0x01,%edx
0000000000001829	movl	$0x00000000,0x0000049c(%rdi)
0000000000001833	movl	$0x00000000,0x00000494(%rdi)
000000000000183d	movq	0x00000098(%rdi),%rax
0000000000001844	addq	$0x0000403c,%eax
000000000000184a	movl	$0x00000000,(%rax)
0000000000001850	movl	0x00000488(%rdi),%ecx
0000000000001856	movq	0x00000098(%rdi),%rax
000000000000185d	addq	$0x00004038,%eax
0000000000001863	movl	%ecx,(%rax)
0000000000001865	movl	0x00000494(%rdi),%ecx
000000000000186b	movq	0x00000098(%rdi),%rax
0000000000001872	addq	$0x00004030,%eax
0000000000001878	movl	%ecx,(%rax)
000000000000187a	movl	0x0000049c(%rdi),%ecx
0000000000001880	movq	0x00000098(%rdi),%rax
0000000000001887	addq	$0x00004034,%eax
000000000000188d	movl	%ecx,(%rax)
000000000000188f	movq	0x00000098(%rdi),%rax
0000000000001896	addq	$0x0000403c,%eax
000000000000189c	movl	%edx,(%rax)
000000000000189e	movq	0x00000098(%rdi),%rax
00000000000018a5	addq	$0x00004034,%eax
00000000000018ab	movl	(%rax),%eax
00000000000018ad	andl	$0x001ffffc,%eax
00000000000018b2	movl	%eax,0x0000049c(%rdi)
00000000000018b8	subl	0x00000494(%rdi),%eax
00000000000018be	subl	$0x08,%eax
00000000000018c1	movl	%eax,0x00000490(%rdi)
00000000000018c7	testl	%eax,%eax
00000000000018c9	jns	0x000018d7
00000000000018cb	addl	0x0000048c(%rdi),%eax
00000000000018d1	movl	%eax,0x00000490(%rdi)
00000000000018d7	leave
00000000000018d8	ret
00000000000018d9	nop
__ZN22AppleIntelHDGraphicsFB14VCSBltCompleteEv:
00000000000018da	pushq	%rbp
00000000000018db	movq	%rsp,%rbp
00000000000018de	movq	0x00000098(%rdi),%rax
00000000000018e5	leaq	0x00004034(%rax),%rdi
00000000000018ec	leaq	0x00004030(%rax),%rsi
00000000000018f3	xorl	%ecx,%ecx
00000000000018f5	movl	(%rdi),%edx
00000000000018f7	movl	(%rsi),%eax
00000000000018f9	andl	$0x0001fffc,%edx
00000000000018ff	andl	$0x0001fff8,%eax
0000000000001904	cmpl	%eax,%edx
0000000000001906	jne	0x0000190f
0000000000001908	movl	$0x00000001,%eax
000000000000190d	jmp	0x0000191b
000000000000190f	incl	%ecx
0000000000001911	cmpl	$0x00010000,%ecx
0000000000001917	jne	0x000018f5
0000000000001919	xorl	%eax,%eax
000000000000191b	leave
000000000000191c	ret
000000000000191d	nop
__ZN22AppleIntelHDGraphicsFB16readfRegisters32Ej:
000000000000191e	pushq	%rbp
000000000000191f	movq	%rsp,%rbp
0000000000001922	movl	%esi,%esi
0000000000001924	addq	0x00000098(%rdi),%rsi
000000000000192b	movl	(%rsi),%eax
000000000000192d	leave
000000000000192e	ret
000000000000192f	nop
__ZN22AppleIntelHDGraphicsFB16hwGetFramebufferEj:
0000000000001930	pushq	%rbp
0000000000001931	movq	%rsp,%rbp
0000000000001934	movl	0x00000194(%rdi),%edx
000000000000193a	xorl	%eax,%eax
000000000000193c	cmpl	%esi,%edx
000000000000193e	jbe	0x0000194d
0000000000001940	subl	%esi,%edx
0000000000001942	leal	0xff(%rdx),%eax
0000000000001945	movq	0x00000198(%rdi,%rax,8),%rax
000000000000194d	leave
000000000000194e	ret
000000000000194f	nop
__ZN22AppleIntelHDGraphicsFB13hwGetPortCRTCEj:
0000000000001950	pushq	%rbp
0000000000001951	movq	%rsp,%rbp
0000000000001954	cmpl	$0x01,0x00000194(%rdi)
000000000000195b	jle	0x00001985
000000000000195d	cmpl	$0x03,%esi
0000000000001960	je	0x00001969
0000000000001962	cmpl	$0x04,%esi
0000000000001965	jne	0x0000197c
0000000000001967	jmp	0x00001973
0000000000001969	movl	0x00000600(%rdi),%edx
000000000000196f	testl	%edx,%edx
0000000000001971	je	0x00001985
0000000000001973	movzbl	0x00000190(%rdi),%eax
000000000000197a	jmp	0x00001987
000000000000197c	movzbl	0x00000191(%rdi),%eax
0000000000001983	jmp	0x00001987
0000000000001985	xorl	%eax,%eax
0000000000001987	leave
0000000000001988	ret
0000000000001989	nop
__ZN22AppleIntelHDGraphicsFB23hwGetDisplayPipeforCRTCEj:
000000000000198a	pushq	%rbp
000000000000198b	movq	%rsp,%rbp
000000000000198e	movl	$0x0000ffff,%eax
0000000000001993	leave
0000000000001994	ret
0000000000001995	nop
__ZN22AppleIntelHDGraphicsFB13hwGetRowBytesEiPK29IODetailedTimingInformationV2i:
0000000000001996	pushq	%rbp
0000000000001997	movq	%rsp,%rbp
000000000000199a	movslq	%esi,%rsi
000000000000199d	imulq	$0x000000f0,%rsi,%rsi
00000000000019a4	movl	0x000001f0(%rdi,%rsi),%edx
00000000000019ab	movl	%edx,%ecx
00000000000019ad	movl	$0x00002000,%eax
00000000000019b2	testl	%edx,%edx
00000000000019b4	cmovneq	%rcx,%rax
00000000000019b8	leave
00000000000019b9	ret
__ZN22AppleIntelHDGraphicsFB16hwGetMirrorStateEjPb:
00000000000019ba	pushq	%rbp
00000000000019bb	movq	%rsp,%rbp
00000000000019be	cmpl	%esi,0x00000168(%rdi)
00000000000019c4	sete	(%rdx)
00000000000019c7	xorl	%eax,%eax
00000000000019c9	cmpb	$0x00,0x00000164(%rdi)
00000000000019d0	setne	%al
00000000000019d3	leave
00000000000019d4	ret
00000000000019d5	nop
__ZN22AppleIntelHDGraphicsFB35hwCRTCToIODetailedTimingInformationEPNS_10CRTCParamsEP29IODetailedTimingInformationV2:
00000000000019d6	pushq	%rbp
00000000000019d7	movq	%rsp,%rbp
00000000000019da	movq	%rdx,%rdi
00000000000019dd	movq	0x000000e8(%rsi),%rax
00000000000019e4	movq	%rax,0x28(%rdx)
00000000000019e8	movq	0x000000e8(%rsi),%rax
00000000000019ef	movq	%rax,0x30(%rdx)
00000000000019f3	movq	0x000000e8(%rsi),%rax
00000000000019fa	movq	%rax,0x38(%rdx)
00000000000019fe	movzwl	(%rsi),%eax
0000000000001a01	leal	0x01(%rax),%r9d
0000000000001a05	movl	%r9d,0x40(%rdx)
0000000000001a09	movl	(%rsi),%eax
0000000000001a0b	shrl	$0x10,%eax
0000000000001a0e	incl	%eax
0000000000001a10	subl	%r9d,%eax
0000000000001a13	movl	%eax,0x44(%rdx)
0000000000001a16	movl	0x08(%rsi),%eax
0000000000001a19	movzwl	%ax,%ecx
0000000000001a1c	shrl	$0x10,%eax
0000000000001a1f	leal	0x01(%rcx),%edx
0000000000001a22	subl	%ecx,%eax
0000000000001a24	movl	%eax,0x4c(%rdi)
0000000000001a27	subl	%r9d,%edx
0000000000001a2a	movl	%edx,0x48(%rdi)
0000000000001a2d	movzwl	0x0c(%rsi),%eax
0000000000001a31	leal	0x01(%rax),%r8d
0000000000001a35	movl	%r8d,0x50(%rdi)
0000000000001a39	movzwl	0x0e(%rsi),%eax
0000000000001a3d	incl	%eax
0000000000001a3f	subl	%r8d,%eax
0000000000001a42	movl	%eax,0x54(%rdi)
0000000000001a45	movl	0x14(%rsi),%eax
0000000000001a48	movzwl	%ax,%ecx
0000000000001a4b	shrl	$0x10,%eax
0000000000001a4e	leal	0x01(%rcx),%edx
0000000000001a51	subl	%ecx,%eax
0000000000001a53	movl	%eax,0x5c(%rdi)
0000000000001a56	subl	%r8d,%edx
0000000000001a59	movl	%edx,0x58(%rdi)
0000000000001a5c	movl	$0x00000000,0x0c(%rdi)
0000000000001a63	movl	$0x00000000,0x10(%rdi)
0000000000001a6a	movl	$0x00000000,0x14(%rdi)
0000000000001a71	movl	0x38(%rsi),%ecx
0000000000001a74	testl	%ecx,%ecx
0000000000001a76	jns	0x00001ab9
0000000000001a78	movzwl	0x26(%rsi),%eax
0000000000001a7c	andl	$0x00000fff,%eax
0000000000001a81	incl	%eax
0000000000001a83	movl	%eax,0x18(%rdi)
0000000000001a86	movl	0x24(%rsi),%eax
0000000000001a89	andl	$0x00000fff,%eax
0000000000001a8e	leal	0x01(%rax),%edx
0000000000001a91	movl	%edx,0x1c(%rdi)
0000000000001a94	movl	%r9d,%eax
0000000000001a97	shll	$0x10,%eax
0000000000001a9a	orl	%r8d,%eax
0000000000001a9d	cmpl	%eax,0x34(%rsi)
0000000000001aa0	jne	0x00001ac7
0000000000001aa2	imull	0x18(%rdi),%r8d
0000000000001aa7	imull	%r9d,%edx
0000000000001aab	cmpl	%edx,%r8d
0000000000001aae	je	0x00001ac7
0000000000001ab0	movl	$0x00000001,0x14(%rdi)
0000000000001ab7	jmp	0x00001ac7
0000000000001ab9	movl	$0x00000000,0x18(%rdi)
0000000000001ac0	movl	$0x00000000,0x1c(%rdi)
0000000000001ac7	movl	$0x00000000,0x20(%rdi)
0000000000001ace	movl	$0x00000000,0x24(%rdi)
0000000000001ad5	movl	$0x00000000,0x60(%rdi)
0000000000001adc	movl	$0x00000000,0x64(%rdi)
0000000000001ae3	movl	$0x00000000,0x68(%rdi)
0000000000001aea	movl	$0x00000000,0x6c(%rdi)
0000000000001af1	movl	$0x00000000,0x70(%rdi)
0000000000001af8	movl	$0x00000000,0x74(%rdi)
0000000000001aff	movl	$0x00000000,0x78(%rdi)
0000000000001b06	movl	$0x00000000,0x7c(%rdi)
0000000000001b0d	movl	$0x00000000,0x00000080(%rdi)
0000000000001b17	leave
0000000000001b18	ret
0000000000001b19	nop
__ZN22AppleIntelHDGraphicsFB18hwRegToClockParamsEPNS_11ClockParamsEjjjj:
0000000000001b1a	pushq	%rbp
0000000000001b1b	movq	%rsp,%rbp
0000000000001b1e	pushq	%rbx
0000000000001b1f	movl	%ecx,%r10d
0000000000001b22	movl	$0x00000000,0x08(%rsi)
0000000000001b29	movl	$0x00000000,0x0c(%rsi)
0000000000001b30	movl	$0x00000000,(%rsi)
0000000000001b36	movl	$0x00000000,0x04(%rsi)
0000000000001b3d	movl	$0x00000000,0x10(%rsi)
0000000000001b44	movq	$0x00000000,0x18(%rsi)
0000000000001b4c	movq	$0x00000000,0x20(%rsi)
0000000000001b54	testl	%edx,%edx
0000000000001b56	jns	0x00001c36
0000000000001b5c	movl	%edx,%edi
0000000000001b5e	shrl	$0x18,%edi
0000000000001b61	andl	$0x03,%edi
0000000000001b64	movl	%edx,%eax
0000000000001b66	shrl	$0x1a,%eax
0000000000001b69	andl	$0x03,%eax
0000000000001b6c	decl	%eax
0000000000001b6e	jne	0x00001b81
0000000000001b70	testl	%edi,%edi
0000000000001b72	jne	0x00001c36
0000000000001b78	movl	$0x0000000a,0x04(%rsi)
0000000000001b7f	jmp	0x00001b9d
0000000000001b81	testl	%edi,%edi
0000000000001b83	jne	0x00001b8e
0000000000001b85	movl	$0x0000000e,0x04(%rsi)
0000000000001b8c	jmp	0x00001b9d
0000000000001b8e	decl	%edi
0000000000001b90	jne	0x00001c36
0000000000001b96	movl	$0x00000007,0x04(%rsi)
0000000000001b9d	testl	%r9d,%r9d
0000000000001ba0	jne	0x00001ba5
0000000000001ba2	shrl	$0x10,%edx
0000000000001ba5	andl	$0x000000ff,%edx
0000000000001bab	testl	%edx,%edx
0000000000001bad	je	0x00001c36
0000000000001bb3	xorl	%ecx,%ecx
0000000000001bb5	movl	%ecx,%edi
0000000000001bb7	movl	$0x00000001,%eax
0000000000001bbc	shll	%cl,%eax
0000000000001bbe	testl	%edx,%eax
0000000000001bc0	je	0x00001bc9
0000000000001bc2	leal	0x01(%rdi),%eax
0000000000001bc5	movl	%eax,(%rsi)
0000000000001bc7	jmp	0x00001bd2
0000000000001bc9	incq	%rcx
0000000000001bcc	cmpq	$0x08,%rcx
0000000000001bd0	jne	0x00001bb5
0000000000001bd2	testl	%r9d,%r9d
0000000000001bd5	movl	%r8d,%edx
0000000000001bd8	cmovel	%r10d,%edx
0000000000001bdc	movl	%edx,%eax
0000000000001bde	shrl	$0x08,%eax
0000000000001be1	andl	$0x3f,%eax
0000000000001be4	leal	0x02(%rax),%edi
0000000000001be7	movl	%edi,0x08(%rsi)
0000000000001bea	movl	%edx,%eax
0000000000001bec	andl	$0x3f,%eax
0000000000001bef	addl	$0x02,%eax
0000000000001bf2	movl	%eax,0x0c(%rsi)
0000000000001bf5	shrl	$0x10,%edx
0000000000001bf8	andl	$0x3f,%edx
0000000000001bfb	addl	$0x02,%edx
0000000000001bfe	movl	%edx,0x10(%rsi)
0000000000001c01	leal	(%rdi,%rdi,4),%eax
0000000000001c04	addl	0x0c(%rsi),%eax
0000000000001c07	imulq	$0x07270e00,%rax,%rax
0000000000001c0e	movl	%edx,%edx
0000000000001c10	movq	%rdx,%rcx
0000000000001c13	xorl	%edx,%edx
0000000000001c15	divq	%rcx
0000000000001c18	movq	%rax,%rdi
0000000000001c1b	movq	%rax,0x18(%rsi)
0000000000001c1f	movl	0x04(%rsi),%eax
0000000000001c22	movl	%eax,%edx
0000000000001c24	imull	(%rsi),%edx
0000000000001c27	movq	%rdi,%rax
0000000000001c2a	movq	%rdx,%rbx
0000000000001c2d	xorl	%edx,%edx
0000000000001c2f	divq	%rbx
0000000000001c32	movq	%rax,0x20(%rsi)
0000000000001c36	popq	%rbx
0000000000001c37	leave
0000000000001c38	ret
0000000000001c39	nop
__ZN22AppleIntelHDGraphicsFB16hwUpdateRegCacheEi:
0000000000001c3a	pushq	%rbp
0000000000001c3b	movq	%rsp,%rbp
0000000000001c3e	pushq	%r12
0000000000001c40	pushq	%rbx
0000000000001c41	subq	$0x30,%rsp
0000000000001c45	movq	%rdi,%r12
0000000000001c48	movq	0x00000098(%rdi),%rax
0000000000001c4f	addq	$0x00002020,%eax
0000000000001c55	movl	(%rax),%eax
0000000000001c57	movl	%eax,0x000003c4(%rdi)
0000000000001c5d	movq	0x00000098(%rdi),%rax
0000000000001c64	addq	$0x000020a0,%eax
0000000000001c6a	movl	(%rax),%eax
0000000000001c6c	movl	%eax,0x000003c8(%rdi)
0000000000001c72	movq	0x00000098(%rdi),%rax
0000000000001c79	addq	$0x000020a8,%eax
0000000000001c7f	movl	(%rax),%eax
0000000000001c81	movl	%eax,0x000003cc(%rdi)
0000000000001c87	movq	0x00000098(%rdi),%rax
0000000000001c8e	addq	$0x000020b4,%eax
0000000000001c94	movl	(%rax),%eax
0000000000001c96	movl	%eax,0x000003d0(%rdi)
0000000000001c9c	movq	0x00000098(%rdi),%rax
0000000000001ca3	addq	$0x0004401c,%eax
0000000000001ca9	movl	(%rax),%eax
0000000000001cab	movl	%eax,0x000003d4(%rdi)
0000000000001cb1	movq	0x00000098(%rdi),%rax
0000000000001cb8	addq	$0x00044014,%eax
0000000000001cbe	movl	(%rax),%eax
0000000000001cc0	movl	%eax,0x000003d8(%rdi)
0000000000001cc6	movq	0x00000098(%rdi),%rax
0000000000001ccd	addq	$0x0004400c,%eax
0000000000001cd3	movl	(%rax),%eax
0000000000001cd5	movl	%eax,0x000003dc(%rdi)
0000000000001cdb	movq	0x00000098(%rdi),%rax
0000000000001ce2	addq	$0x00044004,%eax
0000000000001ce8	movl	(%rax),%eax
0000000000001cea	movl	%eax,0x000003e0(%rdi)
0000000000001cf0	movq	0x00000098(%rdi),%rax
0000000000001cf7	addq	$0x000c400c,%eax
0000000000001cfd	movl	(%rax),%eax
0000000000001cff	movl	%eax,0x000003e4(%rdi)
0000000000001d05	movq	0x00000098(%rdi),%rax
0000000000001d0c	addq	$0x000c4004,%eax
0000000000001d12	movl	(%rax),%eax
0000000000001d14	movl	%eax,0x000003e8(%rdi)
0000000000001d1a	movq	0x00000098(%rdi),%rax
0000000000001d21	addq	$0x000e1100,%eax
0000000000001d27	movl	(%rax),%eax
0000000000001d29	movl	%eax,0x00000388(%rdi)
0000000000001d2f	movq	0x00000098(%rdi),%rax
0000000000001d36	addq	$0x000e1180,%eax
0000000000001d3c	movl	(%rax),%eax
0000000000001d3e	movl	%eax,0x0000038c(%rdi)
0000000000001d44	movq	0x00000098(%rdi),%rax
0000000000001d4b	addq	$0x00041000,%eax
0000000000001d51	movl	(%rax),%eax
0000000000001d53	movl	%eax,0x00000390(%rdi)
0000000000001d59	movq	0x00000098(%rdi),%rax
0000000000001d60	addq	$0x000c7208,%eax
0000000000001d66	movl	(%rax),%eax
0000000000001d68	movl	%eax,0x000003ac(%rdi)
0000000000001d6e	movq	0x00000098(%rdi),%rax
0000000000001d75	addq	$0x000c720c,%eax
0000000000001d7b	movl	(%rax),%eax
0000000000001d7d	movl	%eax,0x000003b0(%rdi)
0000000000001d83	movq	0x00000098(%rdi),%rax
0000000000001d8a	addq	$0x000c7210,%eax
0000000000001d90	movl	(%rax),%eax
0000000000001d92	movl	%eax,0x000003b4(%rdi)
0000000000001d98	movq	0x00000098(%rdi),%rax
0000000000001d9f	addq	$0x000c7204,%eax
0000000000001da5	movl	(%rax),%eax
0000000000001da7	movl	%eax,0x000003b8(%rdi)
0000000000001dad	movq	0x00000098(%rdi),%rax
0000000000001db4	addq	$0x00068000,%eax
0000000000001dba	movl	(%rax),%eax
0000000000001dbc	movl	%eax,0x000003bc(%rdi)
0000000000001dc2	movq	0x00000098(%rdi),%rax
0000000000001dc9	addq	$0x00068004,%eax
0000000000001dcf	movl	(%rax),%eax
0000000000001dd1	movl	%eax,0x000003c0(%rdi)
0000000000001dd7	movq	0x00000098(%rdi),%rax
0000000000001dde	addq	$0x00045100,%eax
0000000000001de4	movl	(%rax),%eax
0000000000001de6	movl	%eax,0x000003f4(%rdi)
0000000000001dec	movq	0x00000098(%rdi),%rax
0000000000001df3	addq	$0x00045104,%eax
0000000000001df9	movl	(%rax),%eax
0000000000001dfb	movl	%eax,0x000003f8(%rdi)
0000000000001e01	movq	0x00000098(%rdi),%rax
0000000000001e08	addq	$0x0004510c,%eax
0000000000001e0e	movl	(%rax),%eax
0000000000001e10	movl	%eax,0x00000400(%rdi)
0000000000001e16	movq	0x00000098(%rdi),%rax
0000000000001e1d	addq	$0x00045108,%eax
0000000000001e23	movl	(%rax),%eax
0000000000001e25	movl	%eax,0x000003fc(%rdi)
0000000000001e2b	movq	0x00000098(%rdi),%rax
0000000000001e32	addq	$0x00011222,%eax
0000000000001e38	movzwl	(%rax),%eax
0000000000001e3b	movzwl	%ax,%eax
0000000000001e3e	movl	%eax,0x00000404(%rdi)
0000000000001e44	movq	0x00000098(%rdi),%rax
0000000000001e4b	addq	$0x00045000,%eax
0000000000001e51	movl	(%rax),%eax
0000000000001e53	movl	%eax,0x000003f0(%rdi)
0000000000001e59	testl	%esi,%esi
0000000000001e5b	je	0x00001fd1
0000000000001e61	movq	0x00000098(%rdi),%rax
0000000000001e68	addq	$0x00061000,%eax
0000000000001e6e	movl	(%rax),%eax
0000000000001e70	movslq	%esi,%rbx
0000000000001e73	imulq	$0x000000f0,%rbx,%rbx
0000000000001e7a	addq	%rdi,%rbx
0000000000001e7d	leaq	0x000001a0(%rbx),%rdx
0000000000001e84	movl	%eax,0x08(%rdx)
0000000000001e87	movq	0x00000098(%rdi),%rax
0000000000001e8e	addq	$0x00061004,%eax
0000000000001e94	movl	(%rax),%eax
0000000000001e96	movl	%eax,0x0c(%rdx)
0000000000001e99	movq	0x00000098(%rdi),%rax
0000000000001ea0	addq	$0x00061008,%eax
0000000000001ea6	movl	(%rax),%eax
0000000000001ea8	movl	%eax,0x10(%rdx)
0000000000001eab	movq	0x00000098(%rdi),%rax
0000000000001eb2	addq	$0x0006100c,%eax
0000000000001eb8	movl	(%rax),%eax
0000000000001eba	movl	%eax,0x14(%rdx)
0000000000001ebd	movq	0x00000098(%rdi),%rax
0000000000001ec4	addq	$0x00061010,%eax
0000000000001eca	movl	(%rax),%eax
0000000000001ecc	leaq	0x000001b0(%rbx),%rsi
0000000000001ed3	movl	%eax,0x08(%rsi)
0000000000001ed6	movq	0x00000098(%rdi),%rax
0000000000001edd	addq	$0x00061014,%eax
0000000000001ee3	movl	(%rax),%eax
0000000000001ee5	movl	%eax,0x0c(%rsi)
0000000000001ee8	movq	0x00000098(%rdi),%rax
0000000000001eef	addq	$0x0006101c,%eax
0000000000001ef5	movl	(%rax),%eax
0000000000001ef7	leaq	0x000001c0(%rbx),%rdi
0000000000001efe	movl	%eax,0x0c(%rdi)
0000000000001f01	movq	0x00000098(%r12),%rax
0000000000001f09	addq	$0x00071008,%eax
0000000000001f0f	movl	(%rax),%eax
0000000000001f11	movl	%eax,0x10(%rdi)
0000000000001f14	movq	0x00000098(%r12),%rax
0000000000001f1c	addq	$0x00071180,%eax
0000000000001f22	movl	(%rax),%eax
0000000000001f24	movl	%eax,0x000001e4(%rbx)
0000000000001f2a	movq	0x00000098(%r12),%rax
0000000000001f32	addq	$0x00071188,%eax
0000000000001f38	movl	(%rax),%eax
0000000000001f3a	leaq	0x000001e0(%rbx),%rdx
0000000000001f41	movl	%eax,0x10(%rdx)
0000000000001f44	movq	0x00000098(%r12),%rax
0000000000001f4c	addq	$0x0007119c,%eax
0000000000001f52	movl	(%rax),%eax
0000000000001f54	movl	%eax,0x14(%rdx)
0000000000001f57	movq	0x00000098(%r12),%rax
0000000000001f5f	addq	$0x000c6018,%eax
0000000000001f65	movl	(%rax),%edx
0000000000001f67	movl	%edx,0x10(%rsi)
0000000000001f6a	movq	0x00000098(%r12),%rax
0000000000001f72	addq	$0x000c6048,%eax
0000000000001f78	movl	(%rax),%ecx
0000000000001f7a	movl	%ecx,0x14(%rsi)
0000000000001f7d	movq	0x00000098(%r12),%rax
0000000000001f85	addq	$0x000c604c,%eax
0000000000001f8b	movl	(%rax),%r8d
0000000000001f8e	movl	%r8d,0x08(%rdi)
0000000000001f92	leaq	0xc0(%rbp),%rsi
0000000000001f96	xorl	%r9d,%r9d
0000000000001f99	movq	%r12,%rdi
0000000000001f9c	callq	0x100001b1a
0000000000001fa1	movq	0xe0(%rbp),%rax
0000000000001fa5	movq	%rax,0x00000290(%rbx)
0000000000001fac	movq	0x00000098(%r12),%rax
0000000000001fb4	addq	$0x000700c0,%eax
0000000000001fba	movl	(%rax),%eax
0000000000001fbc	andl	$0x30000000,%eax
0000000000001fc1	orl	$0x10000000,%eax
0000000000001fc6	movl	%eax,0x000001fc(%rbx)
0000000000001fcc	jmp	0x0000230e
0000000000001fd1	movq	0x00000098(%rdi),%rax
0000000000001fd8	addq	$0x00060000,%eax
0000000000001fde	movl	(%rax),%eax
0000000000001fe0	movl	%eax,0x000001a8(%rdi)
0000000000001fe6	movq	0x00000098(%rdi),%rax
0000000000001fed	addq	$0x00060004,%eax
0000000000001ff3	movl	(%rax),%eax
0000000000001ff5	movl	%eax,0x000001ac(%rdi)
0000000000001ffb	movq	0x00000098(%rdi),%rax
0000000000002002	addq	$0x00060008,%eax
0000000000002008	movl	(%rax),%eax
000000000000200a	movl	%eax,0x000001b0(%rdi)
0000000000002010	movq	0x00000098(%rdi),%rax
0000000000002017	addq	$0x0006000c,%eax
000000000000201d	movl	(%rax),%eax
000000000000201f	movl	%eax,0x000001b4(%rdi)
0000000000002025	movq	0x00000098(%rdi),%rax
000000000000202c	addq	$0x00060010,%eax
0000000000002032	movl	(%rax),%eax
0000000000002034	movl	%eax,0x000001b8(%rdi)
000000000000203a	movq	0x00000098(%rdi),%rax
0000000000002041	addq	$0x00060014,%eax
0000000000002047	movl	(%rax),%eax
0000000000002049	movl	%eax,0x000001bc(%rdi)
000000000000204f	movq	0x00000098(%rdi),%rax
0000000000002056	addq	$0x0006001c,%eax
000000000000205c	movl	(%rax),%eax
000000000000205e	movl	%eax,0x000001cc(%rdi)
0000000000002064	movq	0x00000098(%rdi),%rax
000000000000206b	addq	$0x00070008,%eax
0000000000002071	movl	(%rax),%eax
0000000000002073	movl	%eax,0x000001d0(%rdi)
0000000000002079	movq	0x00000098(%rdi),%rax
0000000000002080	addq	$0x00070180,%eax
0000000000002086	movl	(%rax),%eax
0000000000002088	movl	%eax,0x000001e4(%rdi)
000000000000208e	movq	0x00000098(%rdi),%rax
0000000000002095	addq	$0x00070188,%eax
000000000000209b	movl	(%rax),%eax
000000000000209d	movl	%eax,0x000001f0(%rdi)
00000000000020a3	movq	0x00000098(%rdi),%rax
00000000000020aa	addq	$0x0007019c,%eax
00000000000020b0	movl	(%rax),%eax
00000000000020b2	movl	%eax,0x000001f4(%rdi)
00000000000020b8	movq	0x00000098(%rdi),%rax
00000000000020bf	addq	$0x000c6014,%eax
00000000000020c5	movl	(%rax),%edx
00000000000020c7	movl	%edx,0x000001c0(%rdi)
00000000000020cd	movq	0x00000098(%rdi),%rax
00000000000020d4	addq	$0x000c6040,%eax
00000000000020da	movl	(%rax),%ecx
00000000000020dc	movl	%ecx,0x000001c4(%rdi)
00000000000020e2	movq	0x00000098(%rdi),%rax
00000000000020e9	addq	$0x000c6044,%eax
00000000000020ef	movl	(%rax),%r8d
00000000000020f2	movl	%r8d,0x000001c8(%rdi)
00000000000020f9	leaq	0xc0(%rbp),%rsi
00000000000020fd	xorl	%r9d,%r9d
0000000000002100	callq	0x100001b1a
0000000000002105	movq	0xe0(%rbp),%rax
0000000000002109	movq	%rax,0x00000290(%r12)
0000000000002111	movq	0x00000098(%r12),%rax
0000000000002119	addq	$0x00070080,%eax
000000000000211f	movl	(%rax),%eax
0000000000002121	andl	$0x30000000,%eax
0000000000002126	movl	%eax,0x000001fc(%r12)
000000000000212e	movq	0x00000098(%r12),%rax
0000000000002136	addq	$0x00070184,%eax
000000000000213c	movl	(%rax),%eax
000000000000213e	movl	%eax,0x000001e8(%r12)
0000000000002146	movq	0x00000098(%r12),%rax
000000000000214e	addq	$0x000701a4,%eax
0000000000002154	movl	(%rax),%eax
0000000000002156	movl	%eax,0x000001ec(%r12)
000000000000215e	movq	0x00000098(%r12),%rax
0000000000002166	addq	$0x00060100,%eax
000000000000216c	movl	(%rax),%eax
000000000000216e	movl	%eax,0x00000210(%r12)
0000000000002176	movq	0x00000098(%r12),%rax
000000000000217e	addq	$0x000f000c,%eax
0000000000002184	movl	(%rax),%eax
0000000000002186	movl	%eax,0x00000214(%r12)
000000000000218e	movq	0x00000098(%r12),%rax
0000000000002196	addq	$0x000f0008,%eax
000000000000219c	movl	(%rax),%eax
000000000000219e	movl	%eax,0x00000218(%r12)
00000000000021a6	movq	0x00000098(%r12),%rax
00000000000021ae	addq	$0x00068070,%eax
00000000000021b4	movl	(%rax),%eax
00000000000021b6	movl	%eax,0x000001d8(%r12)
00000000000021be	movq	0x00000098(%r12),%rax
00000000000021c6	addq	$0x00068074,%eax
00000000000021cc	movl	(%rax),%eax
00000000000021ce	movl	%eax,0x000001dc(%r12)
00000000000021d6	movq	0x00000098(%r12),%rax
00000000000021de	addq	$0x00068080,%eax
00000000000021e4	movl	(%rax),%eax
00000000000021e6	movl	%eax,0x000001e0(%r12)
00000000000021ee	movq	0x00000098(%r12),%rax
00000000000021f6	addq	$0x00060028,%eax
00000000000021fc	movl	(%rax),%eax
00000000000021fe	movl	%eax,0x0000021c(%r12)
0000000000002206	movq	0x00000098(%r12),%rax
000000000000220e	addq	$0x00060050,%eax
0000000000002214	movl	(%rax),%eax
0000000000002216	movl	%eax,0x00000220(%r12)
000000000000221e	movq	0x00000098(%r12),%rax
0000000000002226	addq	$0x00060054,%eax
000000000000222c	movl	(%rax),%eax
000000000000222e	movl	%eax,0x00000224(%r12)
0000000000002236	movq	0x00000098(%r12),%rax
000000000000223e	addq	$0x00060058,%eax
0000000000002244	movl	(%rax),%eax
0000000000002246	movl	%eax,0x00000228(%r12)
000000000000224e	movq	0x00000098(%r12),%rax
0000000000002256	addq	$0x00049010,%eax
000000000000225c	movl	(%rax),%eax
000000000000225e	movl	%eax,0x0000022c(%r12)
0000000000002266	movq	0x00000098(%r12),%rax
000000000000226e	addq	$0x00049014,%eax
0000000000002274	movl	(%rax),%eax
0000000000002276	movl	%eax,0x00000230(%r12)
000000000000227e	movq	0x00000098(%r12),%rax
0000000000002286	addq	$0x00049018,%eax
000000000000228c	movl	(%rax),%eax
000000000000228e	movl	%eax,0x00000234(%r12)
0000000000002296	movq	0x00000098(%r12),%rax
000000000000229e	addq	$0x0004901c,%eax
00000000000022a4	movl	(%rax),%eax
00000000000022a6	movl	%eax,0x00000238(%r12)
00000000000022ae	movq	0x00000098(%r12),%rax
00000000000022b6	addq	$0x00049020,%eax
00000000000022bc	movl	(%rax),%eax
00000000000022be	movl	%eax,0x0000023c(%r12)
00000000000022c6	movq	0x00000098(%r12),%rax
00000000000022ce	addq	$0x00049024,%eax
00000000000022d4	movl	(%rax),%eax
00000000000022d6	movl	%eax,0x00000240(%r12)
00000000000022de	movq	0x00000098(%r12),%rax
00000000000022e6	addq	$0x00049028,%eax
00000000000022ec	movl	(%rax),%eax
00000000000022ee	movl	%eax,0x00000244(%r12)
00000000000022f6	movq	0x00000098(%r12),%rax
00000000000022fe	addq	$0x000c6200,%eax
0000000000002304	movl	(%rax),%eax
0000000000002306	movl	%eax,0x00000248(%r12)
000000000000230e	addq	$0x30,%rsp
0000000000002312	popq	%rbx
0000000000002313	popq	%r12
0000000000002315	leave
0000000000002316	ret
0000000000002317	nop
__ZN22AppleIntelHDGraphicsFB25ComputeDPOptimalLaneCountEPK29IODetailedTimingInformationV2jb:
0000000000002318	pushq	%rbp
0000000000002319	movq	%rsp,%rbp
000000000000231c	movl	%edx,%edi
000000000000231e	movq	0x28(%rsi),%rsi
0000000000002322	testb	%cl,%cl
0000000000002324	je	0x00002342
0000000000002326	leaq	(%rsi,%rsi,4),%rdx
000000000000232a	leaq	(%rdx,%rdx,4),%rdx
000000000000232e	movq	$0x346dc5d63886594b,%rax
0000000000002338	mulq	%rdx
000000000000233b	shrq	$0x0b,%rdx
000000000000233f	addq	%rdx,%rsi
0000000000002342	movl	%edi,%eax
0000000000002344	imulq	%rax,%rsi
0000000000002348	movq	$0xfe843e9eb1289af3,%rdx
0000000000002352	movq	%rsi,%rax
0000000000002355	mulq	%rdx
0000000000002358	shrq	$0x1f,%rdx
000000000000235c	movl	%edx,%eax
000000000000235e	movl	%edx,%ecx
0000000000002360	cmpq	%rdx,%rcx
0000000000002363	adcl	$0x00,%eax
0000000000002366	leave
0000000000002367	ret
__ZN22AppleIntelHDGraphicsFB22ProgramFDITransTimingsEh:
0000000000002368	pushq	%rbp
0000000000002369	movq	%rsp,%rbp
000000000000236c	movq	0x00000698(%rdi),%rcx
0000000000002373	movl	(%rcx),%edx
0000000000002375	movl	0x04(%rcx),%eax
0000000000002378	testl	%eax,%eax
000000000000237a	je	0x00002507
0000000000002380	movl	%eax,%r8d
0000000000002383	movl	0x08(%rcx),%r10d
0000000000002387	movzbl	0x14(%rcx),%eax
000000000000238b	imulq	%r8,%rax
000000000000238f	leaq	0x00000000(,%rax,8),%r9
0000000000002397	testq	%r9,%r9
000000000000239a	je	0x00002507
00000000000023a0	movl	%edx,%r11d
00000000000023a3	movl	%r10d,%r10d
00000000000023a6	imulq	%r11,%r10
00000000000023aa	movq	%r10,%rax
00000000000023ad	xorl	%edx,%edx
00000000000023af	divq	%r8
00000000000023b2	movq	%rax,%r8
00000000000023b5	movzbl	0x19(%rcx),%eax
00000000000023b9	imulq	%r11,%rax
00000000000023bd	movl	0x0c(%rcx),%edx
00000000000023c0	imulq	%rdx,%rax
00000000000023c4	xorl	%edx,%edx
00000000000023c6	divq	%r9
00000000000023c9	movl	%eax,%edx
00000000000023cb	decb	%dh
00000000000023ce	jne	0x00002470
00000000000023d4	movl	0x10(%rcx),%eax
00000000000023d7	decl	%eax
00000000000023d9	shll	$0x19,%eax
00000000000023dc	orl	%eax,%edx
00000000000023de	movq	0x00000098(%rdi),%rax
00000000000023e5	movl	%edx,0x00060030(%rax)
00000000000023eb	movq	0x00000698(%rdi),%rax
00000000000023f2	movl	0x0c(%rax),%edx
00000000000023f5	movq	0x00000098(%rdi),%rax
00000000000023fc	movl	%edx,0x00060034(%rax)
0000000000002402	movq	0x00000098(%rdi),%rax
0000000000002409	movl	$0x00000000,0x00060038(%rax)
0000000000002413	movq	0x00000098(%rdi),%rax
000000000000241a	movl	$0x00000000,0x0006003c(%rax)
0000000000002424	movq	0x00000098(%rdi),%rax
000000000000242b	movl	%r8d,0x00060040(%rax)
0000000000002432	movq	0x00000698(%rdi),%rax
0000000000002439	movl	0x08(%rax),%edx
000000000000243c	movq	0x00000098(%rdi),%rax
0000000000002443	movl	%edx,0x00060044(%rax)
0000000000002449	movq	0x00000098(%rdi),%rax
0000000000002450	movl	$0x00000000,0x00060048(%rax)
000000000000245a	movq	0x00000098(%rdi),%rax
0000000000002461	movl	$0x00000000,0x0006004c(%rax)
000000000000246b	jmp	0x00002507
0000000000002470	movl	0x10(%rcx),%eax
0000000000002473	decl	%eax
0000000000002475	shll	$0x19,%eax
0000000000002478	orl	%eax,%edx
000000000000247a	movq	0x00000098(%rdi),%rax
0000000000002481	movl	%edx,0x000e0030(%rax)
0000000000002487	movq	0x00000698(%rdi),%rax
000000000000248e	movl	0x0c(%rax),%edx
0000000000002491	movq	0x00000098(%rdi),%rax
0000000000002498	movl	%edx,0x000e0034(%rax)
000000000000249e	movq	0x00000098(%rdi),%rax
00000000000024a5	movl	$0x00000000,0x000e0038(%rax)
00000000000024af	movq	0x00000098(%rdi),%rax
00000000000024b6	movl	$0x00000000,0x000e003c(%rax)
00000000000024c0	movq	0x00000098(%rdi),%rax
00000000000024c7	movl	%r8d,0x000e0040(%rax)
00000000000024ce	movq	0x00000698(%rdi),%rax
00000000000024d5	movl	0x08(%rax),%edx
00000000000024d8	movq	0x00000098(%rdi),%rax
00000000000024df	movl	%edx,0x000e0044(%rax)
00000000000024e5	movq	0x00000098(%rdi),%rax
00000000000024ec	movl	$0x00000000,0x000e0048(%rax)
00000000000024f6	movq	0x00000098(%rdi),%rax
00000000000024fd	movl	$0x00000000,0x000e004c(%rax)
0000000000002507	xorl	%eax,%eax
0000000000002509	leave
000000000000250a	ret
000000000000250b	nop
__ZN22AppleIntelHDGraphicsFB15SetCoefficientsEPNS_10CRTCParamsE:
000000000000250c	pushq	%rbp
000000000000250d	movq	%rsp,%rbp
0000000000002510	movl	0x24(%rsi),%edx
0000000000002513	movl	%edx,%eax
0000000000002515	shrl	$0x10,%eax
0000000000002518	andl	$0x00000fff,%eax
000000000000251d	cmpl	$0x00000400,%eax
0000000000002522	ja	0x00002540
0000000000002524	andl	$0x00000fff,%edx
000000000000252a	leaq	0x000122cf(%rip),%r10
0000000000002531	leaq	0x000124c8(%rip),%r9
0000000000002538	cmpl	$0x00000300,%edx
000000000000253e	jbe	0x0000254e
0000000000002540	leaq	0x000123b9(%rip),%r10
0000000000002547	leaq	0x000125b2(%rip),%r9
000000000000254e	xorl	%ecx,%ecx
0000000000002550	leaq	0x000120a9(%rip),%r8
0000000000002557	leaq	0x000121a2(%rip),%rsi
000000000000255e	movl	(%rcx,%r8),%edx
0000000000002562	leaq	0x00068100(%rcx),%rax
0000000000002569	addq	0x00000098(%rdi),%rax
0000000000002570	movl	%edx,(%rax)
0000000000002572	movl	(%rcx,%rsi),%edx
0000000000002575	leaq	0x00068200(%rcx),%rax
000000000000257c	addq	0x00000098(%rdi),%rax
0000000000002583	movl	%edx,(%rax)
0000000000002585	movl	(%r10,%rcx),%edx
0000000000002589	leaq	0x00068300(%rcx),%rax
0000000000002590	addq	0x00000098(%rdi),%rax
0000000000002597	movl	%edx,(%rax)
0000000000002599	movl	(%r9,%rcx),%edx
000000000000259d	leaq	0x00068400(%rcx),%rax
00000000000025a4	addq	0x00000098(%rdi),%rax
00000000000025ab	movl	%edx,(%rax)
00000000000025ad	addq	$0x04,%rcx
00000000000025b1	cmpq	$0x000000f0,%rcx
00000000000025b8	jne	0x0000255e
00000000000025ba	leave
00000000000025bb	ret
__ZN22AppleIntelHDGraphicsFB16CalculateTimingsEiPK29IODetailedTimingInformationV2PNS_10CRTCParamsE:
00000000000025bc	pushq	%rbp
00000000000025bd	movq	%rsp,%rbp
00000000000025c0	pushq	%r15
00000000000025c2	pushq	%r14
00000000000025c4	pushq	%r13
00000000000025c6	pushq	%r12
00000000000025c8	pushq	%rbx
00000000000025c9	subq	$0x18,%rsp
00000000000025cd	movq	%rdx,%r11
00000000000025d0	movq	%rcx,%rbx
00000000000025d3	movl	0x00000194(%rdi),%eax
00000000000025d9	movl	%esi,%edx
00000000000025db	cmpl	$0x01,%eax
00000000000025de	jle	0x000025e6
00000000000025e0	xorl	$0x01,%edx
00000000000025e3	andl	$0x01,%edx
00000000000025e6	xorl	%ecx,%ecx
00000000000025e8	cmpl	%eax,%esi
00000000000025ea	jae	0x000025f8
00000000000025ec	subl	%esi,%eax
00000000000025ee	decl	%eax
00000000000025f0	movq	0x00000198(%rdi,%rax,8),%rcx
00000000000025f8	movl	0x00000210(%rcx),%r15d
00000000000025ff	cmpb	$0x00,0x00000164(%rdi)
0000000000002606	je	0x00002636
0000000000002608	movslq	%esi,%rax
000000000000260b	movq	0x00000198(%rdi,%rax,8),%rax
0000000000002613	cmpb	$0x00,0x0000020d(%rax)
000000000000261a	je	0x00002636
000000000000261c	movl	%edx,%eax
000000000000261e	movq	0x00000198(%rdi,%rax,8),%rax
0000000000002626	movl	0x000004b4(%rax),%r13d
000000000000262d	movl	0x000004b8(%rax),%r14d
0000000000002634	jmp	0x0000263e
0000000000002636	movl	0x18(%r11),%r13d
000000000000263a	movl	0x1c(%r11),%r14d
000000000000263e	cmpl	$0x03,%r15d
0000000000002642	je	0x0000264f
0000000000002644	testb	$0x10,0x14(%r11)
0000000000002649	je	0x00002702
000000000000264f	testl	%r13d,%r13d
0000000000002652	je	0x00002702
0000000000002658	testl	%r14d,%r14d
000000000000265b	je	0x00002702
0000000000002661	testb	$0x01,0x14(%r11)
0000000000002666	jne	0x00002702
000000000000266c	cmpl	$0x03,%r15d
0000000000002670	je	0x000026a9
0000000000002672	movl	$0x00000000,0xc0(%rbp)
0000000000002679	movl	$0x00000000,0xc4(%rbp)
0000000000002680	movl	$0x00000000,0xc8(%rbp)
0000000000002687	movl	$0x00000000,0xcc(%rbp)
000000000000268e	movl	$0x00000000,0xd0(%rbp)
0000000000002695	movl	$0x00000000,0xd4(%rbp)
000000000000269c	movl	0x40(%r11),%r10d
00000000000026a0	movl	0x50(%r11),%r12d
00000000000026a4	jmp	0x00002732
00000000000026a9	movl	0x40(%r11),%eax
00000000000026ad	movl	%eax,0xc8(%rbp)
00000000000026b0	movl	%eax,%r10d
00000000000026b3	movl	0x50(%r11),%eax
00000000000026b7	movl	%eax,0xcc(%rbp)
00000000000026ba	movl	%eax,%r12d
00000000000026bd	movl	%r10d,%eax
00000000000026c0	imull	%r14d,%eax
00000000000026c4	xorl	%edx,%edx
00000000000026c6	divl	%r13d
00000000000026c9	andl	$0xfe,%eax
00000000000026cc	movl	%eax,0xd4(%rbp)
00000000000026cf	cmpl	%eax,%r12d
00000000000026d2	jb	0x000026da
00000000000026d4	movl	%r10d,0xd0(%rbp)
00000000000026d8	jmp	0x000026f2
00000000000026da	movl	0xcc(%rbp),%eax
00000000000026dd	imull	%r13d,%eax
00000000000026e1	xorl	%edx,%edx
00000000000026e3	divl	%r14d
00000000000026e6	andl	$0xfe,%eax
00000000000026e9	movl	%eax,0xd0(%rbp)
00000000000026ec	movl	0xcc(%rbp),%eax
00000000000026ef	movl	%eax,0xd4(%rbp)
00000000000026f2	movl	$0x00000000,0xc0(%rbp)
00000000000026f9	movl	$0x00000000,0xc4(%rbp)
0000000000002700	jmp	0x00002732
0000000000002702	movl	0x40(%r11),%eax
0000000000002706	movl	%eax,0xc0(%rbp)
0000000000002709	movl	%eax,%r10d
000000000000270c	movl	0x50(%r11),%eax
0000000000002710	movl	%eax,0xc4(%rbp)
0000000000002713	movl	%eax,%r12d
0000000000002716	movl	$0x00000000,0xc8(%rbp)
000000000000271d	movl	$0x00000000,0xcc(%rbp)
0000000000002724	movl	$0x00000000,0xd0(%rbp)
000000000000272b	movl	$0x00000000,0xd4(%rbp)
0000000000002732	movl	%r10d,%edi
0000000000002735	addl	0x48(%r11),%edi
0000000000002739	movl	0x4c(%r11),%edx
000000000000273d	movl	0x54(%r11),%ecx
0000000000002741	movl	%r12d,%r9d
0000000000002744	addl	0x58(%r11),%r9d
0000000000002748	movl	0x5c(%r11),%esi
000000000000274c	leal	0xff(%r10),%r8d
0000000000002750	addl	0x44(%r11),%r10d
0000000000002754	leal	0xff(%r10),%eax
0000000000002758	shll	$0x10,%eax
000000000000275b	orl	%r8d,%eax
000000000000275e	movl	%eax,(%rbx)
0000000000002760	movl	%eax,0x04(%rbx)
0000000000002763	leal	0xff(%rdi,%rdx),%edx
0000000000002767	shll	$0x10,%edx
000000000000276a	decl	%edi
000000000000276c	orl	%edi,%edx
000000000000276e	movl	%edx,0x08(%rbx)
0000000000002771	leal	0xff(%r12),%eax
0000000000002776	leal	0xff(%rcx,%r12),%ecx
000000000000277b	shll	$0x10,%ecx
000000000000277e	orl	%eax,%ecx
0000000000002780	movl	%ecx,0x0c(%rbx)
0000000000002783	movl	%ecx,0x10(%rbx)
0000000000002786	leal	0xff(%r9,%rsi),%esi
000000000000278b	shll	$0x10,%esi
000000000000278e	decl	%r9d
0000000000002791	orl	%r9d,%esi
0000000000002794	movl	%esi,0x14(%rbx)
0000000000002797	shll	$0x10,%r8d
000000000000279b	orl	%eax,%r8d
000000000000279e	movl	%r8d,0x24(%rbx)
00000000000027a2	movl	$0x00000000,0x30(%rbx)
00000000000027a9	movl	$0x00000000,0x38(%rbx)
00000000000027b0	movl	$0x00000000,0x34(%rbx)
00000000000027b7	cmpl	$0x03,%r15d
00000000000027bb	jne	0x00002828
00000000000027bd	testl	%r13d,%r13d
00000000000027c0	je	0x00002828
00000000000027c2	testl	%r14d,%r14d
00000000000027c5	je	0x00002828
00000000000027c7	leal	0xff(%r13),%eax
00000000000027cb	shll	$0x10,%eax
00000000000027ce	leal	0xff(%r14),%edx
00000000000027d2	orl	%edx,%eax
00000000000027d4	movl	%eax,0x24(%rbx)
00000000000027d7	movl	$0x80800000,0x38(%rbx)
00000000000027de	testb	$0x01,0x14(%r11)
00000000000027e3	jne	0x00002816
00000000000027e5	movl	0xd0(%rbp),%eax
00000000000027e8	subl	%eax,0xc8(%rbp)
00000000000027eb	shrl	0xc8(%rbp)
00000000000027ee	shll	$0x10,0xc8(%rbp)
00000000000027f2	movl	0xd4(%rbp),%eax
00000000000027f5	subl	%eax,0xcc(%rbp)
00000000000027f8	shrl	0xcc(%rbp)
00000000000027fb	movl	0xcc(%rbp),%eax
00000000000027fe	orl	%eax,0xc8(%rbp)
0000000000002801	movl	0xc8(%rbp),%eax
0000000000002804	movl	%eax,0x30(%rbx)
0000000000002807	shll	$0x10,0xd0(%rbp)
000000000000280b	movl	0xd4(%rbp),%eax
000000000000280e	orl	%eax,0xd0(%rbp)
0000000000002811	movl	0xd0(%rbp),%eax
0000000000002814	jmp	0x00002823
0000000000002816	shll	$0x10,0xc0(%rbp)
000000000000281a	movl	0xc4(%rbp),%eax
000000000000281d	orl	%eax,0xc0(%rbp)
0000000000002820	movl	0xc0(%rbp),%eax
0000000000002823	movl	%eax,0x34(%rbx)
0000000000002826	jmp	0x0000283a
0000000000002828	movl	0xc0(%rbp),%eax
000000000000282b	decl	%eax
000000000000282d	shll	$0x10,%eax
0000000000002830	movl	0xc4(%rbp),%edx
0000000000002833	decl	%edx
0000000000002835	orl	%edx,%eax
0000000000002837	movl	%eax,0x24(%rbx)
000000000000283a	addq	$0x18,%rsp
000000000000283e	popq	%rbx
000000000000283f	popq	%r12
0000000000002841	popq	%r13
0000000000002843	popq	%r14
0000000000002845	popq	%r15
0000000000002847	leave
0000000000002848	ret
0000000000002849	nop
__ZN22AppleIntelHDGraphicsFB15paramsFbCompareEPNS_10CRTCParamsES1_:
000000000000284a	pushq	%rbp
000000000000284b	movq	%rsp,%rbp
000000000000284e	movl	(%rsi),%eax
0000000000002850	cmpl	(%rdx),%eax
0000000000002852	jne	0x000028c2
0000000000002854	movl	0x0c(%rsi),%eax
0000000000002857	cmpl	0x0c(%rdx),%eax
000000000000285a	jne	0x000028c2
000000000000285c	movl	0x04(%rsi),%eax
000000000000285f	cmpl	0x04(%rdx),%eax
0000000000002862	jne	0x000028c2
0000000000002864	movl	0x10(%rsi),%eax
0000000000002867	cmpl	0x10(%rdx),%eax
000000000000286a	jne	0x000028c2
000000000000286c	movl	0x08(%rsi),%eax
000000000000286f	cmpl	0x08(%rdx),%eax
0000000000002872	jne	0x000028c2
0000000000002874	movl	0x14(%rsi),%eax
0000000000002877	cmpl	0x14(%rdx),%eax
000000000000287a	jne	0x000028c2
000000000000287c	movl	0x74(%rsi),%eax
000000000000287f	cmpl	0x74(%rdx),%eax
0000000000002882	jne	0x000028c2
0000000000002884	movl	0x000000a0(%rsi),%eax
000000000000288a	cmpl	0x000000a0(%rdx),%eax
0000000000002890	jne	0x000028c2
0000000000002892	movq	0x78(%rdx),%rax
0000000000002896	cmpq	%rax,0x78(%rsi)
000000000000289a	jne	0x000028c2
000000000000289c	movl	0x00000080(%rsi),%eax
00000000000028a2	cmpl	0x00000080(%rdx),%eax
00000000000028a8	jne	0x000028c2
00000000000028aa	movq	0x40(%rdx),%rax
00000000000028ae	cmpq	%rax,0x40(%rsi)
00000000000028b2	jne	0x000028c2
00000000000028b4	movl	0x3c(%rsi),%eax
00000000000028b7	cmpl	0x3c(%rdx),%eax
00000000000028ba	sete	%al
00000000000028bd	movzbl	%al,%eax
00000000000028c0	jmp	0x000028c4
00000000000028c2	xorl	%eax,%eax
00000000000028c4	leave
00000000000028c5	ret
__ZN22AppleIntelHDGraphicsFB23paramsControllerCompareEPNS_8HWParamsEj:
00000000000028c6	pushq	%rbp
00000000000028c7	movq	%rsp,%rbp
00000000000028ca	cmpl	$0x01,%edx
00000000000028cd	je	0x000028db
00000000000028cf	movl	$0x00000001,%ecx
00000000000028d4	cmpl	$0x03,%edx
00000000000028d7	jne	0x00002901
00000000000028d9	jmp	0x000028f2
00000000000028db	movl	0x08(%rsi),%eax
00000000000028de	xorl	%ecx,%ecx
00000000000028e0	cmpl	0x00000390(%rdi),%eax
00000000000028e6	jne	0x00002901
00000000000028e8	movl	(%rsi),%eax
00000000000028ea	cmpl	0x00000388(%rdi),%eax
00000000000028f0	jmp	0x000028fb
00000000000028f2	movl	0x04(%rsi),%eax
00000000000028f5	cmpl	0x0000038c(%rdi),%eax
00000000000028fb	sete	%al
00000000000028fe	movzbl	%al,%ecx
0000000000002901	movl	%ecx,%eax
0000000000002903	leave
0000000000002904	ret
0000000000002905	nop
__ZN22AppleIntelHDGraphicsFB34hwPrintIODetailedTimingInformationEPK29IODetailedTimingInformationV2:
0000000000002906	pushq	%rbp
0000000000002907	movq	%rsp,%rbp
000000000000290a	leave
000000000000290b	ret
__ZN22AppleIntelHDGraphicsFB15getDisplayIndexEy:
000000000000290c	pushq	%rbp
000000000000290d	movq	%rsp,%rbp
0000000000002910	pushq	%r15
0000000000002912	pushq	%r14
0000000000002914	pushq	%r13
0000000000002916	pushq	%r12
0000000000002918	pushq	%rbx
0000000000002919	subq	$0x08,%rsp
000000000000291d	movq	%rdi,%r13
0000000000002920	movq	%rsi,%r12
0000000000002923	xorl	%r15d,%r15d
0000000000002926	xorl	%r14d,%r14d
0000000000002929	cmpq	$0x00,0x000005d0(%rdi)
0000000000002931	jne	0x0000298a
0000000000002933	jmp	0x00002998
0000000000002935	movq	0x000005d0(%r13),%rdi
000000000000293c	movq	(%rdi),%rax
000000000000293f	movl	%ebx,%esi
0000000000002941	shlq	$0x03,%rsi
0000000000002945	movl	$0x00000008,%edx
000000000000294a	call	*0x00000180(%rax)
0000000000002950	testq	%rax,%rax
0000000000002953	je	0x00002987
0000000000002955	movq	(%rax),%rdx
0000000000002958	movq	%rdx,%rax
000000000000295b	andl	$0x10,%eax
000000000000295e	cmpq	%r12,%rax
0000000000002961	je	0x00002984
0000000000002963	movq	%rdx,%rax
0000000000002966	andl	$0x20,%eax
0000000000002969	cmpq	%r12,%rax
000000000000296c	je	0x00002984
000000000000296e	movq	%rdx,%rax
0000000000002971	andl	$0x40,%eax
0000000000002974	cmpq	%r12,%rax
0000000000002977	je	0x00002984
0000000000002979	andl	$0x00000080,%edx
000000000000297f	cmpq	%r12,%rdx
0000000000002982	jne	0x00002987
0000000000002984	movl	%ebx,%r15d
0000000000002987	incq	%r14
000000000000298a	movl	%r14d,%ebx
000000000000298d	cmpl	%r14d,0x000005c8(%r13)
0000000000002994	ja	0x00002935
0000000000002996	jmp	0x000029a6
0000000000002998	cmpl	$0x01,0x000005d8(%rdi)
000000000000299f	sbbl	%r15d,%r15d
00000000000029a2	addl	$0x02,%r15d
00000000000029a6	movl	%r15d,%eax
00000000000029a9	addq	$0x08,%rsp
00000000000029ad	popq	%rbx
00000000000029ae	popq	%r12
00000000000029b0	popq	%r13
00000000000029b2	popq	%r14
00000000000029b4	popq	%r15
00000000000029b6	leave
00000000000029b7	ret
__ZN22AppleIntelHDGraphicsFB16getDisplayConfigEjP6OSData:
00000000000029b8	pushq	%rbp
00000000000029b9	movq	%rsp,%rbp
00000000000029bc	movq	%rdx,%rcx
00000000000029bf	testq	%rdx,%rdx
00000000000029c2	je	0x000029e5
00000000000029c4	movq	(%rdx),%rax
00000000000029c7	movl	%esi,%esi
00000000000029c9	shlq	$0x03,%rsi
00000000000029cd	movl	$0x00000008,%edx
00000000000029d2	movq	%rcx,%rdi
00000000000029d5	call	*0x00000180(%rax)
00000000000029db	testq	%rax,%rax
00000000000029de	je	0x000029e5
00000000000029e0	movq	(%rax),%rax
00000000000029e3	jmp	0x000029e7
00000000000029e5	xorl	%eax,%eax
00000000000029e7	leave
00000000000029e8	ret
00000000000029e9	nop
__ZN22AppleIntelHDGraphicsFB11getPortTypeEy:
00000000000029ea	pushq	%rbp
00000000000029eb	movq	%rsp,%rbp
00000000000029ee	movl	$0x00000003,%eax
00000000000029f3	testb	$0x10,%dh
00000000000029f7	jne	0x00002a19
00000000000029f9	movb	$0x01,%al
00000000000029fb	testb	$0x20,%dh
00000000000029ff	jne	0x00002a19
0000000000002a01	movb	$0x02,%al
0000000000002a03	testb	$0x40,%dh
0000000000002a07	jne	0x00002a19
0000000000002a09	movl	%esi,%eax
0000000000002a0b	andl	$0x80,%eax
0000000000002a0e	cmpb	$0x01,%al
0000000000002a10	sbbl	%eax,%eax
0000000000002a12	notl	%eax
0000000000002a14	andl	$0x000000f0,%eax
0000000000002a19	leave
0000000000002a1a	ret
0000000000002a1b	nop
__ZN22AppleIntelHDGraphicsFB14hwGetBacklightEPj:
0000000000002a1c	pushq	%rbp
0000000000002a1d	movq	%rsp,%rbp
0000000000002a20	cmpb	$0x00,0x00000180(%rdi)
0000000000002a27	jne	0x00002a36
0000000000002a29	movl	$0x00000000,(%rsi)
0000000000002a2f	movl	$0xe00002c7,%eax
0000000000002a34	jmp	0x00002a40
0000000000002a36	movl	0x000003ec(%rdi),%eax
0000000000002a3c	movl	%eax,(%rsi)
0000000000002a3e	xorl	%eax,%eax
0000000000002a40	leave
0000000000002a41	ret
__ZN22AppleIntelHDGraphicsFB9hwSetCLUTEjjPj:
0000000000002a42	pushq	%rbp
0000000000002a43	movq	%rsp,%rbp
0000000000002a46	movl	%edx,%r9d
0000000000002a49	xorl	%r8d,%r8d
0000000000002a4c	jmp	0x00002a74
0000000000002a4e	movl	(%rcx),%edx
0000000000002a50	cmpl	$0x01,%esi
0000000000002a53	sbbl	%eax,%eax
0000000000002a55	andl	$0xfffff800,%eax
0000000000002a5a	leal	0x0004a800(%rax,%r8,4),%eax
0000000000002a62	movl	%eax,%eax
0000000000002a64	addq	0x00000098(%rdi),%rax
0000000000002a6b	movl	%edx,(%rax)
0000000000002a6d	incl	%r8d
0000000000002a70	addq	$0x04,%rcx
0000000000002a74	cmpl	%r9d,%r8d
0000000000002a77	jne	0x00002a4e
0000000000002a79	xorl	%eax,%eax
0000000000002a7b	leave
0000000000002a7c	ret
__ZL15bilinear_interpjffjjjj:
0000000000002a7d	pushq	%rbp
0000000000002a7e	movq	%rsp,%rbp
0000000000002a81	movl	%ecx,%eax
0000000000002a83	cvtss2sd	%xmm0,%xmm5
0000000000002a87	movsd	0x00010551(%rip),%xmm4
0000000000002a8f	movapd	%xmm4,%xmm6
0000000000002a93	subsd	%xmm5,%xmm6
0000000000002a97	cvtss2sd	%xmm1,%xmm7
0000000000002a9b	subsd	%xmm7,%xmm4
0000000000002a9f	movapd	%xmm6,%xmm3
0000000000002aa3	mulsd	%xmm4,%xmm3
0000000000002aa7	movl	%edi,%ecx
0000000000002aa9	shrl	%cl,%esi
0000000000002aab	movzbl	%dh,%esi
0000000000002aaf	cvtsi2sd	%rsi,%xmm2
0000000000002ab4	mulsd	%xmm2,%xmm3
0000000000002ab8	cvtsd2ss	%xmm3,%xmm3
0000000000002abc	cvtss2sd	%xmm3,%xmm3
0000000000002ac0	mulsd	%xmm4,%xmm5
0000000000002ac4	shrl	%cl,%edx
0000000000002ac6	movzbl	%dl,%edx
0000000000002ac9	cvtsi2sd	%rdx,%xmm2
0000000000002ace	mulsd	%xmm2,%xmm5
0000000000002ad2	addsd	%xmm5,%xmm3
0000000000002ad6	cvtsd2ss	%xmm3,%xmm3
0000000000002ada	cvtss2sd	%xmm3,%xmm3
0000000000002ade	mulsd	%xmm7,%xmm6
0000000000002ae2	shrl	%cl,%eax
0000000000002ae4	movzbl	%al,%ecx
0000000000002ae7	cvtsi2sd	%rcx,%xmm2
0000000000002aec	mulsd	%xmm2,%xmm6
0000000000002af0	addsd	%xmm6,%xmm3
0000000000002af4	cvtsd2ss	%xmm3,%xmm2
0000000000002af8	mulss	%xmm1,%xmm0
0000000000002afc	movl	%edi,%ecx
0000000000002afe	shrl	%cl,%r8d
0000000000002b01	movzbl	%al,%r8d
0000000000002b05	cvtsi2ss	%r8,%xmm1
0000000000002b0a	mulss	%xmm0,%xmm1
0000000000002b0e	addss	%xmm1,%xmm2
0000000000002b12	cvttss2si	%xmm2,%rdx
0000000000002b17	movl	$0x000000ff,%eax
0000000000002b1c	cmpl	$0x000000ff,%edx
0000000000002b22	cmovbel	%edx,%eax
0000000000002b25	shll	%cl,%eax
0000000000002b27	leave
0000000000002b28	ret
0000000000002b29	nop
__ZN22AppleIntelHDGraphicsFB15hwGetPowerStateEv:
0000000000002b2a	pushq	%rbp
0000000000002b2b	movq	%rsp,%rbp
0000000000002b2e	movq	0x00000098(%rdi),%rax
0000000000002b35	addq	$0x000111f8,%eax
0000000000002b3b	movzwl	(%rax),%eax
0000000000002b3e	shrl	$0x03,%eax
0000000000002b41	andl	$0x1f,%eax
0000000000002b44	leave
0000000000002b45	ret
__ZN22AppleIntelHDGraphicsFB18resetRenderStandbyEv:
0000000000002b46	pushq	%rbp
0000000000002b47	movq	%rsp,%rbp
0000000000002b4a	subq	$0x10,%rsp
0000000000002b4e	movq	%rdi,%rdx
0000000000002b51	movq	0x000006b8(%rdi),%rdi
0000000000002b58	testq	%rdi,%rdi
0000000000002b5b	je	0x00002b82
0000000000002b5d	movq	(%rdi),%rax
0000000000002b60	movq	0x00000738(%rdx),%rsi
0000000000002b67	movq	$0x00000000,(%rsp)
0000000000002b6f	xorl	%r9d,%r9d
0000000000002b72	xorl	%r8d,%r8d
0000000000002b75	xorl	%ecx,%ecx
0000000000002b77	movl	$0x00000001,%edx
0000000000002b7c	call	*0x000006b8(%rax)
0000000000002b82	leave
0000000000002b83	ret
__ZN22AppleIntelHDGraphicsFB18clearRenderStandbyEv:
0000000000002b84	pushq	%rbp
0000000000002b85	movq	%rsp,%rbp
0000000000002b88	subq	$0x10,%rsp
0000000000002b8c	movq	%rdi,%rdx
0000000000002b8f	movq	0x000006b8(%rdi),%rdi
0000000000002b96	testq	%rdi,%rdi
0000000000002b99	je	0x00002bc0
0000000000002b9b	movq	(%rdi),%rax
0000000000002b9e	movq	0x00000740(%rdx),%rsi
0000000000002ba5	movq	$0x00000000,(%rsp)
0000000000002bad	xorl	%r9d,%r9d
0000000000002bb0	xorl	%r8d,%r8d
0000000000002bb3	xorl	%ecx,%ecx
0000000000002bb5	movl	$0x00000001,%edx
0000000000002bba	call	*0x000006b8(%rax)
0000000000002bc0	leave
0000000000002bc1	ret
__ZN22AppleIntelHDGraphicsFB16getRenderStandbyEv:
0000000000002bc2	pushq	%rbp
0000000000002bc3	movq	%rsp,%rbp
0000000000002bc6	subq	$0x10,%rsp
0000000000002bca	movq	%rdi,%rdx
0000000000002bcd	movq	0x000006b8(%rdi),%rdi
0000000000002bd4	testq	%rdi,%rdi
0000000000002bd7	je	0x00002bfe
0000000000002bd9	movq	(%rdi),%rax
0000000000002bdc	movq	0x00000748(%rdx),%rsi
0000000000002be3	movq	$0x00000000,(%rsp)
0000000000002beb	xorl	%r9d,%r9d
0000000000002bee	xorl	%r8d,%r8d
0000000000002bf1	xorl	%ecx,%ecx
0000000000002bf3	movl	$0x00000001,%edx
0000000000002bf8	call	*0x000006b8(%rax)
0000000000002bfe	leave
0000000000002bff	ret
__ZN22AppleIntelHDGraphicsFB15hwWatermarksSetEb:
0000000000002c00	pushq	%rbp
0000000000002c01	movq	%rsp,%rbp
0000000000002c04	cmpb	$0x00,0x00000720(%rdi)
0000000000002c0b	je	0x00002d10
0000000000002c11	movl	0x000003f0(%rdi),%eax
0000000000002c17	movl	%eax,%edx
0000000000002c19	orb	$0x80,%dh
0000000000002c1c	movl	%edx,0x000003f0(%rdi)
0000000000002c22	cmpl	%edx,%eax
0000000000002c24	je	0x00002c35
0000000000002c26	movq	0x00000098(%rdi),%rax
0000000000002c2d	addq	$0x00045000,%eax
0000000000002c33	movl	%edx,(%rax)
0000000000002c35	movq	0x00000098(%rdi),%rcx
0000000000002c3c	addq	$0x00042004,%rcx
0000000000002c43	movl	(%rcx),%eax
0000000000002c45	movl	%eax,%edx
0000000000002c47	orl	$0x00600000,%edx
0000000000002c4d	cmpl	%edx,%eax
0000000000002c4f	je	0x00002c53
0000000000002c51	movl	%edx,(%rcx)
0000000000002c53	movq	0x00000098(%rdi),%rcx
0000000000002c5a	addq	$0x00042020,%rcx
0000000000002c61	movl	(%rcx),%eax
0000000000002c63	movl	%eax,%edx
0000000000002c65	orl	$0x20,%edx
0000000000002c68	cmpl	%edx,%eax
0000000000002c6a	je	0x00002c6e
0000000000002c6c	movl	%edx,(%rcx)
0000000000002c6e	movl	0x000003f4(%rdi),%edx
0000000000002c74	movq	0x00000098(%rdi),%rax
0000000000002c7b	addq	$0x00045100,%eax
0000000000002c81	movl	%edx,(%rax)
0000000000002c83	movl	0x000003f8(%rdi),%edx
0000000000002c89	movq	0x00000098(%rdi),%rax
0000000000002c90	addq	$0x00045104,%eax
0000000000002c96	movl	%edx,(%rax)
0000000000002c98	movl	0x00000400(%rdi),%edx
0000000000002c9e	andl	$0x7fffffff,%edx
0000000000002ca4	movq	0x00000098(%rdi),%rax
0000000000002cab	addq	$0x0004510c,%eax
0000000000002cb1	movl	%edx,(%rax)
0000000000002cb3	movl	0x000003fc(%rdi),%edx
0000000000002cb9	andl	$0x7fffffff,%edx
0000000000002cbf	movq	0x00000098(%rdi),%rax
0000000000002cc6	addq	$0x00045108,%eax
0000000000002ccc	movl	%edx,(%rax)
0000000000002cce	testb	%dh,%dh
0000000000002cd1	je	0x00002d10
0000000000002cd3	movl	0x00000724(%rdi),%esi
0000000000002cd9	testl	%esi,%esi
0000000000002cdb	je	0x00002d10
0000000000002cdd	movl	0x000003fc(%rdi),%edx
0000000000002ce3	movq	0x00000098(%rdi),%rax
0000000000002cea	addq	$0x00045108,%eax
0000000000002cf0	movl	%edx,(%rax)
0000000000002cf2	cmpl	$0x01,0x00000724(%rdi)
0000000000002cf9	jbe	0x00002d10
0000000000002cfb	movl	0x00000400(%rdi),%edx
0000000000002d01	movq	0x00000098(%rdi),%rax
0000000000002d08	addq	$0x0004510c,%eax
0000000000002d0e	movl	%edx,(%rax)
0000000000002d10	leave
0000000000002d11	ret
__Z5meth2jjjjj:
0000000000002d12	pushq	%rbp
0000000000002d13	movq	%rsp,%rbp
0000000000002d16	pushq	%rbx
0000000000002d17	testl	%edx,%edx
0000000000002d19	je	0x00002d58
0000000000002d1b	movl	%edi,%eax
0000000000002d1d	imulq	$0x3b9aca00,%rax,%rax
0000000000002d24	movl	%edx,%edx
0000000000002d26	movq	%rdx,%rbx
0000000000002d29	xorl	%edx,%edx
0000000000002d2b	divq	%rbx
0000000000002d2e	movq	%rax,%rdi
0000000000002d31	testq	%rax,%rax
0000000000002d34	je	0x00002d58
0000000000002d36	movl	%ecx,%r9d
0000000000002d39	movl	%esi,%eax
0000000000002d3b	imulq	%rax,%r9
0000000000002d3f	movl	%r8d,%eax
0000000000002d42	xorl	%edx,%edx
0000000000002d44	divq	%rdi
0000000000002d47	incq	%rax
0000000000002d4a	imulq	%rax,%r9
0000000000002d4e	shrq	$0x06,%r9
0000000000002d52	leal	0x02(%r9),%eax
0000000000002d56	jmp	0x00002d5d
0000000000002d58	movl	$0x00000002,%eax
0000000000002d5d	popq	%rbx
0000000000002d5e	leave
0000000000002d5f	ret
__ZN21AppleIntelFramebuffer9MetaClassD1Ev:
0000000000002d60	pushq	%rbp
0000000000002d61	movq	%rsp,%rbp
0000000000002d64	leaq	0x000102e5(%rip),%rax
0000000000002d6b	movq	%rax,(%rdi)
0000000000002d6e	leave
0000000000002d6f	jmp	0x00002d74
__ZN22AppleIntelHDGraphicsFB10hwSetGammaEjjPhS0_S0_:
0000000000002d74	pushq	%rbp
0000000000002d75	movq	%rsp,%rbp
0000000000002d78	pushq	%r15
0000000000002d7a	pushq	%r14
0000000000002d7c	pushq	%r13
0000000000002d7e	pushq	%r12
0000000000002d80	pushq	%rbx
0000000000002d81	subq	$0x18,%rsp
0000000000002d85	movq	%rdi,%r12
0000000000002d88	movl	%esi,%ebx
0000000000002d8a	movl	%edx,%r13d
0000000000002d8d	movq	%rcx,0xc8(%rbp)
0000000000002d91	movq	%r8,%r15
0000000000002d94	movq	%r9,%r14
0000000000002d97	movq	0x00012032(%rip),%rax
0000000000002d9e	movl	(%rax),%r8d
0000000000002da1	testl	%r8d,%r8d
0000000000002da4	je	0x00002de2
0000000000002da6	testl	%esi,%esi
0000000000002da8	je	0x00002ee5
0000000000002dae	movq	0x00000098(%rdi),%rdx
0000000000002db5	movl	0x00071000(%rdx),%eax
0000000000002dbb	movl	%eax,%r8d
0000000000002dbe	movl	0x000c6018(%rdx),%eax
0000000000002dc4	movl	%eax,%ecx
0000000000002dc6	movl	$0x00071180,%eax
0000000000002dcb	leaq	(%rdx,%rax),%rax
0000000000002dcf	movl	(%rax),%edx
0000000000002dd1	movl	%edx,%edx
0000000000002dd3	movl	%ebx,%esi
0000000000002dd5	xorl	%r9d,%r9d
0000000000002dd8	movl	$0x06128429,%edi
0000000000002ddd	callq	0x00002de2
0000000000002de2	xorl	%r9d,%r9d
0000000000002de5	xorl	%r8d,%r8d
0000000000002de8	movl	$0xffffffff,%r10d
0000000000002dee	jmp	0x00002e9a
0000000000002df3	movq	0xc8(%rbp),%rax
0000000000002df7	movzbl	(%rax,%rax),%edi
0000000000002dfc	cmpb	$0xfb,%bh
0000000000002e00	jbe	0x00002e07
0000000000002e02	movl	%r10d,%edi
0000000000002e05	jmp	0x00002e1b
0000000000002e07	cmpb	$0x89,%bh
0000000000002e0b	jbe	0x00002e12
0000000000002e0d	addl	$0x04,%edi
0000000000002e10	jmp	0x00002e1b
0000000000002e12	leal	0x03(%rdi),%eax
0000000000002e15	testb	%bh,%bh
0000000000002e18	cmovnel	%eax,%edi
0000000000002e1b	movzbl	(%rax,%rdi),%edx
0000000000002e20	cmpb	$0xfb,%dl
0000000000002e23	jbe	0x00002e2a
0000000000002e25	movl	%r10d,%edx
0000000000002e28	jmp	0x00002e3c
0000000000002e2a	cmpb	$0x89,%dl
0000000000002e2d	jbe	0x00002e34
0000000000002e2f	addl	$0x04,%edx
0000000000002e32	jmp	0x00002e3c
0000000000002e34	leal	0x03(%rdx),%eax
0000000000002e37	testb	%dl,%dl
0000000000002e39	cmovnel	%eax,%edx
0000000000002e3c	movzbl	(%rax,%rsi),%esi
0000000000002e41	cmpb	$0xfb,%dh
0000000000002e45	jbe	0x00002e4c
0000000000002e47	movl	%r10d,%esi
0000000000002e4a	jmp	0x00002e60
0000000000002e4c	cmpb	$0x89,%dh
0000000000002e50	jbe	0x00002e57
0000000000002e52	addl	$0x04,%esi
0000000000002e55	jmp	0x00002e60
0000000000002e57	leal	0x03(%rsi),%eax
0000000000002e5a	testb	%dh,%dh
0000000000002e5d	cmovnel	%eax,%esi
0000000000002e60	cmpl	$0x01,%ebx
0000000000002e63	sbbl	%ecx,%ecx
0000000000002e65	andl	$0xfffff800,%ecx
0000000000002e6b	leal	0x0004a800(%rcx,%r9,4),%ecx
0000000000002e73	movl	%ecx,%ecx
0000000000002e75	addq	0x00000098(%r12),%rcx
0000000000002e7d	movzbl	%dl,%edx
0000000000002e80	shll	$0x08,%edx
0000000000002e83	movzbl	%bh,%eax
0000000000002e87	shll	$0x10,%eax
0000000000002e8a	orl	%eax,%edx
0000000000002e8c	movzbl	%dh,%eax
0000000000002e90	orl	%eax,%edx
0000000000002e92	movl	%edx,(%rcx)
0000000000002e94	incl	%r9d
0000000000002e97	incq	%r8
0000000000002e9a	cmpl	%r13d,%r9d
0000000000002e9d	jne	0x100002df3
0000000000002ea3	movq	0x00011f26(%rip),%rax
0000000000002eaa	movl	(%rax),%edi
0000000000002eac	testl	%edi,%edi
0000000000002eae	je	0x00002f1f
0000000000002eb0	testl	%ebx,%ebx
0000000000002eb2	je	0x00002f07
0000000000002eb4	movq	0x00000098(%r12),%rdx
0000000000002ebc	movl	0x0004abfc(%rdx),%eax
0000000000002ec2	movl	%eax,%r8d
0000000000002ec5	movl	$0x0004a800,%eax
0000000000002eca	leaq	(%rdx,%rax),%rax
0000000000002ece	movl	(%rax),%ecx
0000000000002ed0	movl	%ecx,%ecx
0000000000002ed2	movl	%ebx,%esi
0000000000002ed4	xorl	%r9d,%r9d
0000000000002ed7	xorl	%edx,%edx
0000000000002ed9	movl	$0x0612842a,%edi
0000000000002ede	callq	0x00002ee3
0000000000002ee3	jmp	0x00002f1f
0000000000002ee5	movq	0x00000098(%rdi),%rdx
0000000000002eec	movl	0x00070000(%rdx),%eax
0000000000002ef2	movl	%eax,%r8d
0000000000002ef5	movl	0x000c6014(%rdx),%eax
0000000000002efb	movl	%eax,%ecx
0000000000002efd	movl	$0x00070180,%eax
0000000000002f02	jmp	0x100002dcb
0000000000002f07	movq	0x00000098(%r12),%rdx
0000000000002f0f	movl	0x0004a3fc(%rdx),%eax
0000000000002f15	movl	%eax,%r8d
0000000000002f18	movl	$0x0004a000,%eax
0000000000002f1d	jmp	0x00002eca
0000000000002f1f	xorl	%eax,%eax
0000000000002f21	addq	$0x18,%rsp
0000000000002f25	popq	%rbx
0000000000002f26	popq	%r12
0000000000002f28	popq	%r13
0000000000002f2a	popq	%r14
0000000000002f2c	popq	%r15
0000000000002f2e	leave
0000000000002f2f	ret
__ZN21AppleIntelFramebuffer13setGammaTableEjjjPv:
0000000000002f30	pushq	%rbp
0000000000002f31	movq	%rsp,%rbp
0000000000002f34	movq	%r8,%r10
0000000000002f37	movl	$0xe00002e6,%eax
0000000000002f3c	movl	0x000001e4(%rdi),%r9d
0000000000002f43	testl	%r9d,%r9d
0000000000002f46	je	0x00002f97
0000000000002f48	cmpl	$0x00000100,%edx
0000000000002f4e	jne	0x00002f55
0000000000002f50	cmpl	$0x08,%ecx
0000000000002f53	je	0x00002f5c
0000000000002f55	movl	$0xe00002c7,%eax
0000000000002f5a	jmp	0x00002f97
0000000000002f5c	movq	%r8,%rdx
0000000000002f5f	movq	%r8,%rax
0000000000002f62	cmpl	$0x02,%esi
0000000000002f65	jbe	0x00002f75
0000000000002f67	leaq	0x00000100(%r8),%rdx
0000000000002f6e	leaq	0x00000200(%r8),%rax
0000000000002f75	movl	0x000001d8(%rdi),%esi
0000000000002f7b	movq	0x000001d0(%rdi),%rdi
0000000000002f82	movq	%rax,%r9
0000000000002f85	movq	%rdx,%r8
0000000000002f88	movq	%r10,%rcx
0000000000002f8b	movl	$0x00000100,%edx
0000000000002f90	callq	0x100002d74
0000000000002f95	xorl	%eax,%eax
0000000000002f97	leave
0000000000002f98	ret
0000000000002f99	nop
__ZN22AppleIntelHDGraphicsFB22hwDisableVBLInterruptsEv:
0000000000002f9a	pushq	%rbp
0000000000002f9b	movq	%rsp,%rbp
0000000000002f9e	pushq	%r12
0000000000002fa0	pushq	%rbx
0000000000002fa1	movq	%rdi,%rbx
0000000000002fa4	movq	0x00011e25(%rip),%r12
0000000000002fab	movl	(%r12),%r11d
0000000000002faf	testl	%r11d,%r11d
0000000000002fb2	je	0x00002fe9
0000000000002fb4	movq	0x00000098(%rdi),%rax
0000000000002fbb	movl	0x000c400c(%rax),%r8d
0000000000002fc2	movl	0x0004401c(%rax),%ecx
0000000000002fc8	movl	%ecx,%ecx
0000000000002fca	movl	0x0004400c(%rax),%edx
0000000000002fd0	movl	%edx,%edx
0000000000002fd2	movzbl	0x00000420(%rdi),%esi
0000000000002fd9	xorl	%r9d,%r9d
0000000000002fdc	movl	%r8d,%r8d
0000000000002fdf	movl	$0x061284a9,%edi
0000000000002fe4	callq	0x00002fe9
0000000000002fe9	cmpb	$0x00,0x00000420(%rbx)
0000000000002ff0	je	0x0000301b
0000000000002ff2	movb	$0x00,0x00000420(%rbx)
0000000000002ff9	movq	0x00000098(%rbx),%rax
0000000000003000	movl	$0xffffffff,0x00044004(%rax)
000000000000300a	movq	0x00000098(%rbx),%rax
0000000000003011	movl	$0x00000000,0x0004400c(%rax)
000000000000301b	movl	(%r12),%r10d
000000000000301f	testl	%r10d,%r10d
0000000000003022	je	0x0000304c
0000000000003024	movq	0x00000098(%rbx),%rax
000000000000302b	movl	0x0004400c(%rax),%edx
0000000000003031	movl	%edx,%edx
0000000000003033	movzbl	0x00000420(%rbx),%esi
000000000000303a	xorl	%r9d,%r9d
000000000000303d	xorl	%r8d,%r8d
0000000000003040	xorl	%ecx,%ecx
0000000000003042	movl	$0x061284aa,%edi
0000000000003047	callq	0x0000304c
000000000000304c	xorl	%eax,%eax
000000000000304e	popq	%rbx
000000000000304f	popq	%r12
0000000000003051	leave
0000000000003052	ret
0000000000003053	nop
__ZN22AppleIntelHDGraphicsFB21hwEnableVBLInterruptsEv:
0000000000003054	pushq	%rbp
0000000000003055	movq	%rsp,%rbp
0000000000003058	pushq	%r12
000000000000305a	pushq	%rbx
000000000000305b	movq	%rdi,%rbx
000000000000305e	movq	0x00011d6b(%rip),%r12
0000000000003065	movl	(%r12),%eax
0000000000003069	testl	%eax,%eax
000000000000306b	je	0x00003095
000000000000306d	movq	0x00000098(%rdi),%rax
0000000000003074	movl	0x000020a0(%rax),%ecx
000000000000307a	movl	%ecx,%ecx
000000000000307c	movzbl	0x00000420(%rdi),%edx
0000000000003083	xorl	%r9d,%r9d
0000000000003086	xorl	%r8d,%r8d
0000000000003089	xorl	%esi,%esi
000000000000308b	movl	$0x061284a5,%edi
0000000000003090	callq	0x00003095
0000000000003095	cmpb	$0x00,0x00000420(%rbx)
000000000000309c	jne	0x000031c4
00000000000030a2	movb	$0x01,0x00000420(%rbx)
00000000000030a9	movl	0x000003e0(%rbx),%esi
00000000000030af	movl	0x000003dc(%rbx),%edx
00000000000030b5	orl	$0x80000000,%edx
00000000000030bb	movl	%esi,%ecx
00000000000030bd	andl	$0x7cdfff7f,%ecx
00000000000030c3	movl	%ecx,0x000003e0(%rbx)
00000000000030c9	movl	%edx,%eax
00000000000030cb	orl	$0x03200080,%eax
00000000000030d0	movl	%eax,0x000003dc(%rbx)
00000000000030d6	cmpl	$0x01,0x00000194(%rbx)
00000000000030dd	jle	0x000030f9
00000000000030df	movl	%esi,%ecx
00000000000030e1	andl	$0x7cdf7f7f,%ecx
00000000000030e7	movl	%ecx,0x000003e0(%rbx)
00000000000030ed	orl	$0x03208080,%edx
00000000000030f3	movl	%edx,0x000003dc(%rbx)
00000000000030f9	cmpb	$0x00,0x00000668(%rbx)
0000000000003100	je	0x00003137
0000000000003102	movl	0x000003d4(%rbx),%edx
0000000000003108	movl	%edx,%eax
000000000000310a	orl	$0x01,%eax
000000000000310d	movl	%eax,0x000003d4(%rbx)
0000000000003113	movl	0x00000438(%rbx),%eax
0000000000003119	testl	%eax,%eax
000000000000311b	jne	0x00003137
000000000000311d	andl	$0xf7,0x000003d8(%rbx)
0000000000003124	orl	$0x09,%edx
0000000000003127	movl	%edx,0x000003d4(%rbx)
000000000000312d	andl	$0xfffffdc1,0x000003d0(%rbx)
0000000000003137	movq	0x00000098(%rbx),%rax
000000000000313e	movl	%ecx,0x00044004(%rax)
0000000000003144	movl	0x000003e0(%rbx),%eax
000000000000314a	notl	%eax
000000000000314c	movq	0x00000098(%rbx),%rdx
0000000000003153	movl	%eax,0x00044008(%rdx)
0000000000003159	movl	0x000003dc(%rbx),%edx
000000000000315f	movq	0x00000098(%rbx),%rax
0000000000003166	movl	%edx,0x0004400c(%rax)
000000000000316c	movl	0x000003d8(%rbx),%edx
0000000000003172	movq	0x00000098(%rbx),%rax
0000000000003179	movl	%edx,0x00044014(%rax)
000000000000317f	movl	0x000003d8(%rbx),%eax
0000000000003185	notl	%eax
0000000000003187	movq	0x00000098(%rbx),%rdx
000000000000318e	movl	%eax,0x00044018(%rdx)
0000000000003194	movl	0x000003d4(%rbx),%edx
000000000000319a	movq	0x00000098(%rbx),%rax
00000000000031a1	movl	%edx,0x0004401c(%rax)
00000000000031a7	movl	0x00000438(%rbx),%eax
00000000000031ad	testl	%eax,%eax
00000000000031af	jne	0x000031c4
00000000000031b1	movl	0x000003d0(%rbx),%edx
00000000000031b7	movq	0x00000098(%rbx),%rax
00000000000031be	movl	%edx,0x000020b4(%rax)
00000000000031c4	movl	(%r12),%r12d
00000000000031c8	testl	%r12d,%r12d
00000000000031cb	je	0x000031f5
00000000000031cd	movq	0x00000098(%rbx),%rax
00000000000031d4	movl	0x0004400c(%rax),%ecx
00000000000031da	movl	%ecx,%ecx
00000000000031dc	movzbl	0x00000420(%rbx),%edx
00000000000031e3	xorl	%r9d,%r9d
00000000000031e6	xorl	%r8d,%r8d
00000000000031e9	xorl	%esi,%esi
00000000000031eb	movl	$0x061284a6,%edi
00000000000031f0	callq	0x000031f5
00000000000031f5	xorl	%eax,%eax
00000000000031f7	popq	%rbx
00000000000031f8	popq	%r12
00000000000031fa	leave
00000000000031fb	ret
__ZN22AppleIntelHDGraphicsFB22hwSetDisplayPowerStateEij:
00000000000031fc	pushq	%rbp
00000000000031fd	movq	%rsp,%rbp
0000000000003200	movq	0x00011bc9(%rip),%rax
0000000000003207	movl	(%rax),%eax
0000000000003209	testl	%eax,%eax
000000000000320b	je	0x00003224
000000000000320d	movl	%edx,%edx
000000000000320f	movslq	%esi,%rsi
0000000000003212	xorl	%r9d,%r9d
0000000000003215	xorl	%r8d,%r8d
0000000000003218	xorl	%ecx,%ecx
000000000000321a	movl	$0x06128490,%edi
000000000000321f	callq	0x00003224
0000000000003224	xorl	%eax,%eax
0000000000003226	leave
0000000000003227	ret
__ZN22AppleIntelHDGraphicsFB16hwGetClockParamsEjyPNS_11ClockParamsE:
0000000000003228	pushq	%rbp
0000000000003229	movq	%rsp,%rbp
000000000000322c	pushq	%r15
000000000000322e	pushq	%r14
0000000000003230	pushq	%r13
0000000000003232	pushq	%r12
0000000000003234	pushq	%rbx
0000000000003235	subq	$0x58,%rsp
0000000000003239	movq	%rdi,%rbx
000000000000323c	movl	%esi,0xa4(%rbp)
000000000000323f	movq	%rdx,0x98(%rbp)
0000000000003243	movq	%rcx,0x90(%rbp)
0000000000003247	movq	0x00011b82(%rip),%rax
000000000000324e	movl	(%rax),%eax
0000000000003250	testl	%eax,%eax
0000000000003252	je	0x0000326b
0000000000003254	movl	0x98(%rbp),%edx
0000000000003257	movl	%esi,%esi
0000000000003259	xorl	%r9d,%r9d
000000000000325c	xorl	%r8d,%r8d
000000000000325f	xorl	%ecx,%ecx
0000000000003261	movl	$0x06128471,%edi
0000000000003266	callq	0x0000326b
000000000000326b	movq	0x90(%rbp),%rdx
000000000000326f	movl	$0x00000000,0x08(%rdx)
0000000000003276	movl	$0x00000000,0x0c(%rdx)
000000000000327d	movl	$0x00000000,(%rdx)
0000000000003283	movl	$0x00000000,0x04(%rdx)
000000000000328a	movl	$0x00000000,0x10(%rdx)
0000000000003291	movq	$0x00000000,0x18(%rdx)
0000000000003299	movq	$0x00000000,0x20(%rdx)
00000000000032a1	cmpb	$0x00,0x00000192(%rbx)
00000000000032a8	je	0x000032cf
00000000000032aa	movzbl	0x00000190(%rbx),%eax
00000000000032b1	cmpl	0xa4(%rbp),%eax
00000000000032b4	jne	0x000032cf
00000000000032b6	cmpl	$0x01,0x000005dc(%rbx)
00000000000032bd	sbbq	%rcx,%rcx
00000000000032c0	andl	$0x07,%ecx
00000000000032c3	addq	$0x07,%rcx
00000000000032c7	movq	%rcx,0xa8(%rbp)
00000000000032cb	movl	%ecx,%eax
00000000000032cd	jmp	0x000032dc
00000000000032cf	movq	$0x0000000a,0xa8(%rbp)
00000000000032d7	movl	$0x0000000a,%eax
00000000000032dc	movl	0xa8(%rbp),%edx
00000000000032df	shll	$0x03,%edx
00000000000032e2	movl	%eax,%r13d
00000000000032e5	movq	0xa8(%rbp),%rax
00000000000032e9	imulq	0x98(%rbp),%rax
00000000000032ee	movq	%rax,0xc8(%rbp)
00000000000032f2	movq	0x98(%rbp),%r14
00000000000032f6	imulq	%r13,%r14
00000000000032fa	movq	0x98(%rbp),%rcx
00000000000032fe	leaq	(%rcx,%rcx,2),%rax
0000000000003302	movq	0xa8(%rbp),%rcx
0000000000003306	imulq	%rax,%rcx
000000000000330a	movq	%rcx,0xc0(%rbp)
000000000000330e	imulq	%r13,%rax
0000000000003312	movq	%rax,0xb8(%rbp)
0000000000003316	movq	$0x7fffffffffffffff,%r11
0000000000003320	movb	$0x00,0xb7(%rbp)
0000000000003324	movl	%edx,%edx
0000000000003326	movq	%rdx,0x88(%rbp)
000000000000332a	movq	$0xcccccccccccccccd,%r15
0000000000003334	jmp	0x00003417
0000000000003339	movq	%rdi,%rax
000000000000333c	subq	%rsi,%rax
000000000000333f	mulq	%r15
0000000000003342	movq	%rdx,%rcx
0000000000003345	shrq	$0x02,%rcx
0000000000003349	cmpq	$0x0d,%rcx
000000000000334d	jbe	0x000033e9
0000000000003353	cmpq	$0x18,%rcx
0000000000003357	ja	0x000033e9
000000000000335d	leaq	(%rcx,%rcx,4),%rax
0000000000003361	addq	%rsi,%rax
0000000000003364	cmpq	$0x4e,%rax
0000000000003368	jbe	0x000033e9
000000000000336a	cmpq	$0x7f,%rax
000000000000336e	ja	0x000033e9
0000000000003370	imulq	$0x07270e00,%rax,%rax
0000000000003377	xorl	%edx,%edx
0000000000003379	divq	%r8
000000000000337c	movq	%rax,%r10
000000000000337f	cmpq	$0x68e777ff,%eax
0000000000003385	jbe	0x000033e9
0000000000003387	movl	$0xd1365980,%eax
000000000000338c	cmpq	%rax,%r10
000000000000338f	ja	0x000033e9
0000000000003391	movq	%r10,%rax
0000000000003394	xorl	%edx,%edx
0000000000003396	divq	%r13
0000000000003399	movq	%rax,%rbx
000000000000339c	movq	%rax,%r12
000000000000339f	subq	0x98(%rbp),%r12
00000000000033a3	movq	0x98(%rbp),%rax
00000000000033a7	subq	%rbx,%rax
00000000000033aa	cmpq	%rbx,0x98(%rbp)
00000000000033ae	cmovaeq	%rax,%r12
00000000000033b2	cmpq	%r11,%r12
00000000000033b5	ja	0x000033e9
00000000000033b7	movq	0x90(%rbp),%rdx
00000000000033bb	movl	%ecx,0x08(%rdx)
00000000000033be	movl	%esi,0x0c(%rdx)
00000000000033c1	movq	%r13,%rax
00000000000033c4	xorl	%edx,%edx
00000000000033c6	divq	0xa8(%rbp)
00000000000033ca	movq	0x90(%rbp),%rcx
00000000000033ce	movl	%eax,(%rcx)
00000000000033d0	movl	0xa8(%rbp),%eax
00000000000033d3	movl	%eax,0x04(%rcx)
00000000000033d6	movl	%r8d,0x10(%rcx)
00000000000033da	movq	%r10,0x18(%rcx)
00000000000033de	movq	%rbx,0x20(%rcx)
00000000000033e2	movq	%r12,%r11
00000000000033e5	movb	$0x01,0xb7(%rbp)
00000000000033e9	testq	%r11,%r11
00000000000033ec	je	0x0000341d
00000000000033ee	incq	%rsi
00000000000033f1	cmpq	$0x0c,%rsi
00000000000033f5	jne	0x100003339
00000000000033fb	incq	%r8
00000000000033fe	addq	%r14,%r9
0000000000003401	cmpq	$0x09,%r8
0000000000003405	jne	0x0000344f
0000000000003407	addq	0xc8(%rbp),%r14
000000000000340b	movq	0xc0(%rbp),%rdx
000000000000340f	addq	%rdx,0xb8(%rbp)
0000000000003413	addq	0xa8(%rbp),%r13
0000000000003417	cmpq	0x88(%rbp),%r13
000000000000341b	jbe	0x00003445
000000000000341d	movq	0x000119ac(%rip),%rcx
0000000000003424	movl	(%rcx),%eax
0000000000003426	testl	%eax,%eax
0000000000003428	je	0x00003474
000000000000342a	movzbl	0xb7(%rbp),%edx
000000000000342e	movl	0xa4(%rbp),%esi
0000000000003431	xorl	%r9d,%r9d
0000000000003434	xorl	%r8d,%r8d
0000000000003437	xorl	%ecx,%ecx
0000000000003439	movl	$0x06128472,%edi
000000000000343e	callq	0x00003443
0000000000003443	jmp	0x00003474
0000000000003445	movq	0xb8(%rbp),%r9
0000000000003449	movl	$0x00000003,%r8d
000000000000344f	movq	%r9,%rax
0000000000003452	shrq	$0x09,%rax
0000000000003456	movq	$0x0011e54c672874db,%rdx
0000000000003460	mulq	%rdx
0000000000003463	movq	%rdx,%rdi
0000000000003466	shrq	$0x06,%rdi
000000000000346a	movl	$0x00000007,%esi
000000000000346f	jmp	0x100003339
0000000000003474	movzbl	0xb7(%rbp),%eax
0000000000003478	addq	$0x58,%rsp
000000000000347c	popq	%rbx
000000000000347d	popq	%r12
000000000000347f	popq	%r13
0000000000003481	popq	%r14
0000000000003483	popq	%r15
0000000000003485	leave
0000000000003486	ret
0000000000003487	nop
__ZN22AppleIntelHDGraphicsFB15hwGetBaseOffsetEiPK29IODetailedTimingInformationV2i:
0000000000003488	pushq	%rbp
0000000000003489	movq	%rsp,%rbp
000000000000348c	subq	$0x10,%rsp
0000000000003490	movq	%rbx,(%rsp)
0000000000003494	movq	%r12,0x08(%rsp)
0000000000003499	movq	%rdi,%r12
000000000000349c	movslq	%esi,%rbx
000000000000349f	movq	0x0001192a(%rip),%rax
00000000000034a6	movl	(%rax),%edx
00000000000034a8	testl	%edx,%edx
00000000000034aa	je	0x000034cf
00000000000034ac	imulq	$0x000000f0,%rbx,%rax
00000000000034b3	movl	0x000001f4(%rdi,%rax),%edx
00000000000034ba	xorl	%r9d,%r9d
00000000000034bd	xorl	%r8d,%r8d
00000000000034c0	xorl	%ecx,%ecx
00000000000034c2	movq	%rbx,%rsi
00000000000034c5	movl	$0x061284d8,%edi
00000000000034ca	callq	0x000034cf
00000000000034cf	imulq	$0x000000f0,%rbx,%rax
00000000000034d6	movl	0x000001f4(%r12,%rax),%eax
00000000000034de	movq	(%rsp),%rbx
00000000000034e2	movq	0x08(%rsp),%r12
00000000000034e7	leave
00000000000034e8	ret
00000000000034e9	nop
__ZN22AppleIntelHDGraphicsFB16hwSetMirrorStateEjb:
00000000000034ea	pushq	%rbp
00000000000034eb	movq	%rsp,%rbp
00000000000034ee	subq	$0x20,%rsp
00000000000034f2	movq	%rbx,0xe8(%rbp)
00000000000034f6	movq	%r12,0xf0(%rbp)
00000000000034fa	movq	%r13,0xf8(%rbp)
00000000000034fe	movq	%rdi,%rbx
0000000000003501	movl	%edx,%r12d
0000000000003504	movl	%edx,%r13d
0000000000003507	movq	0x000118c2(%rip),%rax
000000000000350e	movl	(%rax),%ecx
0000000000003510	testl	%ecx,%ecx
0000000000003512	je	0x00003530
0000000000003514	movzbl	0x00000164(%rdi),%ecx
000000000000351b	movzbl	%dl,%edx
000000000000351e	movl	%esi,%esi
0000000000003520	xorl	%r9d,%r9d
0000000000003523	xorl	%r8d,%r8d
0000000000003526	movl	$0x061284dc,%edi
000000000000352b	callq	0x00003530
0000000000003530	cmpb	%r13b,0x00000164(%rbx)
0000000000003537	je	0x0000354a
0000000000003539	movb	%r12b,0x00000164(%rbx)
0000000000003540	movl	$0x00000000,0x00000168(%rbx)
000000000000354a	xorl	%eax,%eax
000000000000354c	movq	0xe8(%rbp),%rbx
0000000000003550	movq	0xf0(%rbp),%r12
0000000000003554	movq	0xf8(%rbp),%r13
0000000000003558	leave
0000000000003559	ret
__ZN21AppleIntelFramebuffer12getVRAMRangeEv:
000000000000355a	pushq	%rbp
000000000000355b	movq	%rsp,%rbp
000000000000355e	pushq	%rbx
000000000000355f	subq	$0x08,%rsp
0000000000003563	movq	%rdi,%rbx
0000000000003566	movq	0x00011863(%rip),%rax
000000000000356d	movl	(%rax),%esi
000000000000356f	testl	%esi,%esi
0000000000003571	je	0x0000359e
0000000000003573	movq	0x000001d0(%rdi),%rax
000000000000357a	movq	0x000000a0(%rax),%rcx
0000000000003581	movzbl	0x0000020c(%rdi),%edx
0000000000003588	movl	0x000001d8(%rdi),%esi
000000000000358e	xorl	%r9d,%r9d
0000000000003591	xorl	%r8d,%r8d
0000000000003594	movl	$0x06128500,%edi
0000000000003599	callq	0x0000359e
000000000000359e	movq	0x000001d0(%rbx),%rax
00000000000035a5	movq	0x000000a0(%rax),%rdi
00000000000035ac	testq	%rdi,%rdi
00000000000035af	je	0x000035be
00000000000035b1	movq	(%rdi),%rax
00000000000035b4	call	*0x20(%rax)
00000000000035b7	movq	0x000001d0(%rbx),%rax
00000000000035be	movq	0x000000a0(%rax),%rax
00000000000035c5	addq	$0x08,%rsp
00000000000035c9	popq	%rbx
00000000000035ca	leave
00000000000035cb	ret
__ZN21AppleIntelFramebuffer17setInterruptStateEPvj:
00000000000035cc	pushq	%rbp
00000000000035cd	movq	%rsp,%rbp
00000000000035d0	movq	0x000117f9(%rip),%rax
00000000000035d7	movl	(%rax),%r8d
00000000000035da	testl	%r8d,%r8d
00000000000035dd	je	0x00003600
00000000000035df	xorl	%ecx,%ecx
00000000000035e1	cmpq	$0x00,(%rsi)
00000000000035e5	sete	%cl
00000000000035e8	movl	%edx,%edx
00000000000035ea	movl	0x000001d8(%rdi),%esi
00000000000035f0	xorl	%r9d,%r9d
00000000000035f3	xorl	%r8d,%r8d
00000000000035f6	movl	$0x0612846c,%edi
00000000000035fb	callq	0x00003600
0000000000003600	movl	$0xe00002c7,%eax
0000000000003605	leave
0000000000003606	ret
0000000000003607	nop
__ZN21AppleIntelFramebuffer19unregisterInterruptEPv:
0000000000003608	pushq	%rbp
0000000000003609	movq	%rsp,%rbp
000000000000360c	pushq	%rbx
000000000000360d	subq	$0x08,%rsp
0000000000003611	movq	%rsi,%rbx
0000000000003614	movq	0x000117b5(%rip),%rax
000000000000361b	movl	(%rax),%r9d
000000000000361e	testl	%r9d,%r9d
0000000000003621	je	0x00003644
0000000000003623	xorl	%ecx,%ecx
0000000000003625	cmpq	$0x00,(%rsi)
0000000000003629	sete	%cl
000000000000362c	movl	0x000001d8(%rdi),%esi
0000000000003632	xorl	%r9d,%r9d
0000000000003635	xorl	%r8d,%r8d
0000000000003638	xorl	%edx,%edx
000000000000363a	movl	$0x06128468,%edi
000000000000363f	callq	0x00003644
0000000000003644	movq	$0x00000000,(%rbx)
000000000000364b	xorl	%eax,%eax
000000000000364d	addq	$0x08,%rsp
0000000000003651	popq	%rbx
0000000000003652	leave
0000000000003653	ret
__ZN21AppleIntelFramebuffer24registerForInterruptTypeEjPFvP8OSObjectPvES1_S2_PS2_:
0000000000003654	pushq	%rbp
0000000000003655	movq	%rsp,%rbp
0000000000003658	pushq	%rbx
0000000000003659	subq	$0x08,%rsp
000000000000365d	cmpl	$0x76626c20,%esi
0000000000003663	jne	0x00003681
0000000000003665	movl	0x000001d8(%rdi),%eax
000000000000366b	imulq	$0x000000f0,%rax,%rax
0000000000003672	addq	0x000001d0(%rdi),%rax
0000000000003679	addq	$0x00000260,%eax
000000000000367f	jmp	0x000036d6
0000000000003681	cmpl	$0x64636920,%esi
0000000000003687	jne	0x000036a5
0000000000003689	movl	0x000001d8(%rdi),%eax
000000000000368f	imulq	$0x000000f0,%rax,%rax
0000000000003696	addq	0x000001d0(%rdi),%rax
000000000000369d	addq	$0x00000278,%eax
00000000000036a3	jmp	0x000036d6
00000000000036a5	cmpl	$0x61757320,%esi
00000000000036ab	jne	0x000036bc
00000000000036ad	movq	0x000001d0(%rdi),%rax
00000000000036b4	addq	$0x00000460,%eax
00000000000036ba	jmp	0x000036d6
00000000000036bc	movl	$0xe00002c7,%ebx
00000000000036c1	cmpl	$0x61756420,%esi
00000000000036c7	jne	0x000036e6
00000000000036c9	movq	0x000001d0(%rdi),%rax
00000000000036d0	addq	$0x00000448,%eax
00000000000036d6	movq	%rcx,0x08(%rax)
00000000000036da	movq	%r8,0x10(%rax)
00000000000036de	movq	%rdx,(%rax)
00000000000036e1	movq	%rax,(%r9)
00000000000036e4	xorl	%ebx,%ebx
00000000000036e6	movq	0x000116e3(%rip),%rax
00000000000036ed	movl	(%rax),%r10d
00000000000036f0	testl	%r10d,%r10d
00000000000036f3	je	0x00003710
00000000000036f5	movslq	%ebx,%rcx
00000000000036f8	movl	%esi,%edx
00000000000036fa	movl	0x000001d8(%rdi),%esi
0000000000003700	xorl	%r9d,%r9d
0000000000003703	xorl	%r8d,%r8d
0000000000003706	movl	$0x06128464,%edi
000000000000370b	callq	0x00003710
0000000000003710	movl	%ebx,%eax
0000000000003712	addq	$0x08,%rsp
0000000000003716	popq	%rbx
0000000000003717	leave
0000000000003718	ret
0000000000003719	nop
__ZN22AppleIntelHDGraphicsFB14hwSetBacklightEj:
000000000000371a	pushq	%rbp
000000000000371b	movq	%rsp,%rbp
000000000000371e	movl	$0xe00002c7,%eax
0000000000003723	cmpb	$0x00,0x00000180(%rdi)
000000000000372a	je	0x0000376b
000000000000372c	leal	0x01(%rsi),%edx
000000000000372f	andl	$0x0000fffe,%edx
0000000000003735	movl	%edx,0x00000604(%rdi)
000000000000373b	movl	0x00000608(%rdi),%ecx
0000000000003741	movl	%ecx,%eax
0000000000003743	shll	$0x10,%eax
0000000000003746	orl	%edx,%eax
0000000000003748	movl	%eax,0x000003ec(%rdi)
000000000000374e	leal	0xff(%rcx),%eax
0000000000003751	cmpl	%eax,%edx
0000000000003753	je	0x0000375b
0000000000003755	xorl	%eax,%eax
0000000000003757	cmpl	%ecx,%edx
0000000000003759	jbe	0x0000376b
000000000000375b	leaq	0x0000d7ce(%rip),%rdi
0000000000003762	xorl	%eax,%eax
0000000000003764	callq	0x00003769
0000000000003769	xorl	%eax,%eax
000000000000376b	leave
000000000000376c	ret
000000000000376d	nop
__ZN22AppleIntelHDGraphicsFB25invokePCUInterruptHandlerEv:
000000000000376e	pushq	%rbp
000000000000376f	movq	%rsp,%rbp
0000000000003772	movl	$0x00000001,%esi
0000000000003777	leave
0000000000003778	jmp	0x0000f726
000000000000377d	nop
__ZN22AppleIntelHDGraphicsFB15hwSetPanelPowerEPNS_10CRTCParamsEj:
000000000000377e	pushq	%rbp
000000000000377f	movq	%rsp,%rbp
0000000000003782	pushq	%r14
0000000000003784	pushq	%r13
0000000000003786	pushq	%r12
0000000000003788	pushq	%rbx
0000000000003789	movq	%rdi,%r12
000000000000378c	movl	%edx,%r13d
000000000000378f	movq	0x0001163a(%rip),%r14
0000000000003796	movl	(%r14),%ebx
0000000000003799	testl	%ebx,%ebx
000000000000379b	je	0x000037b8
000000000000379d	movl	%edx,%edx
000000000000379f	movzbl	0x00000154(%rdi),%esi
00000000000037a6	xorl	%r9d,%r9d
00000000000037a9	xorl	%r8d,%r8d
00000000000037ac	xorl	%ecx,%ecx
00000000000037ae	movl	$0x06128475,%edi
00000000000037b3	callq	0x000037b8
00000000000037b8	cmpl	$0x02,%r13d
00000000000037bc	jne	0x00003888
00000000000037c2	cmpb	$0x00,0x00000180(%r12)
00000000000037cb	je	0x000037dd
00000000000037cd	movl	0x00000604(%r12),%esi
00000000000037d5	movq	%r12,%rdi
00000000000037d8	callq	0x10000371a
00000000000037dd	xorl	%ebx,%ebx
00000000000037df	cmpb	$0x00,0x00000154(%r12)
00000000000037e8	jne	0x000037fd
00000000000037ea	jmp	0x00003814
00000000000037ec	cmpl	$0x15,%ebx
00000000000037ef	je	0x0000381c
00000000000037f1	incl	%ebx
00000000000037f3	movl	$0x00000064,%edi
00000000000037f8	callq	0x000037fd
00000000000037fd	movq	0x00000098(%r12),%rdx
0000000000003805	movl	0x000c7200(%rdx),%eax
000000000000380b	testl	$0x08000000,%eax
0000000000003810	jne	0x000037ec
0000000000003812	jmp	0x0000381c
0000000000003814	movq	0x00000098(%r12),%rdx
000000000000381c	movl	0x0000038c(%r12),%eax
0000000000003824	orl	$0x80000000,%eax
0000000000003829	movl	%eax,0x0000038c(%r12)
0000000000003831	movl	%eax,0x000e1180(%rdx)
0000000000003837	movl	0x000003b8(%r12),%edx
000000000000383f	orl	$0x01,%edx
0000000000003842	movl	%edx,0x000003b8(%r12)
000000000000384a	movq	0x00000098(%r12),%rax
0000000000003852	movl	%edx,0x000c7204(%rax)
0000000000003858	xorl	%ebx,%ebx
000000000000385a	jmp	0x00003871
000000000000385c	cmpl	$0x15,%ebx
000000000000385f	je	0x0000391a
0000000000003865	incl	%ebx
0000000000003867	movl	$0x00000064,%edi
000000000000386c	callq	0x00003871
0000000000003871	movq	0x00000098(%r12),%rax
0000000000003879	movl	0x000c7200(%rax),%eax
000000000000387f	testl	%eax,%eax
0000000000003881	jns	0x0000385c
0000000000003883	jmp	0x0000391a
0000000000003888	movl	0x000003b8(%r12),%edx
0000000000003890	andl	$0xfe,%edx
0000000000003893	movl	%edx,0x000003b8(%r12)
000000000000389b	movq	0x00000098(%r12),%rax
00000000000038a3	movl	%edx,0x000c7204(%rax)
00000000000038a9	xorl	%ebx,%ebx
00000000000038ab	jmp	0x000038be
00000000000038ad	cmpl	$0x15,%ebx
00000000000038b0	je	0x000038d0
00000000000038b2	incl	%ebx
00000000000038b4	movl	$0x00000064,%edi
00000000000038b9	callq	0x000038be
00000000000038be	movq	0x00000098(%r12),%rdx
00000000000038c6	movl	0x000c7200(%rdx),%eax
00000000000038cc	testl	%eax,%eax
00000000000038ce	js	0x000038ad
00000000000038d0	movl	0x0000038c(%r12),%eax
00000000000038d8	andl	$0x7fffffff,%eax
00000000000038dd	movl	%eax,0x0000038c(%r12)
00000000000038e5	movl	%eax,0x000e1180(%rdx)
00000000000038eb	xorl	%ebx,%ebx
00000000000038ed	testl	%r13d,%r13d
00000000000038f0	je	0x00003905
00000000000038f2	jmp	0x0000391a
00000000000038f4	cmpl	$0x15,%ebx
00000000000038f7	je	0x0000391a
00000000000038f9	incl	%ebx
00000000000038fb	movl	$0x00000064,%edi
0000000000003900	callq	0x00003905
0000000000003905	movq	0x00000098(%r12),%rax
000000000000390d	movl	0x000c7200(%rax),%eax
0000000000003913	testl	$0x08000000,%eax
0000000000003918	jne	0x000038f4
000000000000391a	movb	%r13b,0x00000154(%r12)
0000000000003922	movl	(%r14),%r11d
0000000000003925	testl	%r11d,%r11d
0000000000003928	je	0x00003942
000000000000392a	movzbl	%ch,%esi
000000000000392e	xorl	%r9d,%r9d
0000000000003931	xorl	%r8d,%r8d
0000000000003934	xorl	%ecx,%ecx
0000000000003936	xorl	%edx,%edx
0000000000003938	movl	$0x06128476,%edi
000000000000393d	callq	0x00003942
0000000000003942	xorl	%eax,%eax
0000000000003944	popq	%rbx
0000000000003945	popq	%r12
0000000000003947	popq	%r13
0000000000003949	popq	%r14
000000000000394b	leave
000000000000394c	ret
000000000000394d	nop
__ZN22AppleIntelHDGraphicsFB20hwDoI2CRequestActionEP9I2CParams:
000000000000394e	pushq	%rbp
000000000000394f	movq	%rsp,%rbp
0000000000003952	subq	$0x000000a0,%rsp
0000000000003959	movq	%rbx,0xd8(%rbp)
000000000000395d	movq	%r12,0xe0(%rbp)
0000000000003961	movq	%r13,0xe8(%rbp)
0000000000003965	movq	%r14,0xf0(%rbp)
0000000000003969	movq	%r15,0xf8(%rbp)
000000000000396d	movq	%rdi,%r15
0000000000003970	movq	%rsi,%r14
0000000000003973	movl	(%rsi),%eax
0000000000003975	movl	%eax,0x9c(%rbp)
0000000000003978	movl	0x04(%rsi),%ebx
000000000000397b	movq	0x10(%rsi),%r13
000000000000397f	movq	0x0001144a(%rip),%rdx
0000000000003986	movl	(%rdx),%edx
0000000000003988	testl	%edx,%edx
000000000000398a	je	0x000039a2
000000000000398c	movl	%ebx,%edx
000000000000398e	movl	%eax,%esi
0000000000003990	xorl	%r9d,%r9d
0000000000003993	xorl	%r8d,%r8d
0000000000003996	xorl	%ecx,%ecx
0000000000003998	movl	$0x061284bd,%edi
000000000000399d	callq	0x000039a2
00000000000039a2	movl	$0x00000020,%r12d
00000000000039a8	cmpl	$0x01,%ebx
00000000000039ab	je	0x000039c6
00000000000039ad	jb	0x000039c0
00000000000039af	xorl	%r12d,%r12d
00000000000039b2	cmpl	$0x02,%ebx
00000000000039b5	sete	%r12b
00000000000039b9	leal	0x02(%r12,%r12),%r12d
00000000000039be	jmp	0x000039c6
00000000000039c0	movl	$0x00000010,%r12d
00000000000039c6	movl	0x00(%r13),%eax
00000000000039ca	cmpl	$0x04,%eax
00000000000039cd	je	0x000039de
00000000000039cf	movl	0x04(%r13),%edx
00000000000039d3	cmpl	$0x04,%edx
00000000000039d6	jne	0x000039f0
00000000000039d8	cmpl	$0x07,0x9c(%rbp)
00000000000039dc	ja	0x000039f0
00000000000039de	movq	%r14,%rsi
00000000000039e1	movq	%r15,%rdi
00000000000039e4	callq	0x00010522
00000000000039e9	movl	%eax,%ebx
00000000000039eb	jmp	0x00003de6
00000000000039f0	cmpl	$0x01,%eax
00000000000039f3	ja	0x00003d9d
00000000000039f9	cmpl	$0x01,%edx
00000000000039fc	ja	0x00003d9d
0000000000003a02	cmpl	$0x000001ff,0x28(%r13)
0000000000003a0a	ja	0x00003d9d
0000000000003a10	cmpl	$0x000001ff,0x38(%r13)
0000000000003a18	ja	0x00003d9d
0000000000003a1e	cmpl	$0x07,0x9c(%rbp)
0000000000003a22	ja	0x00003d9d
0000000000003a28	movl	$0x00000000,0x98(%rbp)
0000000000003a2f	movq	0x00000098(%r15),%r8
0000000000003a36	movl	0x000c5108(%r8),%esi
0000000000003a3d	testw	%si,%si
0000000000003a40	js	0x00003a6f
0000000000003a42	cmpl	$0x0b,0x98(%rbp)
0000000000003a46	jne	0x00003a60
0000000000003a48	leaq	0x0000d589(%rip),%rdi
0000000000003a4f	xorl	%eax,%eax
0000000000003a51	callq	0x00003a56
0000000000003a56	movl	$0xe00002d6,%ebx
0000000000003a5b	jmp	0x00003da2
0000000000003a60	movl	$0x0000000a,%edi
0000000000003a65	callq	0x00003a6a
0000000000003a6a	incl	0x98(%rbp)
0000000000003a6d	jmp	0x00003a2f
0000000000003a6f	movl	%r12d,%eax
0000000000003a72	addl	%r12d,%r12d
0000000000003a75	movl	%r12d,0x94(%rbp)
0000000000003a79	movb	$0x00,0xa0(%rbp)
0000000000003a7d	leaq	0xb8(%rbp),%rdx
0000000000003a81	movq	%rdx,0x88(%rbp)
0000000000003a85	shll	$0x08,%ebx
0000000000003a88	movl	%ebx,0x84(%rbp)
0000000000003a8b	movl	0x9c(%rbp),%edx
0000000000003a8e	orl	%edx,0x84(%rbp)
0000000000003a91	addq	%rax,%rax
0000000000003a94	movq	%rax,0xffffff78(%rbp)
0000000000003a9b	leaq	0xc0(%rbp),%rax
0000000000003a9f	movq	%rax,0xffffff70(%rbp)
0000000000003aa6	leaq	0xcc(%rbp),%rdx
0000000000003aaa	movq	%rdx,0xffffff68(%rbp)
0000000000003ab1	movl	$0x80000000,0x000c5104(%r8)
0000000000003abc	movq	0x00000098(%r15),%rax
0000000000003ac3	movl	$0x00000000,0x000c5104(%rax)
0000000000003acd	movq	0x00000098(%r15),%rax
0000000000003ad4	movl	$0x00000000,0x000c5110(%rax)
0000000000003ade	movzbl	0xa0(%rbp),%eax
0000000000003ae2	shll	$0x1f,%eax
0000000000003ae5	sarl	$0x1f,%eax
0000000000003ae8	andl	$0x00000080,%eax
0000000000003aed	orl	0x84(%rbp),%eax
0000000000003af0	movq	0x00000098(%r15),%rdx
0000000000003af7	movl	%eax,0x000c5100(%rdx)
0000000000003afd	cmpl	$0x01,0x00(%r13)
0000000000003b02	jne	0x00003c2a
0000000000003b08	movl	0x28(%r13),%edx
0000000000003b0c	movl	0x20(%r13),%eax
0000000000003b10	andl	$0x02,%eax
0000000000003b13	cmpl	$0x01,%eax
0000000000003b16	sbbl	%ecx,%ecx
0000000000003b18	andl	$0xfc000000,%ecx
0000000000003b1e	addl	$0x46000000,%ecx
0000000000003b24	movl	%edx,%r12d
0000000000003b27	shll	$0x10,%edx
0000000000003b2a	orl	0x08(%r13),%edx
0000000000003b2e	movzbl	0x10(%rbp),%eax
0000000000003b33	shll	$0x08,%eax
0000000000003b36	orl	%eax,%edx
0000000000003b38	orl	%ecx,%edx
0000000000003b3a	movq	0x00000098(%r15),%rax
0000000000003b41	movl	%edx,0x000c5104(%rax)
0000000000003b47	movl	$0x00000004,%ebx
0000000000003b4c	cmpq	$0x04,%r12
0000000000003b50	cmovbeq	%r12,%rbx
0000000000003b54	testq	%rbx,%rbx
0000000000003b57	je	0x00003b83
0000000000003b59	movl	0x28(%r13),%edi
0000000000003b5d	subq	%r12,%rdi
0000000000003b60	addq	0x44(%r13),%rdi
0000000000003b64	movq	%rbx,%rdx
0000000000003b67	movq	0xffffff68(%rbp),%rsi
0000000000003b6e	callq	0x00003b73
0000000000003b73	movq	0x00000098(%r15),%rdx
0000000000003b7a	movl	0xcc(%rbp),%eax
0000000000003b7d	movl	%eax,0x000c510c(%rdx)
0000000000003b83	movq	0xffffff78(%rbp),%rdi
0000000000003b8a	imulq	%rbx,%rdi
0000000000003b8e	movq	0x88(%rbp),%rdx
0000000000003b92	movl	$0x000f4240,%esi
0000000000003b97	callq	0x00003b9c
0000000000003b9c	jmp	0x00003bb8
0000000000003b9e	movq	0xffffff70(%rbp),%rdi
0000000000003ba5	callq	0x00003baa
0000000000003baa	movq	0xb8(%rbp),%rax
0000000000003bae	cmpq	%rax,0xc0(%rbp)
0000000000003bb2	ja	0x00003d68
0000000000003bb8	movq	0x00000098(%r15),%rax
0000000000003bbf	movl	0x000c5108(%rax),%eax
0000000000003bc5	testb	$0x08,%ah
0000000000003bc8	je	0x00003b9e
0000000000003bca	subq	%rbx,%r12
0000000000003bcd	jne	0x100003b47
0000000000003bd3	movq	0x88(%rbp),%rdx
0000000000003bd7	movl	$0x000f4240,%esi
0000000000003bdc	movl	0x94(%rbp),%edi
0000000000003bdf	callq	0x00003be4
0000000000003be4	jmp	0x00003bfc
0000000000003be6	movq	0xffffff70(%rbp),%rdi
0000000000003bed	callq	0x00003bf2
0000000000003bf2	movq	0xb8(%rbp),%rdx
0000000000003bf6	cmpq	%rdx,0xc0(%rbp)
0000000000003bfa	ja	0x00003c11
0000000000003bfc	movq	0x00000098(%r15),%r8
0000000000003c03	movl	0x000c5108(%r8),%eax
0000000000003c0a	testb	$0x44,%ah
0000000000003c0d	je	0x00003be6
0000000000003c0f	jmp	0x00003c18
0000000000003c11	movq	0x00000098(%r15),%r8
0000000000003c18	xorl	%eax,%eax
0000000000003c1a	movl	0x28(%r13),%edx
0000000000003c1e	jmp	0x00003c23
0000000000003c20	incq	%rax
0000000000003c23	cmpq	%rdx,%rax
0000000000003c26	jb	0x00003c20
0000000000003c28	jmp	0x00003c31
0000000000003c2a	movq	0x00000098(%r15),%r8
0000000000003c31	cmpl	$0x01,0x04(%r13)
0000000000003c36	jne	0x00003d1b
0000000000003c3c	movl	0x38(%r13),%esi
0000000000003c40	movl	0x20(%r13),%eax
0000000000003c44	andl	$0x02,%eax
0000000000003c47	cmpl	$0x01,%eax
0000000000003c4a	sbbl	%ecx,%ecx
0000000000003c4c	andl	$0xfc000000,%ecx
0000000000003c52	addl	$0x46000000,%ecx
0000000000003c58	movl	%esi,%ebx
0000000000003c5a	movl	0x0c(%r13),%edx
0000000000003c5e	orl	$0x01,%edx
0000000000003c61	shll	$0x10,%esi
0000000000003c64	orl	%esi,%edx
0000000000003c66	movzbl	0x11(%rbp),%eax
0000000000003c6b	shll	$0x08,%eax
0000000000003c6e	orl	%eax,%edx
0000000000003c70	orl	%ecx,%edx
0000000000003c72	movl	%edx,0x000c5104(%r8)
0000000000003c79	movl	$0x00000004,%r12d
0000000000003c7f	cmpq	$0x04,%rbx
0000000000003c83	cmovbeq	%rbx,%r12
0000000000003c87	movq	0xffffff78(%rbp),%rdi
0000000000003c8e	imulq	%r12,%rdi
0000000000003c92	movq	0x88(%rbp),%rdx
0000000000003c96	movl	$0x000f4240,%esi
0000000000003c9b	callq	0x00003ca0
0000000000003ca0	jmp	0x00003cbc
0000000000003ca2	movq	0xffffff70(%rbp),%rdi
0000000000003ca9	callq	0x00003cae
0000000000003cae	movq	0xb8(%rbp),%rax
0000000000003cb2	cmpq	%rax,0xc0(%rbp)
0000000000003cb6	ja	0x00003d68
0000000000003cbc	movq	0x00000098(%r15),%r8
0000000000003cc3	movl	0x000c5108(%r8),%eax
0000000000003cca	testb	$0x08,%ah
0000000000003ccd	je	0x00003ca2
0000000000003ccf	testq	%r12,%r12
0000000000003cd2	je	0x00003cfb
0000000000003cd4	movl	0x000c510c(%r8),%eax
0000000000003cdb	movl	%eax,0xcc(%rbp)
0000000000003cde	movl	0x38(%r13),%esi
0000000000003ce2	subq	%rbx,%rsi
0000000000003ce5	addq	0x4c(%r13),%rsi
0000000000003ce9	movq	%r12,%rdx
0000000000003cec	movq	0xffffff68(%rbp),%rdi
0000000000003cf3	callq	0x00003cf8
0000000000003cf8	subq	%r12,%rbx
0000000000003cfb	testq	%rbx,%rbx
0000000000003cfe	jne	0x100003c79
0000000000003d04	xorl	%eax,%eax
0000000000003d06	movl	0x38(%r13),%edx
0000000000003d0a	jmp	0x00003d0f
0000000000003d0c	incq	%rax
0000000000003d0f	cmpq	%rdx,%rax
0000000000003d12	jb	0x00003d0c
0000000000003d14	movq	0x00000098(%r15),%r8
0000000000003d1b	movl	$0x48000000,0x000c5104(%r8)
0000000000003d26	movq	0x88(%rbp),%rdx
0000000000003d2a	movl	$0x000f4240,%esi
0000000000003d2f	movl	0x94(%rbp),%edi
0000000000003d32	callq	0x00003d37
0000000000003d37	leaq	0xc0(%rbp),%rbx
0000000000003d3b	jmp	0x00003d53
0000000000003d3d	movq	%rbx,%rdi
0000000000003d40	callq	0x00003d45
0000000000003d45	movq	0xb8(%rbp),%rdx
0000000000003d49	cmpq	%rdx,0xc0(%rbp)
0000000000003d4d	ja	0x00003ddb
0000000000003d53	movq	0x00000098(%r15),%r8
0000000000003d5a	movl	0x000c5108(%r8),%eax
0000000000003d61	testb	$0x08,%ah
0000000000003d64	je	0x00003d3d
0000000000003d66	jmp	0x00003de2
0000000000003d68	cmpl	$0x02,0x9c(%rbp)
0000000000003d6c	jne	0x00003d84
0000000000003d6e	cmpb	$0x00,0xa0(%rbp)
0000000000003d72	jne	0x00003d84
0000000000003d74	movb	$0x01,0xa0(%rbp)
0000000000003d78	movq	0x00000098(%r15),%r8
0000000000003d7f	jmp	0x100003ab1
0000000000003d84	movl	$0xe00002ed,%ebx
0000000000003d89	movq	0x00000098(%r15),%r8
0000000000003d90	movl	$0x00008000,0x000c5108(%r8)
0000000000003d9b	jmp	0x00003da2
0000000000003d9d	movl	$0xe00002c2,%ebx
0000000000003da2	movl	$0x00000018,%esi
0000000000003da7	movq	%r14,%rdi
0000000000003daa	callq	0x00003daf
0000000000003daf	movl	%ebx,0x1c(%r13)
0000000000003db3	movq	0x00011016(%rip),%rax
0000000000003dba	movl	(%rax),%r12d
0000000000003dbd	testl	%r12d,%r12d
0000000000003dc0	je	0x00003de6
0000000000003dc2	movslq	%ebx,%rsi
0000000000003dc5	xorl	%r9d,%r9d
0000000000003dc8	xorl	%r8d,%r8d
0000000000003dcb	xorl	%ecx,%ecx
0000000000003dcd	xorl	%edx,%edx
0000000000003dcf	movl	$0x061284be,%edi
0000000000003dd4	callq	0x00003dd9
0000000000003dd9	jmp	0x00003de6
0000000000003ddb	movq	0x00000098(%r15),%r8
0000000000003de2	xorl	%ebx,%ebx
0000000000003de4	jmp	0x00003d90
0000000000003de6	movl	%ebx,%eax
0000000000003de8	movq	0xd8(%rbp),%rbx
0000000000003dec	movq	0xe0(%rbp),%r12
0000000000003df0	movq	0xe8(%rbp),%r13
0000000000003df4	movq	0xf0(%rbp),%r14
0000000000003df8	movq	0xf8(%rbp),%r15
0000000000003dfc	leave
0000000000003dfd	ret
__ZN22AppleIntelHDGraphicsFB8doActionEPS_jPvS1_S1_:
0000000000003dfe	pushq	%rbp
0000000000003dff	movq	%rsp,%rbp
0000000000003e02	subq	$0x30,%rsp
0000000000003e06	movq	%rbx,0xd8(%rbp)
0000000000003e0a	movq	%r12,0xe0(%rbp)
0000000000003e0e	movq	%r13,0xe8(%rbp)
0000000000003e12	movq	%r14,0xf0(%rbp)
0000000000003e16	movq	%r15,0xf8(%rbp)
0000000000003e1a	movq	%rdi,%r15
0000000000003e1d	movl	%esi,%r12d
0000000000003e20	movq	%rdx,%r13
0000000000003e23	movq	0x00010fa6(%rip),%r14
0000000000003e2a	movl	(%r14),%esi
0000000000003e2d	testl	%esi,%esi
0000000000003e2f	je	0x00003e48
0000000000003e31	movl	%r12d,%esi
0000000000003e34	xorl	%r9d,%r9d
0000000000003e37	xorl	%r8d,%r8d
0000000000003e3a	xorl	%ecx,%ecx
0000000000003e3c	xorl	%edx,%edx
0000000000003e3e	movl	$0x06128495,%edi
0000000000003e43	callq	0x00003e48
0000000000003e48	xorl	%ebx,%ebx
0000000000003e4a	testl	%r12d,%r12d
0000000000003e4d	jne	0x00003e5c
0000000000003e4f	movq	%r13,%rsi
0000000000003e52	movq	%r15,%rdi
0000000000003e55	callq	0x10000394e
0000000000003e5a	movl	%eax,%ebx
0000000000003e5c	movl	(%r14),%ecx
0000000000003e5f	testl	%ecx,%ecx
0000000000003e61	je	0x00003e7a
0000000000003e63	movslq	%ebx,%rsi
0000000000003e66	xorl	%r9d,%r9d
0000000000003e69	xorl	%r8d,%r8d
0000000000003e6c	xorl	%ecx,%ecx
0000000000003e6e	xorl	%edx,%edx
0000000000003e70	movl	$0x06128496,%edi
0000000000003e75	callq	0x00003e7a
0000000000003e7a	movl	%ebx,%eax
0000000000003e7c	movq	0xd8(%rbp),%rbx
0000000000003e80	movq	0xe0(%rbp),%r12
0000000000003e84	movq	0xe8(%rbp),%r13
0000000000003e88	movq	0xf0(%rbp),%r14
0000000000003e8c	movq	0xf8(%rbp),%r15
0000000000003e90	leave
0000000000003e91	ret
__ZN22AppleIntelHDGraphicsFB4stopEP9IOService:
0000000000003e92	pushq	%rbp
0000000000003e93	movq	%rsp,%rbp
0000000000003e96	pushq	%r14
0000000000003e98	pushq	%r13
0000000000003e9a	pushq	%r12
0000000000003e9c	pushq	%rbx
0000000000003e9d	movq	%rdi,%r13
0000000000003ea0	movq	%rsi,%r14
0000000000003ea3	movq	0x000000d8(%rdi),%rdi
0000000000003eaa	testq	%rdi,%rdi
0000000000003ead	je	0x00003ed6
0000000000003eaf	movq	(%rdi),%rax
0000000000003eb2	call	*0x28(%rax)
0000000000003eb5	movq	$0x00000000,0x000000d8(%r13)
0000000000003ec0	movq	$0x00000000,0x000000e8(%r13)
0000000000003ecb	movl	$0x00000000,0x000000f8(%r13)
0000000000003ed6	movq	0x000000b8(%r13),%rdi
0000000000003edd	testq	%rdi,%rdi
0000000000003ee0	je	0x00003ef3
0000000000003ee2	movq	(%rdi),%rax
0000000000003ee5	call	*0x28(%rax)
0000000000003ee8	movq	$0x00000000,0x000000b8(%r13)
0000000000003ef3	movq	0x000000b0(%r13),%rdi
0000000000003efa	testq	%rdi,%rdi
0000000000003efd	je	0x00003f10
0000000000003eff	movq	(%rdi),%rax
0000000000003f02	call	*0x28(%rax)
0000000000003f05	movq	$0x00000000,0x000000b0(%r13)
0000000000003f10	movq	0x000000a0(%r13),%rdi
0000000000003f17	testq	%rdi,%rdi
0000000000003f1a	je	0x00003f2d
0000000000003f1c	movq	(%rdi),%rax
0000000000003f1f	call	*0x28(%rax)
0000000000003f22	movq	$0x00000000,0x000000a0(%r13)
0000000000003f2d	movq	0x000006d8(%r13),%rdi
0000000000003f34	testq	%rdi,%rdi
0000000000003f37	je	0x00003f4a
0000000000003f39	movq	(%rdi),%rax
0000000000003f3c	call	*0x28(%rax)
0000000000003f3f	movq	$0x00000000,0x000006d8(%r13)
0000000000003f4a	movq	0x00000100(%r13),%rdi
0000000000003f51	testq	%rdi,%rdi
0000000000003f54	je	0x00003f72
0000000000003f56	movq	(%rdi),%rax
0000000000003f59	call	*0x28(%rax)
0000000000003f5c	movq	$0x00000000,0x00000100(%r13)
0000000000003f67	movq	$0x00000000,0x00000108(%r13)
0000000000003f72	movq	0x000000e0(%r13),%rdi
0000000000003f79	testq	%rdi,%rdi
0000000000003f7c	je	0x00003f8f
0000000000003f7e	movq	(%rdi),%rax
0000000000003f81	call	*0x28(%rax)
0000000000003f84	movq	$0x00000000,0x000000e0(%r13)
0000000000003f8f	movq	0x00000430(%r13),%rdi
0000000000003f96	movq	(%rdi),%rax
0000000000003f99	call	*0x00000158(%rax)
0000000000003f9f	movq	0x00000418(%r13),%rdi
0000000000003fa6	movq	(%rdi),%rax
0000000000003fa9	movq	0x00000430(%r13),%rsi
0000000000003fb0	call	*0x00000148(%rax)
0000000000003fb6	movq	0x00000430(%r13),%rdi
0000000000003fbd	testq	%rdi,%rdi
0000000000003fc0	je	0x00003fd3
0000000000003fc2	movq	(%rdi),%rax
0000000000003fc5	call	*0x28(%rax)
0000000000003fc8	movq	$0x00000000,0x00000430(%r13)
0000000000003fd3	movq	0x00000410(%r13),%rdi
0000000000003fda	testq	%rdi,%rdi
0000000000003fdd	je	0x00003ff0
0000000000003fdf	movq	(%rdi),%rax
0000000000003fe2	call	*0x28(%rax)
0000000000003fe5	movq	$0x00000000,0x00000410(%r13)
0000000000003ff0	movq	0x00000418(%r13),%rdi
0000000000003ff7	testq	%rdi,%rdi
0000000000003ffa	je	0x0000400d
0000000000003ffc	movq	(%rdi),%rax
0000000000003fff	call	*0x28(%rax)
0000000000004002	movq	$0x00000000,0x00000418(%r13)
000000000000400d	movq	0x00000090(%r13),%rdi
0000000000004014	testq	%rdi,%rdi
0000000000004017	je	0x0000402a
0000000000004019	movq	(%rdi),%rax
000000000000401c	call	*0x28(%rax)
000000000000401f	movq	$0x00000000,0x00000090(%r13)
000000000000402a	movq	%r13,%rbx
000000000000402d	xorl	%r12d,%r12d
0000000000004030	jmp	0x00004068
0000000000004032	movq	0x00000110(%rbx),%rdi
0000000000004039	testq	%rdi,%rdi
000000000000403c	je	0x00004061
000000000000403e	movq	(%rdi),%rax
0000000000004041	xorl	%esi,%esi
0000000000004043	call	*0x000001f8(%rax)
0000000000004049	movq	0x00000110(%rbx),%rdi
0000000000004050	movq	(%rdi),%rax
0000000000004053	call	*0x28(%rax)
0000000000004056	movq	$0x00000000,0x00000110(%rbx)
0000000000004061	incl	%r12d
0000000000004064	addq	$0x08,%rbx
0000000000004068	cmpl	0x00000194(%r13),%r12d
000000000000406f	jl	0x00004032
0000000000004071	movq	0x00000120(%r13),%rdi
0000000000004078	testq	%rdi,%rdi
000000000000407b	je	0x0000408e
000000000000407d	movq	(%rdi),%rax
0000000000004080	call	*0x28(%rax)
0000000000004083	movq	$0x00000000,0x00000120(%r13)
000000000000408e	movq	0x00000178(%r13),%rdi
0000000000004095	testq	%rdi,%rdi
0000000000004098	je	0x000040ab
000000000000409a	movq	(%rdi),%rax
000000000000409d	call	*0x28(%rax)
00000000000040a0	movq	$0x00000000,0x00000178(%r13)
00000000000040ab	movq	0x00010e16(%rip),%rdi
00000000000040b2	testq	%rdi,%rdi
00000000000040b5	je	0x000040bd
00000000000040b7	movq	(%rdi),%rax
00000000000040ba	call	*0x28(%rax)
00000000000040bd	movq	0x00000440(%r13),%rsi
00000000000040c4	testq	%rsi,%rsi
00000000000040c7	je	0x000040f6
00000000000040c9	movq	0x00000418(%r13),%rdi
00000000000040d0	movq	(%rdi),%rax
00000000000040d3	call	*0x00000148(%rax)
00000000000040d9	movq	0x00000440(%r13),%rdi
00000000000040e0	testq	%rdi,%rdi
00000000000040e3	je	0x000040f6
00000000000040e5	movq	(%rdi),%rax
00000000000040e8	call	*0x28(%rax)
00000000000040eb	movq	$0x00000000,0x00000440(%r13)
00000000000040f6	movq	0x000104e3(%rip),%rdi
00000000000040fd	testq	%rdi,%rdi
0000000000004100	je	0x000041e7
0000000000004106	movq	(%rdi),%rax
0000000000004109	testq	%rax,%rax
000000000000410c	je	0x00004120
000000000000410e	movl	0x08(%rdi),%esi
0000000000004111	movq	%rax,%rdi
0000000000004114	callq	0x00004119
0000000000004119	movq	0x000104c0(%rip),%rdi
0000000000004120	movq	0x10(%rdi),%rax
0000000000004124	testq	%rax,%rax
0000000000004127	je	0x0000413b
0000000000004129	movl	0x18(%rdi),%esi
000000000000412c	movq	%rax,%rdi
000000000000412f	callq	0x00004134
0000000000004134	movq	0x000104a5(%rip),%rdi
000000000000413b	movq	0x20(%rdi),%rax
000000000000413f	testq	%rax,%rax
0000000000004142	je	0x00004156
0000000000004144	movl	0x28(%rdi),%esi
0000000000004147	movq	%rax,%rdi
000000000000414a	callq	0x0000414f
000000000000414f	movq	0x0001048a(%rip),%rdi
0000000000004156	movq	0x30(%rdi),%rax
000000000000415a	testq	%rax,%rax
000000000000415d	je	0x00004171
000000000000415f	movl	0x38(%rdi),%esi
0000000000004162	movq	%rax,%rdi
0000000000004165	callq	0x0000416a
000000000000416a	movq	0x0001046f(%rip),%rdi
0000000000004171	movq	0x40(%rdi),%rax
0000000000004175	testq	%rax,%rax
0000000000004178	je	0x0000418c
000000000000417a	movl	0x48(%rdi),%esi
000000000000417d	movq	%rax,%rdi
0000000000004180	callq	0x00004185
0000000000004185	movq	0x00010454(%rip),%rdi
000000000000418c	movq	0x50(%rdi),%rax
0000000000004190	testq	%rax,%rax
0000000000004193	je	0x000041a7
0000000000004195	movl	0x58(%rdi),%esi
0000000000004198	movq	%rax,%rdi
000000000000419b	callq	0x000041a0
00000000000041a0	movq	0x00010439(%rip),%rdi
00000000000041a7	movq	0x60(%rdi),%rax
00000000000041ab	testq	%rax,%rax
00000000000041ae	je	0x000041c2
00000000000041b0	movl	0x68(%rdi),%esi
00000000000041b3	movq	%rax,%rdi
00000000000041b6	callq	0x000041bb
00000000000041bb	movq	0x0001041e(%rip),%rdi
00000000000041c2	movq	0x70(%rdi),%rax
00000000000041c6	testq	%rax,%rax
00000000000041c9	je	0x000041dd
00000000000041cb	movl	0x78(%rdi),%esi
00000000000041ce	movq	%rax,%rdi
00000000000041d1	callq	0x000041d6
00000000000041d6	movq	0x00010403(%rip),%rdi
00000000000041dd	movl	$0x00000080,%esi
00000000000041e2	callq	0x000041e7
00000000000041e7	movq	%r14,%rsi
00000000000041ea	movq	%r13,%rdi
00000000000041ed	movq	0x00010be4(%rip),%rax
00000000000041f4	movq	0x000005d8(%rax),%r11
00000000000041fb	popq	%rbx
00000000000041fc	popq	%r12
00000000000041fe	popq	%r13
0000000000004200	popq	%r14
0000000000004202	leave
0000000000004203	jmp	*%r11
__ZN22AppleIntelHDGraphicsFB14hwDoI2CRequestEjjP14IOI2CBusTimingP12IOI2CRequest:
0000000000004206	pushq	%rbp
0000000000004207	movq	%rsp,%rbp
000000000000420a	subq	$0x30,%rsp
000000000000420e	movq	%rbx,0xd8(%rbp)
0000000000004212	movq	%r12,0xe0(%rbp)
0000000000004216	movq	%r13,0xe8(%rbp)
000000000000421a	movq	%r14,0xf0(%rbp)
000000000000421e	movq	%r15,0xf8(%rbp)
0000000000004222	movq	%rdi,%r15
0000000000004225	movl	%esi,%ebx
0000000000004227	movl	%edx,%r12d
000000000000422a	movq	%rcx,%r13
000000000000422d	movq	%r8,%r14
0000000000004230	movl	$0x00000018,%edi
0000000000004235	callq	0x0000423a
000000000000423a	movq	%rax,%rdx
000000000000423d	movl	%ebx,(%rax)
000000000000423f	movl	%r12d,0x04(%rax)
0000000000004243	movq	%r13,0x08(%rax)
0000000000004247	movq	%r14,0x10(%rax)
000000000000424b	movq	0x00010c76(%rip),%rdi
0000000000004252	testq	%rdi,%rdi
0000000000004255	je	0x00004280
0000000000004257	movq	(%rdi),%rax
000000000000425a	xorl	%r8d,%r8d
000000000000425d	xorl	%ecx,%ecx
000000000000425f	xorl	%esi,%esi
0000000000004261	movq	0x000001c0(%rax),%r11
0000000000004268	movq	0xd8(%rbp),%rbx
000000000000426c	movq	0xe0(%rbp),%r12
0000000000004270	movq	0xe8(%rbp),%r13
0000000000004274	movq	0xf0(%rbp),%r14
0000000000004278	movq	0xf8(%rbp),%r15
000000000000427c	leave
000000000000427d	jmp	*%r11
0000000000004280	movq	%rax,%rsi
0000000000004283	movq	%r15,%rdi
0000000000004286	movq	0xd8(%rbp),%rbx
000000000000428a	movq	0xe0(%rbp),%r12
000000000000428e	movq	0xe8(%rbp),%r13
0000000000004292	movq	0xf0(%rbp),%r14
0000000000004296	movq	0xf8(%rbp),%r15
000000000000429a	leave
000000000000429b	jmp	0x10000394e
__ZN21AppleIntelFramebuffer12doI2CRequestEjP14IOI2CBusTimingP12IOI2CRequest:
00000000000042a0	pushq	%rbp
00000000000042a1	movq	%rsp,%rbp
00000000000042a4	subq	$0x30,%rsp
00000000000042a8	movq	%rbx,0xd8(%rbp)
00000000000042ac	movq	%r12,0xe0(%rbp)
00000000000042b0	movq	%r13,0xe8(%rbp)
00000000000042b4	movq	%r14,0xf0(%rbp)
00000000000042b8	movq	%r15,0xf8(%rbp)
00000000000042bc	movq	%rdi,%rbx
00000000000042bf	movl	%esi,%r12d
00000000000042c2	movq	%rdx,%r15
00000000000042c5	movq	%rcx,%r14
00000000000042c8	movq	0x00010b01(%rip),%r13
00000000000042cf	movl	0x00(%r13),%r10d
00000000000042d3	testl	%r10d,%r10d
00000000000042d6	je	0x000042f2
00000000000042d8	movl	%esi,%edx
00000000000042da	movl	0x000001d8(%rdi),%esi
00000000000042e0	xorl	%r9d,%r9d
00000000000042e3	xorl	%r8d,%r8d
00000000000042e6	xorl	%ecx,%ecx
00000000000042e8	movl	$0x061284c1,%edi
00000000000042ed	callq	0x000042f2
00000000000042f2	movl	0x000001d8(%rbx),%edx
00000000000042f8	movq	0x000001d0(%rbx),%rdi
00000000000042ff	movzbl	0x00000190(%rdi),%eax
0000000000004306	cmpl	%eax,%edx
0000000000004308	jne	0x00004313
000000000000430a	testb	$0x02,0x00000498(%rbx)
0000000000004311	jne	0x00004370
0000000000004313	movzbl	0x00000191(%rdi),%eax
000000000000431a	cmpl	%eax,%edx
000000000000431c	jne	0x00004347
000000000000431e	testl	$0x000001fc,0x00000498(%rbx)
0000000000004328	je	0x00004347
000000000000432a	xorl	%ebx,%ebx
000000000000432c	movl	0x00(%r13),%r9d
0000000000004330	testl	%r9d,%r9d
0000000000004333	je	0x000043d0
0000000000004339	xorl	%r9d,%r9d
000000000000433c	xorl	%r8d,%r8d
000000000000433f	xorl	%ecx,%ecx
0000000000004341	xorl	%edx,%edx
0000000000004343	xorl	%esi,%esi
0000000000004345	jmp	0x000043bf
0000000000004347	movl	%r12d,%esi
000000000000434a	testl	%r12d,%r12d
000000000000434d	jne	0x0000439b
000000000000434f	movl	0x00000210(%rbx),%eax
0000000000004355	movb	$0x03,%dh
0000000000004358	cmpl	$0x03,%eax
000000000000435b	je	0x0000439b
000000000000435d	cmpl	$0x01,%eax
0000000000004360	je	0x00004396
0000000000004362	cmpb	$0x00,0x00000193(%rdi)
0000000000004369	jne	0x00004396
000000000000436b	cmpl	$0x02,%eax
000000000000436e	je	0x00004396
0000000000004370	movl	0x00(%r13),%r8d
0000000000004374	testl	%r8d,%r8d
0000000000004377	je	0x000043cb
0000000000004379	xorl	%r9d,%r9d
000000000000437c	xorl	%r8d,%r8d
000000000000437f	xorl	%ecx,%ecx
0000000000004381	xorl	%edx,%edx
0000000000004383	movq	$0xe00002c7,%rsi
000000000000438a	movl	$0x061284c2,%edi
000000000000438f	callq	0x00004394
0000000000004394	jmp	0x000043cb
0000000000004396	movl	$0x00000002,%esi
000000000000439b	movq	%r14,%r8
000000000000439e	movq	%r15,%rcx
00000000000043a1	xorl	%edx,%edx
00000000000043a3	callq	0x100004206
00000000000043a8	movl	%eax,%ebx
00000000000043aa	movl	0x00(%r13),%edi
00000000000043ae	testl	%edi,%edi
00000000000043b0	je	0x000043d0
00000000000043b2	movslq	%eax,%rsi
00000000000043b5	xorl	%r9d,%r9d
00000000000043b8	xorl	%r8d,%r8d
00000000000043bb	xorl	%ecx,%ecx
00000000000043bd	xorl	%edx,%edx
00000000000043bf	movl	$0x061284c2,%edi
00000000000043c4	callq	0x000043c9
00000000000043c9	jmp	0x000043d0
00000000000043cb	movl	$0xe00002c7,%ebx
00000000000043d0	movl	%ebx,%eax
00000000000043d2	movq	0xd8(%rbp),%rbx
00000000000043d6	movq	0xe0(%rbp),%r12
00000000000043da	movq	0xe8(%rbp),%r13
00000000000043de	movq	0xf0(%rbp),%r14
00000000000043e2	movq	0xf8(%rbp),%r15
00000000000043e6	leave
00000000000043e7	ret
__ZN22AppleIntelHDGraphicsFB20getPlatformModelNameEv:
00000000000043e8	pushq	%rbp
00000000000043e9	movq	%rsp,%rbp
00000000000043ec	cmpb	$0x00,0x000108a1(%rip)
00000000000043f3	jne	0x00004412
00000000000043f5	callq	0x000043fa
00000000000043fa	movq	%rax,%rdi
00000000000043fd	movq	(%rax),%rax
0000000000004400	movl	$0x0000003f,%edx
0000000000004405	leaq	0x00010888(%rip),%rsi
000000000000440c	call	*0x000008b8(%rax)
0000000000004412	leaq	0x0001087b(%rip),%rax
0000000000004419	leave
000000000000441a	ret
000000000000441b	nop
__ZN22AppleIntelHDGraphicsFB20hwGetPanelPropertiesEjP15PanelProperties:
000000000000441c	pushq	%rbp
000000000000441d	movq	%rsp,%rbp
0000000000004420	pushq	%r13
0000000000004422	pushq	%r12
0000000000004424	pushq	%rbx
0000000000004425	subq	$0x08,%rsp
0000000000004429	movq	%rdi,%r13
000000000000442c	movq	%rdx,%rbx
000000000000442f	movl	$0x00000001,(%rdx)
0000000000004435	movl	$0x00000000,0x20(%rdx)
000000000000443c	movl	$0x00000000,0x04(%rdx)
0000000000004443	movl	$0x0000000a,0x08(%rdx)
000000000000444a	movl	$0x000007d0,0x0c(%rdx)
0000000000004451	movl	$0x000007d0,0x10(%rdx)
0000000000004458	movl	$0x0000000a,0x14(%rdx)
000000000000445f	movl	$0x00000000,0x18(%rdx)
0000000000004466	movl	$0x00000004,0x1c(%rdx)
000000000000446d	movq	0x0001096c(%rip),%rax
0000000000004474	movq	(%rax),%r12
0000000000004477	movq	0x00000088(%rdi),%rdi
000000000000447e	movq	(%rdi),%rax
0000000000004481	leaq	0x0000cb79(%rip),%rsi
0000000000004488	call	*0x000002b8(%rax)
000000000000448e	movq	%rax,%rdi
0000000000004491	movq	%r12,%rsi
0000000000004494	callq	0x00004499
0000000000004499	movq	%rax,%rdx
000000000000449c	testq	%rax,%rax
000000000000449f	je	0x000044b1
00000000000044a1	movq	(%rax),%rax
00000000000044a4	movq	%rdx,%rdi
00000000000044a7	call	*0x00000178(%rax)
00000000000044ad	movl	(%rax),%eax
00000000000044af	movl	%eax,(%rbx)
00000000000044b1	movq	0x00000088(%r13),%rdi
00000000000044b8	movq	(%rdi),%rax
00000000000044bb	leaq	0x0000cb4f(%rip),%rsi
00000000000044c2	call	*0x000002b8(%rax)
00000000000044c8	movq	%rax,%rdi
00000000000044cb	movq	%r12,%rsi
00000000000044ce	callq	0x000044d3
00000000000044d3	movq	%rax,%rdx
00000000000044d6	testq	%rax,%rax
00000000000044d9	je	0x000044ec
00000000000044db	movq	(%rax),%rax
00000000000044de	movq	%rdx,%rdi
00000000000044e1	call	*0x00000178(%rax)
00000000000044e7	movl	(%rax),%eax
00000000000044e9	movl	%eax,0x20(%rbx)
00000000000044ec	movq	0x00000088(%r13),%rdi
00000000000044f3	movq	(%rdi),%rax
00000000000044f6	leaq	0x0000cb27(%rip),%rsi
00000000000044fd	call	*0x000002b8(%rax)
0000000000004503	movq	%rax,%rdi
0000000000004506	movq	%r12,%rsi
0000000000004509	callq	0x0000450e
000000000000450e	movq	%rax,%rdx
0000000000004511	testq	%rax,%rax
0000000000004514	je	0x0000452c
0000000000004516	movq	(%rax),%rax
0000000000004519	movq	%rdx,%rdi
000000000000451c	call	*0x00000178(%rax)
0000000000004522	movl	(%rax),%eax
0000000000004524	leal	(%rax,%rax,4),%eax
0000000000004527	addl	%eax,%eax
0000000000004529	movl	%eax,0x04(%rbx)
000000000000452c	movq	0x00000088(%r13),%rdi
0000000000004533	movq	(%rdi),%rax
0000000000004536	leaq	0x0000caf1(%rip),%rsi
000000000000453d	call	*0x000002b8(%rax)
0000000000004543	movq	%rax,%rdi
0000000000004546	movq	%r12,%rsi
0000000000004549	callq	0x0000454e
000000000000454e	movq	%rax,%rdx
0000000000004551	testq	%rax,%rax
0000000000004554	je	0x0000456c
0000000000004556	movq	(%rax),%rax
0000000000004559	movq	%rdx,%rdi
000000000000455c	call	*0x00000178(%rax)
0000000000004562	movl	(%rax),%eax
0000000000004564	leal	(%rax,%rax,4),%eax
0000000000004567	addl	%eax,%eax
0000000000004569	movl	%eax,0x08(%rbx)
000000000000456c	movq	0x00000088(%r13),%rdi
0000000000004573	movq	(%rdi),%rax
0000000000004576	leaq	0x0000cabb(%rip),%rsi
000000000000457d	call	*0x000002b8(%rax)
0000000000004583	movq	%rax,%rdi
0000000000004586	movq	%r12,%rsi
0000000000004589	callq	0x0000458e
000000000000458e	movq	%rax,%rdx
0000000000004591	testq	%rax,%rax
0000000000004594	je	0x000045ac
0000000000004596	movq	(%rax),%rax
0000000000004599	movq	%rdx,%rdi
000000000000459c	call	*0x00000178(%rax)
00000000000045a2	movl	(%rax),%eax
00000000000045a4	leal	(%rax,%rax,4),%eax
00000000000045a7	addl	%eax,%eax
00000000000045a9	movl	%eax,0x0c(%rbx)
00000000000045ac	movq	0x00000088(%r13),%rdi
00000000000045b3	movq	(%rdi),%rax
00000000000045b6	leaq	0x0000ca85(%rip),%rsi
00000000000045bd	call	*0x000002b8(%rax)
00000000000045c3	movq	%rax,%rdi
00000000000045c6	movq	%r12,%rsi
00000000000045c9	callq	0x000045ce
00000000000045ce	movq	%rax,%rdx
00000000000045d1	testq	%rax,%rax
00000000000045d4	je	0x000045ec
00000000000045d6	movq	(%rax),%rax
00000000000045d9	movq	%rdx,%rdi
00000000000045dc	call	*0x00000178(%rax)
00000000000045e2	movl	(%rax),%eax
00000000000045e4	leal	(%rax,%rax,4),%eax
00000000000045e7	addl	%eax,%eax
00000000000045e9	movl	%eax,0x10(%rbx)
00000000000045ec	movq	0x00000088(%r13),%rdi
00000000000045f3	movq	(%rdi),%rax
00000000000045f6	leaq	0x0000ca4f(%rip),%rsi
00000000000045fd	call	*0x000002b8(%rax)
0000000000004603	movq	%rax,%rdi
0000000000004606	movq	%r12,%rsi
0000000000004609	callq	0x0000460e
000000000000460e	movq	%rax,%rdx
0000000000004611	testq	%rax,%rax
0000000000004614	je	0x0000462c
0000000000004616	movq	(%rax),%rax
0000000000004619	movq	%rdx,%rdi
000000000000461c	call	*0x00000178(%rax)
0000000000004622	movl	(%rax),%eax
0000000000004624	leal	(%rax,%rax,4),%eax
0000000000004627	addl	%eax,%eax
0000000000004629	movl	%eax,0x14(%rbx)
000000000000462c	movq	0x00000088(%r13),%rdi
0000000000004633	movq	(%rdi),%rax
0000000000004636	leaq	0x0000ca19(%rip),%rsi
000000000000463d	call	*0x000002b8(%rax)
0000000000004643	movq	%rax,%rdi
0000000000004646	movq	%r12,%rsi
0000000000004649	callq	0x0000464e
000000000000464e	movq	%rax,%rdx
0000000000004651	testq	%rax,%rax
0000000000004654	je	0x0000466c
0000000000004656	movq	(%rax),%rax
0000000000004659	movq	%rdx,%rdi
000000000000465c	call	*0x00000178(%rax)
0000000000004662	movl	(%rax),%eax
0000000000004664	leal	(%rax,%rax,4),%eax
0000000000004667	addl	%eax,%eax
0000000000004669	movl	%eax,0x18(%rbx)
000000000000466c	movq	0x00000088(%r13),%rdi
0000000000004673	movq	(%rdi),%rax
0000000000004676	leaq	0x0000c9e3(%rip),%rsi
000000000000467d	call	*0x000002b8(%rax)
0000000000004683	movq	%rax,%rdi
0000000000004686	movq	%r12,%rsi
0000000000004689	callq	0x0000468e
000000000000468e	movq	%rax,%rdx
0000000000004691	testq	%rax,%rax
0000000000004694	je	0x000046b4
0000000000004696	movq	(%rax),%rax
0000000000004699	movq	%rdx,%rdi
000000000000469c	call	*0x00000178(%rax)
00000000000046a2	movl	(%rax),%edx
00000000000046a4	addl	$0x63,%edx
00000000000046a7	movl	$0x51eb851f,%eax
00000000000046ac	mull	%edx
00000000000046ae	shrl	$0x05,%edx
00000000000046b1	movl	%edx,0x1c(%rbx)
00000000000046b4	xorl	%eax,%eax
00000000000046b6	addq	$0x08,%rsp
00000000000046ba	popq	%rbx
00000000000046bb	popq	%r12
00000000000046bd	popq	%r13
00000000000046bf	leave
00000000000046c0	ret
00000000000046c1	nop
__ZN22AppleIntelHDGraphicsFB21hwSetPanelPowerConfigEj:
00000000000046c2	pushq	%rbp
00000000000046c3	movq	%rsp,%rbp
00000000000046c6	pushq	%rbx
00000000000046c7	subq	$0x08,%rsp
00000000000046cb	movq	%rdi,%rbx
00000000000046ce	movl	%esi,0x00000158(%rdi)
00000000000046d4	testl	%esi,%esi
00000000000046d6	je	0x00004799
00000000000046dc	leaq	0x000005dc(%rdi),%rdx
00000000000046e3	xorl	%esi,%esi
00000000000046e5	callq	0x10000441c
00000000000046ea	testl	%eax,%eax
00000000000046ec	jne	0x00004779
00000000000046f2	movl	$0x00186900,0x0000039c(%rbx)
00000000000046fc	movl	0x000005f8(%rbx),%eax
0000000000004702	cmpl	$0x1e,%eax
0000000000004705	ja	0x00004719
0000000000004707	incl	%eax
0000000000004709	andl	$0x1f,%eax
000000000000470c	orl	$0x00186900,%eax
0000000000004711	movl	%eax,0x0000039c(%rbx)
0000000000004717	jmp	0x00004723
0000000000004719	movl	$0x0018691f,0x0000039c(%rbx)
0000000000004723	movl	0x000005e4(%rbx),%eax
0000000000004729	addl	0x000005e0(%rbx),%eax
000000000000472f	addl	$0x64,%eax
0000000000004732	andl	$0x00001fff,%eax
0000000000004737	shll	$0x10,%eax
000000000000473a	movl	0x000005e8(%rbx),%edx
0000000000004740	andl	$0x00001fff,%edx
0000000000004746	orl	%edx,%eax
0000000000004748	movl	%eax,0x00000394(%rbx)
000000000000474e	movl	0x000005f4(%rbx),%eax
0000000000004754	addl	0x000005f0(%rbx),%eax
000000000000475a	addl	$0x64,%eax
000000000000475d	andl	$0x00001fff,%eax
0000000000004762	shll	$0x10,%eax
0000000000004765	movl	0x000005ec(%rbx),%edx
000000000000476b	andl	$0x00001fff,%edx
0000000000004771	orl	%edx,%eax
0000000000004773	movl	%eax,0x00000398(%rbx)
0000000000004779	movl	0x00000394(%rbx),%eax
000000000000477f	movl	%eax,0x000003ac(%rbx)
0000000000004785	movl	0x00000398(%rbx),%eax
000000000000478b	movl	%eax,0x000003b0(%rbx)
0000000000004791	movl	0x0000039c(%rbx),%eax
0000000000004797	jmp	0x000047b7
0000000000004799	movl	0x000003a0(%rdi),%eax
000000000000479f	movl	%eax,0x000003ac(%rdi)
00000000000047a5	movl	0x000003a4(%rdi),%eax
00000000000047ab	movl	%eax,0x000003b0(%rdi)
00000000000047b1	movl	0x000003a8(%rdi),%eax
00000000000047b7	movl	%eax,0x000003b4(%rbx)
00000000000047bd	movl	0x000003ac(%rbx),%edx
00000000000047c3	movq	0x00000098(%rbx),%rax
00000000000047ca	addq	$0x000c7208,%eax
00000000000047d0	movl	%edx,(%rax)
00000000000047d2	movl	0x000003b0(%rbx),%edx
00000000000047d8	movq	0x00000098(%rbx),%rax
00000000000047df	addq	$0x000c720c,%eax
00000000000047e5	movl	%edx,(%rax)
00000000000047e7	movl	0x000003b4(%rbx),%edx
00000000000047ed	movq	0x00000098(%rbx),%rax
00000000000047f4	addq	$0x000c7210,%eax
00000000000047fa	movl	%edx,(%rax)
00000000000047fc	addq	$0x08,%rsp
0000000000004800	popq	%rbx
0000000000004801	leave
0000000000004802	ret
0000000000004803	nop
__ZN22AppleIntelHDGraphicsFB9hwGetCRTCEiP9IOService:
0000000000004804	pushq	%rbp
0000000000004805	movq	%rsp,%rbp
0000000000004808	subq	$0x20,%rsp
000000000000480c	movq	%rbx,(%rsp)
0000000000004810	movq	%r12,0x08(%rsp)
0000000000004815	movq	%r13,0x10(%rsp)
000000000000481a	movq	%r14,0x18(%rsp)
000000000000481f	movq	%rdi,%r12
0000000000004822	movl	%esi,%ebx
0000000000004824	movq	%rdx,%r13
0000000000004827	callq	0x100001c3a
000000000000482c	movl	0x00000600(%r12),%r11d
0000000000004834	testl	%r11d,%r11d
0000000000004837	je	0x0000497e
000000000000483d	movzbl	0x00000190(%rsp),%eax
0000000000004846	cmpl	%eax,%ebx
0000000000004848	jne	0x0000497e
000000000000484e	cmpb	$0x00,0x00000180(%r12)
0000000000004857	je	0x0000497e
000000000000485d	movzwl	0x000003ee(%rsp),%eax
0000000000004866	movl	%eax,0x00000608(%r12)
000000000000486e	movl	0x000003ec(%r12),%eax
0000000000004876	andl	$0x0000fffe,%eax
000000000000487b	movl	%eax,0x00000604(%r12)
0000000000004883	movq	0x00010556(%rip),%rax
000000000000488a	movq	(%rax),%r14
000000000000488d	movq	0x00(%r13),%rax
0000000000004891	leaq	0x0000c7d2(%rip),%rsi
0000000000004898	movq	%r13,%rdi
000000000000489b	call	*0x000002b8(%rax)
00000000000048a1	movq	%rax,%rdi
00000000000048a4	movq	%r14,%rsi
00000000000048a7	callq	0x000048ac
00000000000048ac	movq	%rax,%rdx
00000000000048af	movl	$0x00005208,%ecx
00000000000048b4	testq	%rax,%rax
00000000000048b7	je	0x000048c7
00000000000048b9	movq	(%rax),%rax
00000000000048bc	movq	%rdx,%rdi
00000000000048bf	call	*0x00000178(%rax)
00000000000048c5	movl	(%rax),%ecx
00000000000048c7	movl	$0x009e822a,%eax
00000000000048cc	xorl	%edx,%edx
00000000000048ce	divl	%ecx
00000000000048d0	movl	%eax,%ebx
00000000000048d2	movl	0x00000608(%r12),%edx
00000000000048da	cmpl	%eax,%edx
00000000000048dc	je	0x0000495d
00000000000048de	leaq	0x0000c7a3(%rip),%rdi
00000000000048e5	xorl	%eax,%eax
00000000000048e7	callq	0x000048ec
00000000000048ec	movq	0x00(%r13),%rax
00000000000048f0	leaq	0x0000c7bd(%rip),%rsi
00000000000048f7	movq	%r13,%rdi
00000000000048fa	call	*0x000002b8(%rax)
0000000000004900	movq	%rax,%rdi
0000000000004903	movq	%r14,%rsi
0000000000004906	callq	0x0000490b
000000000000490b	movq	%rax,%rdx
000000000000490e	testq	%rax,%rax
0000000000004911	je	0x00004938
0000000000004913	movq	(%rax),%rax
0000000000004916	movq	%rdx,%rdi
0000000000004919	call	*0x00000178(%rax)
000000000000491f	movl	(%rax),%ecx
0000000000004921	cmpl	$0x64,%ecx
0000000000004924	jbe	0x00004936
0000000000004926	leaq	0x0000c7a3(%rip),%rdi
000000000000492d	xorl	%eax,%eax
000000000000492f	callq	0x00004934
0000000000004934	jmp	0x00004938
0000000000004936	jne	0x0000493c
0000000000004938	movl	%ebx,%esi
000000000000493a	jmp	0x0000494b
000000000000493c	imull	%ebx,%ecx
000000000000493f	movl	$0x51eb851f,%eax
0000000000004944	mull	%ecx
0000000000004946	movl	%edx,%esi
0000000000004948	shrl	$0x05,%esi
000000000000494b	movl	%ebx,0x00000608(%r12)
0000000000004953	movq	%r12,%rdi
0000000000004956	callq	0x10000371a
000000000000495b	jmp	0x0000497e
000000000000495d	movl	0x00000604(%r12),%ecx
0000000000004965	leal	0xff(%rdx),%eax
0000000000004968	cmpl	%eax,%ecx
000000000000496a	je	0x00004970
000000000000496c	cmpl	%ecx,%edx
000000000000496e	jae	0x0000497e
0000000000004970	leaq	0x0000c789(%rip),%rdi
0000000000004977	xorl	%eax,%eax
0000000000004979	callq	0x0000497e
000000000000497e	xorl	%eax,%eax
0000000000004980	movq	(%rsp),%rbx
0000000000004984	movq	0x08(%rsp),%r12
0000000000004989	movq	0x10(%rsp),%r13
000000000000498e	movq	0x18(%rsp),%r14
0000000000004993	leave
0000000000004994	ret
0000000000004995	nop
__ZN22AppleIntelHDGraphicsFB13getFBCControlEv:
0000000000004996	pushq	%rbp
0000000000004997	movq	%rsp,%rbp
000000000000499a	pushq	%r12
000000000000499c	pushq	%rbx
000000000000499d	movq	%rdi,%r12
00000000000049a0	movq	0x00010441(%rip),%rax
00000000000049a7	movq	(%rax),%rbx
00000000000049aa	movq	(%rdi),%rax
00000000000049ad	leaq	0x0000c7f9(%rip),%rsi
00000000000049b4	call	*0x000002b8(%rax)
00000000000049ba	movq	%rax,%rdi
00000000000049bd	movq	%rbx,%rsi
00000000000049c0	callq	0x000049c5
00000000000049c5	movq	%rax,%rdx
00000000000049c8	movl	$0x00000004,0x000006fc(%r12)
00000000000049d4	movb	$0x00,0x00000700(%r12)
00000000000049dd	movl	$0x00000000,0x00000704(%r12)
00000000000049e9	movl	$0x00000000,0x00000708(%r12)
00000000000049f5	testq	%rax,%rax
00000000000049f8	je	0x00004a3e
00000000000049fa	movq	0x000103ef(%rip),%rax
0000000000004a01	movq	(%rax),%rbx
0000000000004a04	movq	(%rdx),%rax
0000000000004a07	leaq	0x0000c7aa(%rip),%rsi
0000000000004a0e	movq	%rdx,%rdi
0000000000004a11	call	*0x00000208(%rax)
0000000000004a17	movq	%rax,%rdi
0000000000004a1a	movq	%rbx,%rsi
0000000000004a1d	callq	0x00004a22
0000000000004a22	movq	%rax,%rdx
0000000000004a25	testq	%rax,%rax
0000000000004a28	je	0x00004a3e
0000000000004a2a	movq	(%rax),%rax
0000000000004a2d	movq	%rdx,%rdi
0000000000004a30	call	*0x00000148(%rax)
0000000000004a36	movl	%eax,0x000006fc(%r12)
0000000000004a3e	popq	%rbx
0000000000004a3f	popq	%r12
0000000000004a41	leave
0000000000004a42	ret
0000000000004a43	nop
__ZN22AppleIntelHDGraphicsFB17getFeatureControlEv:
0000000000004a44	pushq	%rbp
0000000000004a45	movq	%rsp,%rbp
0000000000004a48	pushq	%r15
0000000000004a4a	pushq	%r14
0000000000004a4c	pushq	%r13
0000000000004a4e	pushq	%r12
0000000000004a50	pushq	%rbx
0000000000004a51	subq	$0x08,%rsp
0000000000004a55	movq	%rdi,%r13
0000000000004a58	movzbl	0x00000134(%rdi),%r15d
0000000000004a60	movq	0x00010381(%rip),%rax
0000000000004a67	movq	(%rax),%rbx
0000000000004a6a	movq	(%rdi),%rax
0000000000004a6d	leaq	0x0000c750(%rip),%rsi
0000000000004a74	call	*0x000002b8(%rax)
0000000000004a7a	movq	%rax,%rdi
0000000000004a7d	movq	%rbx,%rsi
0000000000004a80	callq	0x00004a85
0000000000004a85	movq	%rax,%r12
0000000000004a88	testq	%rax,%rax
0000000000004a8b	je	0x00004cde
0000000000004a91	movq	0x00010358(%rip),%r14
0000000000004a98	movq	(%r14),%rbx
0000000000004a9b	movq	(%rax),%rax
0000000000004a9e	leaq	0x0000c72e(%rip),%rsi
0000000000004aa5	movq	%r12,%rdi
0000000000004aa8	call	*0x00000208(%rax)
0000000000004aae	movq	%rax,%rdi
0000000000004ab1	movq	%rbx,%rsi
0000000000004ab4	callq	0x00004ab9
0000000000004ab9	movq	%rax,%rdx
0000000000004abc	testq	%rax,%rax
0000000000004abf	je	0x00004d7b
0000000000004ac5	movq	(%rax),%rax
0000000000004ac8	movq	%rdx,%rdi
0000000000004acb	call	*0x00000148(%rax)
0000000000004ad1	testl	%eax,%eax
0000000000004ad3	setne	0x000006f0(%r13)
0000000000004adb	movq	(%r14),%rbx
0000000000004ade	movq	(%r12),%rax
0000000000004ae2	leaq	0x0000c6ee(%rip),%rsi
0000000000004ae9	movq	%r12,%rdi
0000000000004aec	call	*0x00000208(%rax)
0000000000004af2	movq	%rax,%rdi
0000000000004af5	movq	%rbx,%rsi
0000000000004af8	callq	0x00004afd
0000000000004afd	movq	%rax,%rdx
0000000000004b00	testq	%rax,%rax
0000000000004b03	je	0x00004d12
0000000000004b09	movq	(%rax),%rax
0000000000004b0c	movq	%rdx,%rdi
0000000000004b0f	call	*0x00000148(%rax)
0000000000004b15	testl	%eax,%eax
0000000000004b17	setne	0x00000720(%r13)
0000000000004b1f	movq	(%r14),%rbx
0000000000004b22	movq	(%r12),%rax
0000000000004b26	leaq	0x0000c6b5(%rip),%rsi
0000000000004b2d	movq	%r12,%rdi
0000000000004b30	call	*0x00000208(%rax)
0000000000004b36	movq	%rax,%rdi
0000000000004b39	movq	%rbx,%rsi
0000000000004b3c	callq	0x00004b41
0000000000004b41	movq	%rax,%rdx
0000000000004b44	testq	%rax,%rax
0000000000004b47	je	0x00004daa
0000000000004b4d	movq	(%rax),%rax
0000000000004b50	movq	%rdx,%rdi
0000000000004b53	call	*0x00000148(%rax)
0000000000004b59	movl	%eax,0x00000724(%r13)
0000000000004b60	movq	(%r14),%rbx
0000000000004b63	movq	(%r12),%rax
0000000000004b67	leaq	0x0000c68c(%rip),%rsi
0000000000004b6e	movq	%r12,%rdi
0000000000004b71	call	*0x00000208(%rax)
0000000000004b77	movq	%rax,%rdi
0000000000004b7a	movq	%rbx,%rsi
0000000000004b7d	callq	0x00004b82
0000000000004b82	movq	%rax,%rdx
0000000000004b85	testq	%rax,%rax
0000000000004b88	je	0x00004d23
0000000000004b8e	movq	(%rax),%rax
0000000000004b91	movq	%rdx,%rdi
0000000000004b94	call	*0x00000148(%rax)
0000000000004b9a	testl	%eax,%eax
0000000000004b9c	setne	0x000004c0(%r13)
0000000000004ba4	movq	(%r14),%rbx
0000000000004ba7	movq	(%r12),%rax
0000000000004bab	leaq	0x0000c64e(%rip),%rsi
0000000000004bb2	movq	%r12,%rdi
0000000000004bb5	call	*0x00000208(%rax)
0000000000004bbb	movq	%rax,%rdi
0000000000004bbe	movq	%rbx,%rsi
0000000000004bc1	callq	0x00004bc6
0000000000004bc6	movq	%rax,%rdx
0000000000004bc9	testq	%rax,%rax
0000000000004bcc	je	0x00004d36
0000000000004bd2	movq	(%rax),%rax
0000000000004bd5	movq	%rdx,%rdi
0000000000004bd8	call	*0x00000148(%rax)
0000000000004bde	testl	%eax,%eax
0000000000004be0	setne	0x00000728(%r13)
0000000000004be8	movq	(%r14),%rbx
0000000000004beb	movq	(%r12),%rax
0000000000004bef	leaq	0x0000c616(%rip),%rsi
0000000000004bf6	movq	%r12,%rdi
0000000000004bf9	call	*0x00000208(%rax)
0000000000004bff	movq	%rax,%rdi
0000000000004c02	movq	%rbx,%rsi
0000000000004c05	callq	0x00004c0a
0000000000004c0a	movq	%rax,%rdx
0000000000004c0d	testq	%rax,%rax
0000000000004c10	je	0x00004d4d
0000000000004c16	movq	(%rax),%rax
0000000000004c19	movq	%rdx,%rdi
0000000000004c1c	call	*0x00000148(%rax)
0000000000004c22	xorl	%edx,%edx
0000000000004c24	testl	%eax,%eax
0000000000004c26	je	0x00004c38
0000000000004c28	cmpl	$0x08,%r15d
0000000000004c2c	sete	%dl
0000000000004c2f	cmpl	$0x11,%r15d
0000000000004c33	seta	%al
0000000000004c36	orl	%eax,%edx
0000000000004c38	movb	%dl,0x00000729(%r13)
0000000000004c3f	movb	$0x00,0x0000072a(%r13)
0000000000004c47	movq	(%r14),%rbx
0000000000004c4a	movq	(%r12),%rax
0000000000004c4e	leaq	0x0000c5c5(%rip),%rsi
0000000000004c55	movq	%r12,%rdi
0000000000004c58	call	*0x00000208(%rax)
0000000000004c5e	movq	%rax,%rdi
0000000000004c61	movq	%rbx,%rsi
0000000000004c64	callq	0x00004c69
0000000000004c69	movq	%rax,%rdx
0000000000004c6c	testq	%rax,%rax
0000000000004c6f	je	0x00004d60
0000000000004c75	movq	(%rax),%rax
0000000000004c78	movq	%rdx,%rdi
0000000000004c7b	call	*0x00000148(%rax)
0000000000004c81	testl	%eax,%eax
0000000000004c83	setne	0x00000668(%r13)
0000000000004c8b	movq	(%r14),%rbx
0000000000004c8e	movq	(%r12),%rax
0000000000004c92	leaq	0x0000c596(%rip),%rsi
0000000000004c99	movq	%r12,%rdi
0000000000004c9c	call	*0x00000208(%rax)
0000000000004ca2	movq	%rax,%rdi
0000000000004ca5	movq	%rbx,%rsi
0000000000004ca8	callq	0x00004cad
0000000000004cad	movq	%rax,%rdx
0000000000004cb0	testq	%rax,%rax
0000000000004cb3	je	0x00004d71
0000000000004cb9	movq	(%rax),%rax
0000000000004cbc	movq	%rdx,%rdi
0000000000004cbf	call	*0x00000148(%rax)
0000000000004cc5	xorl	%edx,%edx
0000000000004cc7	testl	%eax,%eax
0000000000004cc9	je	0x00004cd2
0000000000004ccb	cmpl	$0x18,%r15d
0000000000004ccf	setne	%dl
0000000000004cd2	movb	%dl,0x0000072c(%r13)
0000000000004cd9	jmp	0x00004dba
0000000000004cde	cmpl	$0x0f,%r15d
0000000000004ce2	seta	%al
0000000000004ce5	movb	%al,0x000006f0(%r13)
0000000000004cec	movb	%al,0x00000720(%r13)
0000000000004cf3	movl	$0x00000000,0x00000724(%r13)
0000000000004cfe	movb	$0x00,0x000004c0(%r13)
0000000000004d06	movb	%al,0x00000728(%r13)
0000000000004d0d	jmp	0x00004d98
0000000000004d12	cmpl	$0x0f,%r15d
0000000000004d16	seta	0x00000720(%r13)
0000000000004d1e	jmp	0x100004b1f
0000000000004d23	movb	$0x00,0x000004c0(%r13)
0000000000004d2b	testq	%r12,%r12
0000000000004d2e	jne	0x100004ba4
0000000000004d34	jmp	0x00004d8c
0000000000004d36	cmpl	$0x0f,%r15d
0000000000004d3a	seta	0x00000728(%r13)
0000000000004d42	testq	%r12,%r12
0000000000004d45	jne	0x100004be8
0000000000004d4b	jmp	0x00004d98
0000000000004d4d	movb	$0x00,0x0000072a(%r13)
0000000000004d55	testq	%r12,%r12
0000000000004d58	jne	0x100004c47
0000000000004d5e	jmp	0x00004da0
0000000000004d60	movb	$0x00,0x00000668(%r13)
0000000000004d68	testq	%r12,%r12
0000000000004d6b	jne	0x100004c8b
0000000000004d71	movb	$0x00,0x0000072c(%r13)
0000000000004d79	jmp	0x00004dba
0000000000004d7b	cmpl	$0x0f,%r15d
0000000000004d7f	seta	0x000006f0(%r13)
0000000000004d87	jmp	0x100004adb
0000000000004d8c	cmpl	$0x0f,%r15d
0000000000004d90	seta	0x00000728(%r13)
0000000000004d98	movb	$0x00,0x0000072a(%r13)
0000000000004da0	movb	$0x00,0x00000668(%r13)
0000000000004da8	jmp	0x00004d71
0000000000004daa	movl	$0x00000000,0x00000724(%r13)
0000000000004db5	jmp	0x100004b60
0000000000004dba	addq	$0x08,%rsp
0000000000004dbe	popq	%rbx
0000000000004dbf	popq	%r12
0000000000004dc1	popq	%r13
0000000000004dc3	popq	%r14
0000000000004dc5	popq	%r15
0000000000004dc7	leave
0000000000004dc8	ret
0000000000004dc9	nop
__ZN22AppleIntelHDGraphicsFB5probeEP9IOServicePi:
0000000000004dca	pushq	%rbp
0000000000004dcb	movq	%rsp,%rbp
0000000000004dce	subq	$0x10,%rsp
0000000000004dd2	movq	%rbx,(%rsp)
0000000000004dd6	movq	%r12,0x08(%rsp)
0000000000004ddb	movq	%rsi,%r12
0000000000004dde	movq	%rdi,%rbx
0000000000004de1	movq	0x0000fff0(%rip),%rax
0000000000004de8	call	*0x000005c8(%rax)
0000000000004dee	testq	%rax,%rax
0000000000004df1	je	0x00004e0a
0000000000004df3	movq	0x0000fffe(%rip),%rax
0000000000004dfa	movq	(%rax),%rsi
0000000000004dfd	movq	%r12,%rdi
0000000000004e00	callq	0x00004e05
0000000000004e05	testq	%rax,%rax
0000000000004e08	jne	0x00004e0c
0000000000004e0a	xorl	%ebx,%ebx
0000000000004e0c	movq	%rbx,%rax
0000000000004e0f	movq	(%rsp),%rbx
0000000000004e13	movq	0x08(%rsp),%r12
0000000000004e18	leave
0000000000004e19	ret
__ZN21AppleIntelFramebuffer19validateDisplayModeEiPPKNS_15ModeDescriptionEPPK29IODetailedTimingInformationV2:
0000000000004e1a	pushq	%rbp
0000000000004e1b	movq	%rsp,%rbp
0000000000004e1e	subq	$0x30,%rsp
0000000000004e22	movq	%rbx,0xd8(%rbp)
0000000000004e26	movq	%r12,0xe0(%rbp)
0000000000004e2a	movq	%r13,0xe8(%rbp)
0000000000004e2e	movq	%r14,0xf0(%rbp)
0000000000004e32	movq	%r15,0xf8(%rbp)
0000000000004e36	movq	%rdi,%r13
0000000000004e39	movl	%esi,%r12d
0000000000004e3c	movq	%rdx,%rbx
0000000000004e3f	movq	%rcx,%r14
0000000000004e42	movq	0x0000ff87(%rip),%rax
0000000000004e49	movl	(%rax),%eax
0000000000004e4b	testl	%eax,%eax
0000000000004e4d	je	0x00004e6a
0000000000004e4f	movslq	%esi,%rdx
0000000000004e52	movl	0x000001d8(%rdi),%esi
0000000000004e58	xorl	%r9d,%r9d
0000000000004e5b	xorl	%r8d,%r8d
0000000000004e5e	xorl	%ecx,%ecx
0000000000004e60	movl	$0x061284ad,%edi
0000000000004e65	callq	0x00004e6a
0000000000004e6a	cmpl	$0xfb,%r12d
0000000000004e6e	jne	0x00004f12
0000000000004e74	movl	0x0000046c(%r13),%esi
0000000000004e7b	testl	$0xffff0000,%esi
0000000000004e81	jne	0x00004e8f
0000000000004e83	testl	%esi,%esi
0000000000004e85	je	0x00004e8f
0000000000004e87	movl	%esi,%r12d
0000000000004e8a	jmp	0x00004f12
0000000000004e8f	testq	%r14,%r14
0000000000004e92	je	0x00004f12
0000000000004e94	cmpq	$0x00,0x00000488(%r13)
0000000000004e9c	je	0x00004f12
0000000000004e9e	testq	%rbx,%rbx
0000000000004ea1	je	0x00004ead
0000000000004ea3	leaq	0x0000da36(%rip),%rax
0000000000004eaa	movq	%rax,(%rbx)
0000000000004ead	movq	0x00000488(%r13),%rdi
0000000000004eb4	movq	(%rdi),%rax
0000000000004eb7	call	*0x00000178(%rax)
0000000000004ebd	movq	%rax,%rdx
0000000000004ec0	movq	%rax,(%r14)
0000000000004ec3	cmpq	$0x00,0x18(%rax)
0000000000004ec8	jne	0x00004ef0
0000000000004eca	movl	0x0c(%rax),%eax
0000000000004ecd	testl	%eax,%eax
0000000000004ecf	jne	0x00004ef0
0000000000004ed1	movl	0x10(%rdx),%eax
0000000000004ed4	testl	%eax,%eax
0000000000004ed6	jne	0x00004ef0
0000000000004ed8	movl	0x40(%rdx),%eax
0000000000004edb	cmpl	0x00000478(%r13),%eax
0000000000004ee2	jne	0x00004ef0
0000000000004ee4	movl	0x50(%rdx),%eax
0000000000004ee7	cmpl	0x0000047c(%r13),%eax
0000000000004eee	je	0x00004f1a
0000000000004ef0	movl	0x18(%rdx),%eax
0000000000004ef3	testl	%eax,%eax
0000000000004ef5	je	0x00004f0a
0000000000004ef7	movl	0x1c(%rdx),%r15d
0000000000004efb	testl	%r15d,%r15d
0000000000004efe	je	0x00004f0a
0000000000004f00	cmpl	$0x03,0x00000210(%r13)
0000000000004f08	je	0x00004f1a
0000000000004f0a	movb	$0x00,0x00000470(%r13)
0000000000004f12	movl	$0xe00002c2,%r15d
0000000000004f18	jmp	0x00004f1d
0000000000004f1a	xorl	%r15d,%r15d
0000000000004f1d	cmpq	$0x00,0x000001f8(%r13)
0000000000004f25	je	0x00004f94
0000000000004f27	testl	$0xffff0000,%r12d
0000000000004f2e	je	0x00004f94
0000000000004f30	testq	%rbx,%rbx
0000000000004f33	je	0x00004f3f
0000000000004f35	leaq	0x0000d9a4(%rip),%rax
0000000000004f3c	movq	%rax,(%rbx)
0000000000004f3f	movq	0x0000fe9a(%rip),%rax
0000000000004f46	movq	(%rax),%rbx
0000000000004f49	movq	0x000001f8(%r13),%rdi
0000000000004f50	movq	(%rdi),%rax
0000000000004f53	andl	$0x000003ff,%r12d
0000000000004f5a	movl	%r12d,%esi
0000000000004f5d	call	*0x000001e8(%rax)
0000000000004f63	movq	%rax,%rdi
0000000000004f66	movq	%rbx,%rsi
0000000000004f69	callq	0x00004f6e
0000000000004f6e	movq	%rax,%rdx
0000000000004f71	testq	%rax,%rax
0000000000004f74	je	0x00005030
0000000000004f7a	testq	%r14,%r14
0000000000004f7d	je	0x0000502d
0000000000004f83	movq	(%rax),%rax
0000000000004f86	movq	%rdx,%rdi
0000000000004f89	call	*0x00000178(%rax)
0000000000004f8f	jmp	0x0000501d
0000000000004f94	cmpb	$0x00,0x0000020d(%r13)
0000000000004f9c	je	0x00005022
0000000000004fa2	cmpl	$0x40,0x00000210(%r13)
0000000000004faa	je	0x00005030
0000000000004fb0	xorl	%edx,%edx
0000000000004fb2	leaq	0x0000d847(%rip),%rsi
0000000000004fb9	movq	%rsi,%rdi
0000000000004fbc	movl	%edx,%ecx
0000000000004fbe	movq	%rdx,%rax
0000000000004fc1	shlq	$0x04,%rax
0000000000004fc5	cmpl	%r12d,(%rax,%rsi)
0000000000004fc9	jne	0x00004ff7
0000000000004fcb	testq	%rbx,%rbx
0000000000004fce	je	0x00004fdc
0000000000004fd0	movl	%edx,%eax
0000000000004fd2	shlq	$0x04,%rax
0000000000004fd6	addq	%rdi,%rax
0000000000004fd9	movq	%rax,(%rbx)
0000000000004fdc	testq	%r14,%r14
0000000000004fdf	je	0x0000502d
0000000000004fe1	movl	%ecx,%eax
0000000000004fe3	leaq	(%rax,%rax,4),%rax
0000000000004fe7	shlq	$0x05,%rax
0000000000004feb	leaq	0x0000d90e(%rip),%rdx
0000000000004ff2	addq	%rdx,%rax
0000000000004ff5	jmp	0x0000501d
0000000000004ff7	incq	%rdx
0000000000004ffa	cmpq	$0x0a,%rdx
0000000000004ffe	jne	0x00004fbc
0000000000005000	jmp	0x00005030
0000000000005002	testq	%rbx,%rbx
0000000000005005	je	0x00005011
0000000000005007	leaq	0x0000d892(%rip),%rax
000000000000500e	movq	%rax,(%rbx)
0000000000005011	testq	%r14,%r14
0000000000005014	je	0x0000502d
0000000000005016	leaq	0x0000df23(%rip),%rax
000000000000501d	movq	%rax,(%r14)
0000000000005020	jmp	0x0000502d
0000000000005022	cmpl	$0x00000100,%r12d
0000000000005029	jne	0x00005030
000000000000502b	jmp	0x00005002
000000000000502d	xorl	%r15d,%r15d
0000000000005030	movq	0x0000fd99(%rip),%rax
0000000000005037	movl	(%rax),%ebx
0000000000005039	testl	%ebx,%ebx
000000000000503b	je	0x00005054
000000000000503d	movslq	%r15d,%rsi
0000000000005040	xorl	%r9d,%r9d
0000000000005043	xorl	%r8d,%r8d
0000000000005046	xorl	%ecx,%ecx
0000000000005048	xorl	%edx,%edx
000000000000504a	movl	$0x061284ae,%edi
000000000000504f	callq	0x00005054
0000000000005054	movl	%r15d,%eax
0000000000005057	movq	0xd8(%rbp),%rbx
000000000000505b	movq	0xe0(%rbp),%r12
000000000000505f	movq	0xe8(%rbp),%r13
0000000000005063	movq	0xf0(%rbp),%r14
0000000000005067	movq	0xf8(%rbp),%r15
000000000000506b	leave
000000000000506c	ret
000000000000506d	nop
__ZN22AppleIntelHDGraphicsFB16hwSetCursorStateEjiib:
000000000000506e	pushq	%rbp
000000000000506f	movq	%rsp,%rbp
0000000000005072	subq	$0x50,%rsp
0000000000005076	movq	%rbx,0xd8(%rbp)
000000000000507a	movq	%r12,0xe0(%rbp)
000000000000507e	movq	%r13,0xe8(%rbp)
0000000000005082	movq	%r14,0xf0(%rbp)
0000000000005086	movq	%r15,0xf8(%rbp)
000000000000508a	movq	%rdi,%rbx
000000000000508d	movl	%esi,%r12d
0000000000005090	movl	%edx,%r14d
0000000000005093	movl	%ecx,%r13d
0000000000005096	movl	%r8d,%r15d
0000000000005099	movl	0x00000194(%rdi),%eax
000000000000509f	movq	$0x00000000,0xc8(%rbp)
00000000000050a7	cmpl	%eax,%esi
00000000000050a9	jae	0x000050bb
00000000000050ab	subl	%esi,%eax
00000000000050ad	decl	%eax
00000000000050af	movq	0x00000198(%rdi,%rax,8),%rax
00000000000050b7	movq	%rax,0xc8(%rbp)
00000000000050bb	movl	%r12d,%r10d
00000000000050be	movq	0x0000fd0b(%rip),%rax
00000000000050c5	movl	(%rax),%eax
00000000000050c7	testl	%eax,%eax
00000000000050c9	je	0x000050ed
00000000000050cb	movslq	%r13d,%rcx
00000000000050ce	movslq	%r14d,%rdx
00000000000050d1	xorl	%r9d,%r9d
00000000000050d4	movzbl	%bh,%r8d
00000000000050d8	movq	%r10,%rsi
00000000000050db	movl	$0x06128489,%edi
00000000000050e0	movq	%r10,0xb8(%rbp)
00000000000050e4	callq	0x000050e9
00000000000050e9	movq	0xb8(%rbp),%r10
00000000000050ed	xorl	%ecx,%ecx
00000000000050ef	testl	%r14d,%r14d
00000000000050f2	jns	0x0000510a
00000000000050f4	negl	%r14d
00000000000050f7	movw	$0x8000,%cx
00000000000050fb	cmpl	$0x00000100,%r14d
0000000000005102	jle	0x0000510a
0000000000005104	xorl	%r14d,%r14d
0000000000005107	xorw	%cx,%cx
000000000000510a	testl	%r13d,%r13d
000000000000510d	jns	0x00005126
000000000000510f	negl	%r13d
0000000000005112	cmpl	$0x00000100,%r13d
0000000000005119	jle	0x00005120
000000000000511b	xorl	%r13d,%r13d
000000000000511e	jmp	0x00005126
0000000000005120	orl	$0x80000000,%ecx
0000000000005126	cmpl	$0x01,%r12d
000000000000512a	sbbq	%rdx,%rdx
000000000000512d	andq	$0xc0,%rdx
0000000000005131	movq	0x00000098(%rbx),%rax
0000000000005138	leaq	0x000700c8(%rdx,%rax),%rdx
0000000000005140	movl	%r14d,%eax
0000000000005143	andl	$0x00000fff,%eax
0000000000005148	orl	%eax,%ecx
000000000000514a	movl	%r13d,%eax
000000000000514d	andl	$0x00000fff,%eax
0000000000005152	shll	$0x10,%eax
0000000000005155	orl	%eax,%ecx
0000000000005157	movl	%ecx,(%rdx)
0000000000005159	imulq	$0x000000f0,%r10,%rax
0000000000005160	addq	%rbx,%rax
0000000000005163	leaq	0x00000240(%rax),%rdx
000000000000516a	cmpb	0x0c(%rdx),%r15b
000000000000516e	je	0x0000519d
0000000000005170	movb	%r15b,0x0c(%rdx)
0000000000005174	xorl	%ecx,%ecx
0000000000005176	testb	%r15b,%r15b
0000000000005179	je	0x00005181
000000000000517b	movl	0x000001fc(%rax),%ecx
0000000000005181	cmpl	$0x01,%r12d
0000000000005185	sbbq	%rdx,%rdx
0000000000005188	andq	$0xc0,%rdx
000000000000518c	movq	0x00000098(%rbx),%rax
0000000000005193	leaq	0x000700c0(%rax,%rdx),%rax
000000000000519b	movl	%ecx,(%rax)
000000000000519d	movq	0xc8(%rbp),%rax
00000000000051a1	movl	0x000004b0(%rax),%edx
00000000000051a7	imulq	$0x3c,%r10,%rax
00000000000051ab	addq	%rdx,%rax
00000000000051ae	movl	0x00000200(%rbx,%rax,4),%ecx
00000000000051b5	cmpl	$0x01,%r12d
00000000000051b9	sbbq	%rdx,%rdx
00000000000051bc	andq	$0xc0,%rdx
00000000000051c0	movq	0x00000098(%rbx),%rax
00000000000051c7	leaq	0x000700c4(%rax,%rdx),%rax
00000000000051cf	movl	%ecx,(%rax)
00000000000051d1	movq	0x0000fbf8(%rip),%rax
00000000000051d8	movl	(%rax),%eax
00000000000051da	testl	%eax,%eax
00000000000051dc	je	0x000051f7
00000000000051de	movslq	%r13d,%rcx
00000000000051e1	movslq	%r14d,%rdx
00000000000051e4	xorl	%r9d,%r9d
00000000000051e7	xorl	%r8d,%r8d
00000000000051ea	movq	%r10,%rsi
00000000000051ed	movl	$0x0612848a,%edi
00000000000051f2	callq	0x000051f7
00000000000051f7	xorl	%eax,%eax
00000000000051f9	movq	0xd8(%rbp),%rbx
00000000000051fd	movq	0xe0(%rbp),%r12
0000000000005201	movq	0xe8(%rbp),%r13
0000000000005205	movq	0xf0(%rbp),%r14
0000000000005209	movq	0xf8(%rbp),%r15
000000000000520d	leave
000000000000520e	ret
000000000000520f	nop
__ZN21AppleIntelFramebuffer14setCursorStateEiib:
0000000000005210	pushq	%rbp
0000000000005211	movq	%rsp,%rbp
0000000000005214	movl	%esi,%r10d
0000000000005217	movl	%edx,%r9d
000000000000521a	movl	%ecx,%edx
000000000000521c	movl	0x000001e4(%rdi),%ecx
0000000000005222	testl	%ecx,%ecx
0000000000005224	jne	0x00005248
0000000000005226	movq	0x000001d0(%rdi),%rax
000000000000522d	cmpb	$0x00,0x00000164(%rax)
0000000000005234	je	0x0000524f
0000000000005236	movl	0x000001d8(%rdi),%esi
000000000000523c	cmpl	0x00000168(%rax),%esi
0000000000005242	je	0x00005255
0000000000005244	xorl	%edx,%edx
0000000000005246	jmp	0x00005255
0000000000005248	movq	0x000001d0(%rdi),%rax
000000000000524f	movl	0x000001d8(%rdi),%esi
0000000000005255	movzbl	%dl,%r8d
0000000000005259	movl	%r9d,%ecx
000000000000525c	movl	%r10d,%edx
000000000000525f	movq	%rax,%rdi
0000000000005262	leave
0000000000005263	jmp	0x10000506e
__ZN22AppleIntelHDGraphicsFB18hwScaleCursorImageEjP20IOHardwareCursorInfoPVjPjS4_:
0000000000005268	pushq	%rbp
0000000000005269	movq	%rsp,%rbp
000000000000526c	pushq	%r15
000000000000526e	pushq	%r14
0000000000005270	pushq	%r13
0000000000005272	pushq	%r12
0000000000005274	pushq	%rbx
0000000000005275	subq	$0x000000a8,%rsp
000000000000527c	movq	%rdi,%rbx
000000000000527f	movl	%esi,0xffffff60(%rbp)
0000000000005285	movq	%rdx,0xffffff58(%rbp)
000000000000528c	movq	%rcx,0xffffff50(%rbp)
0000000000005293	movq	%r8,0xffffff48(%rbp)
000000000000529a	movq	%r9,0xffffff40(%rbp)
00000000000052a1	movl	0x00000194(%rdi),%eax
00000000000052a7	xorl	%r12d,%r12d
00000000000052aa	cmpl	%eax,%esi
00000000000052ac	jae	0x000052ba
00000000000052ae	subl	%esi,%eax
00000000000052b0	decl	%eax
00000000000052b2	movq	0x00000198(%rdi,%rax,8),%r12
00000000000052ba	movq	0xffffff58(%rbp),%rax
00000000000052c1	movq	0x18(%rax),%rax
00000000000052c5	movq	%rax,0x88(%rbp)
00000000000052c9	movq	0x0000fb00(%rip),%rdx
00000000000052d0	movl	(%rdx),%r9d
00000000000052d3	testl	%r9d,%r9d
00000000000052d6	je	0x000052f2
00000000000052d8	movl	0xffffff60(%rbp),%esi
00000000000052de	xorl	%r9d,%r9d
00000000000052e1	xorl	%r8d,%r8d
00000000000052e4	xorl	%ecx,%ecx
00000000000052e6	xorl	%edx,%edx
00000000000052e8	movl	$0x06128481,%edi
00000000000052ed	callq	0x000052f2
00000000000052f2	movl	0x000001dc(%r12),%esi
00000000000052fa	leaq	0xc0(%rbp),%rcx
00000000000052fe	leaq	0xc8(%rbp),%rdx
0000000000005302	movq	%r12,%rdi
0000000000005305	callq	0x100004e1a
000000000000530a	testl	%eax,%eax
000000000000530c	je	0x00005344
000000000000530e	xorl	%eax,%eax
0000000000005310	movq	0x0000fab9(%rip),%rcx
0000000000005317	movl	(%rcx),%r8d
000000000000531a	testl	%r8d,%r8d
000000000000531d	je	0x000058b9
0000000000005323	movl	0xffffff60(%rbp),%esi
0000000000005329	xorl	%r9d,%r9d
000000000000532c	xorl	%r8d,%r8d
000000000000532f	xorl	%ecx,%ecx
0000000000005331	xorl	%edx,%edx
0000000000005333	movl	$0x06128482,%edi
0000000000005338	callq	0x0000533d
000000000000533d	xorl	%eax,%eax
000000000000533f	jmp	0x000058b9
0000000000005344	cmpb	$0x00,0x00000164(%rbx)
000000000000534b	je	0x0000536e
000000000000534d	cmpb	$0x00,0x0000020d(%r12)
0000000000005356	je	0x0000536e
0000000000005358	movl	0x000004b4(%r12),%esi
0000000000005360	movl	0x000004b8(%r12),%eax
0000000000005368	movq	0xc0(%rbp),%rdx
000000000000536c	jmp	0x00005378
000000000000536e	movq	0xc0(%rbp),%rdx
0000000000005372	movl	0x18(%rdx),%esi
0000000000005375	movl	0x1c(%rdx),%eax
0000000000005378	movl	0x14(%rdx),%edi
000000000000537b	testb	$0x10,%bh
000000000000537f	je	0x0000539f
0000000000005381	movq	0xffffff58(%rbp),%rbx
0000000000005388	movl	0x04(%rbx),%r10d
000000000000538c	movl	%r10d,%r8d
000000000000538f	movl	0x08(%rbx),%ecx
0000000000005392	movl	%ecx,0xffffff3c(%rbp)
0000000000005398	movl	%ecx,%r9d
000000000000539b	movl	%eax,%ecx
000000000000539d	jmp	0x000053c4
000000000000539f	movq	0xffffff58(%rbp),%rbx
00000000000053a6	movl	0x08(%rbx),%ebx
00000000000053a9	movl	%ebx,0xffffff3c(%rbp)
00000000000053af	movl	%ebx,%r8d
00000000000053b2	movq	0xffffff58(%rbp),%rcx
00000000000053b9	movl	0x04(%rcx),%r10d
00000000000053bd	movl	%r10d,%r9d
00000000000053c0	movl	%esi,%ecx
00000000000053c2	movl	%eax,%esi
00000000000053c4	movl	0x40(%rdx),%eax
00000000000053c7	cvtsi2ss	%rax,%xmm2
00000000000053cc	movl	%ecx,%eax
00000000000053ce	cvtsi2ss	%rax,%xmm0
00000000000053d3	divss	%xmm0,%xmm2
00000000000053d7	movl	0x50(%rdx),%eax
00000000000053da	cvtsi2ss	%rax,%xmm1
00000000000053df	movl	%esi,%eax
00000000000053e1	cvtsi2ss	%rax,%xmm0
00000000000053e6	divss	%xmm0,%xmm1
00000000000053ea	testb	$0x01,%bh
00000000000053ee	jne	0x000053fd
00000000000053f0	ucomiss	%xmm2,%xmm1
00000000000053f3	jbe	0x000053fa
00000000000053f5	movaps	%xmm2,%xmm1
00000000000053f8	jmp	0x000053fd
00000000000053fa	movaps	%xmm1,%xmm2
00000000000053fd	movl	%r8d,%eax
0000000000005400	cvtsi2ss	%rax,%xmm0
0000000000005405	mulss	%xmm2,%xmm0
0000000000005409	cvttss2si	%xmm0,%rax
000000000000540e	movl	$0x00000100,0xb8(%rbp)
0000000000005415	cmpl	$0x00000100,%eax
000000000000541a	cmoval	0xb8(%rbp),%eax
000000000000541e	movl	%eax,0xb8(%rbp)
0000000000005421	movl	%r9d,%eax
0000000000005424	cvtsi2ss	%rax,%xmm0
0000000000005429	mulss	%xmm1,%xmm0
000000000000542d	cvttss2si	%xmm0,%rax
0000000000005432	movl	$0x00000100,0xbc(%rbp)
0000000000005439	cmpl	$0x00000100,%eax
000000000000543e	cmoval	0xbc(%rbp),%eax
0000000000005442	movl	%eax,0xbc(%rbp)
0000000000005445	movss	0x0000dbab(%rip),%xmm0
000000000000544d	movaps	%xmm0,%xmm3
0000000000005450	divss	%xmm2,%xmm3
0000000000005454	movss	%xmm3,0xffffff64(%rbp)
000000000000545c	divss	%xmm1,%xmm0
0000000000005460	movss	%xmm0,0xffffff70(%rbp)
0000000000005468	testb	$0xf0,%bh
000000000000546c	jne	0x00005496
000000000000546e	xorps	%xmm0,%xmm0
0000000000005471	movss	%xmm0,0xffffff68(%rbp)
0000000000005479	movss	%xmm0,0xffffff6c(%rbp)
0000000000005481	movss	%xmm0,0xffffff78(%rbp)
0000000000005489	movss	%xmm0,0xffffff74(%rbp)
0000000000005491	jmp	0x00005551
0000000000005496	testb	$0x10,%bh
000000000000549a	je	0x000054d1
000000000000549c	movss	0xffffff70(%rbp),%xmm1
00000000000054a4	movss	%xmm1,0xffffff68(%rbp)
00000000000054ac	movss	0xffffff64(%rbp),%xmm3
00000000000054b4	movss	%xmm3,0xffffff6c(%rbp)
00000000000054bc	xorps	%xmm0,%xmm0
00000000000054bf	movss	%xmm0,0xffffff70(%rbp)
00000000000054c7	movss	%xmm0,0xffffff64(%rbp)
00000000000054cf	jmp	0x000054e4
00000000000054d1	xorps	%xmm1,%xmm1
00000000000054d4	movss	%xmm1,0xffffff68(%rbp)
00000000000054dc	movss	%xmm1,0xffffff6c(%rbp)
00000000000054e4	movl	$0x00000000,0xffffff74(%rbp)
00000000000054ee	testb	$0x20,%bh
00000000000054f2	je	0x0000551d
00000000000054f4	xorl	$0x80000000,0xffffff64(%rbp)
00000000000054fe	xorl	$0x80000000,0xffffff68(%rbp)
0000000000005508	movl	0xffffff3c(%rbp),%eax
000000000000550e	decl	%eax
0000000000005510	cvtsi2ss	%rax,%xmm3
0000000000005515	movss	%xmm3,0xffffff74(%rbp)
000000000000551d	movl	$0x00000000,0xffffff78(%rbp)
0000000000005527	andl	$0x40,%edi
000000000000552a	je	0x00005551
000000000000552c	xorl	$0x80000000,0xffffff6c(%rbp)
0000000000005536	xorl	$0x80000000,0xffffff70(%rbp)
0000000000005540	leal	0xff(%r10),%eax
0000000000005544	cvtsi2ss	%rax,%xmm0
0000000000005549	movss	%xmm0,0xffffff78(%rbp)
0000000000005551	movl	$0x00000000,0x84(%rbp)
0000000000005558	movl	$0x00000000,0x94(%rbp)
000000000000555f	jmp	0x00005808
0000000000005564	movq	0xa8(%rbp),%rax
0000000000005568	movq	%rax,0xffffff50(%rbp)
000000000000556f	subq	$0x04,%rax
0000000000005573	movq	%rax,0xb0(%rbp)
0000000000005577	movl	0xa0(%rbp),%edx
000000000000557a	cmpl	%edx,0xb8(%rbp)
000000000000557d	jbe	0x000057b0
0000000000005583	cvttss2si	0xffffff7c(%rbp),%rsi
000000000000558c	cvttss2si	0x80(%rbp),%rdi
0000000000005592	movq	0xffffff58(%rbp),%rcx
0000000000005599	movl	0x08(%rcx),%eax
000000000000559c	decl	%eax
000000000000559e	xorl	%ecx,%ecx
00000000000055a0	cmpl	%eax,%esi
00000000000055a2	setb	%cl
00000000000055a5	movl	0xffffff3c(%rbp),%eax
00000000000055ab	imull	%edi,%eax
00000000000055ae	addl	%esi,%eax
00000000000055b0	movl	%eax,%edx
00000000000055b2	movq	0x88(%rbp),%rbx
00000000000055b6	movl	(%rbx,%rdx,4),%r12d
00000000000055ba	addl	%ecx,%eax
00000000000055bc	movl	(%rbx,%rax,4),%r15d
00000000000055c0	movq	0xffffff58(%rbp),%rdx
00000000000055c7	movl	0x04(%rdx),%eax
00000000000055ca	decl	%eax
00000000000055cc	cmpl	%eax,%edi
00000000000055ce	setb	%al
00000000000055d1	movzbl	%al,%eax
00000000000055d4	addl	%edi,%eax
00000000000055d6	imull	0xffffff3c(%rbp),%eax
00000000000055dd	addl	%esi,%eax
00000000000055df	movl	%eax,%edx
00000000000055e1	movl	(%rbx,%rdx,4),%r14d
00000000000055e5	addl	%ecx,%eax
00000000000055e7	movl	(%rbx,%rax,4),%r13d
00000000000055eb	cmpl	$0x00ffffff,%r12d
00000000000055f2	jne	0x0000561e
00000000000055f4	movq	0xffffff40(%rbp),%rcx
00000000000055fb	movl	$0x00000001,(%rcx)
0000000000005601	movq	0xffffff48(%rbp),%rbx
0000000000005608	movl	$0x00000001,(%rbx)
000000000000560e	movq	0x0000f7bb(%rip),%rax
0000000000005615	movl	(%rax),%edi
0000000000005617	testl	%edi,%edi
0000000000005619	jmp	0x00005895
000000000000561e	cmpl	%r15d,%r12d
0000000000005621	jne	0x00005634
0000000000005623	cmpl	%r14d,%r12d
0000000000005626	jne	0x00005634
0000000000005628	movl	%r12d,%r8d
000000000000562b	cmpl	%r13d,%r12d
000000000000562e	je	0x0000570d
0000000000005634	movl	$0x00000000,0x98(%rbp)
000000000000563b	xorps	%xmm0,%xmm0
000000000000563e	ucomiss	0xffffff7c(%rbp),%xmm0
0000000000005645	ja	0x0000565f
0000000000005647	movl	%esi,%eax
0000000000005649	cvtsi2ss	%rax,%xmm0
000000000000564e	movss	0xffffff7c(%rbp),%xmm1
0000000000005656	subss	%xmm0,%xmm1
000000000000565a	movss	%xmm1,0x98(%rbp)
000000000000565f	movl	$0x00000000,0x9c(%rbp)
0000000000005666	xorps	%xmm3,%xmm3
0000000000005669	ucomiss	0x80(%rbp),%xmm3
000000000000566d	ja	0x00005684
000000000000566f	movl	%edi,%eax
0000000000005671	cvtsi2ss	%rax,%xmm0
0000000000005676	movss	0x80(%rbp),%xmm1
000000000000567b	subss	%xmm0,%xmm1
000000000000567f	movss	%xmm1,0x9c(%rbp)
0000000000005684	movl	%r13d,%r8d
0000000000005687	movl	%r14d,%ecx
000000000000568a	movl	%r15d,%edx
000000000000568d	movl	%r12d,%esi
0000000000005690	movss	0x9c(%rbp),%xmm1
0000000000005695	movss	0x98(%rbp),%xmm0
000000000000569a	xorl	%edi,%edi
000000000000569c	callq	0x100002a7d
00000000000056a1	movl	%eax,%ebx
00000000000056a3	movl	%r13d,%r8d
00000000000056a6	movl	%r14d,%ecx
00000000000056a9	movl	%r15d,%edx
00000000000056ac	movl	%r12d,%esi
00000000000056af	movss	0x9c(%rbp),%xmm1
00000000000056b4	movss	0x98(%rbp),%xmm0
00000000000056b9	movl	$0x00000008,%edi
00000000000056be	callq	0x100002a7d
00000000000056c3	orl	%eax,%ebx
00000000000056c5	movl	%r13d,%r8d
00000000000056c8	movl	%r14d,%ecx
00000000000056cb	movl	%r15d,%edx
00000000000056ce	movl	%r12d,%esi
00000000000056d1	movss	0x9c(%rbp),%xmm1
00000000000056d6	movss	0x98(%rbp),%xmm0
00000000000056db	movl	$0x00000010,%edi
00000000000056e0	callq	0x100002a7d
00000000000056e5	orl	%eax,%ebx
00000000000056e7	movl	%r13d,%r8d
00000000000056ea	movl	%r14d,%ecx
00000000000056ed	movl	%r15d,%edx
00000000000056f0	movl	%r12d,%esi
00000000000056f3	movss	0x9c(%rbp),%xmm1
00000000000056f8	movss	0x98(%rbp),%xmm0
00000000000056fd	movl	$0x00000018,%edi
0000000000005702	callq	0x100002a7d
0000000000005707	movl	%eax,%r8d
000000000000570a	orl	%ebx,%r8d
000000000000570d	movl	%r8d,%esi
0000000000005710	shrl	$0x18,%esi
0000000000005713	testl	%esi,%esi
0000000000005715	je	0x0000577d
0000000000005717	cmpl	$0x000000ff,%esi
000000000000571d	je	0x0000577d
000000000000571f	movl	%r8d,%r9d
0000000000005722	andl	$0x00ff0000,%r9d
0000000000005729	shrl	$0x10,%r9d
000000000000572d	imull	%esi,%r9d
0000000000005731	movq	%r8,%rax
0000000000005734	movzbl	%ah,%ecx
0000000000005737	imull	%esi,%ecx
000000000000573a	movzbl	%al,%eax
000000000000573e	movl	%eax,%edi
0000000000005740	imull	%esi,%edi
0000000000005743	movl	$0x80808081,%eax
0000000000005748	mull	%edi
000000000000574a	movl	%edx,%r8d
000000000000574d	shrl	$0x07,%r8d
0000000000005751	shll	$0x18,%esi
0000000000005754	orl	%esi,%r8d
0000000000005757	movl	$0x80808081,%eax
000000000000575c	mull	%r9d
000000000000575f	shrl	$0x07,%edx
0000000000005762	shll	$0x10,%edx
0000000000005765	orl	%edx,%r8d
0000000000005768	movl	$0x80808081,%eax
000000000000576d	mull	%ecx
000000000000576f	movl	%edx,%ecx
0000000000005771	shrl	$0x07,%ecx
0000000000005774	shll	$0x08,%ecx
0000000000005777	orl	%ecx,%r8d
000000000000577a	incl	0x94(%rbp)
000000000000577d	movq	0xb0(%rbp),%rcx
0000000000005781	movl	%r8d,(%rcx)
0000000000005784	movss	0xffffff7c(%rbp),%xmm0
000000000000578c	addss	0xffffff64(%rbp),%xmm0
0000000000005794	movss	%xmm0,0xffffff7c(%rbp)
000000000000579c	movss	0x80(%rbp),%xmm1
00000000000057a1	addss	0xffffff6c(%rbp),%xmm1
00000000000057a9	movss	%xmm1,0x80(%rbp)
00000000000057ae	jmp	0x000057be
00000000000057b0	movq	0xffffff50(%rbp),%rax
00000000000057b7	movl	$0x00000000,0xfc(%rax)
00000000000057be	incq	0xa0(%rbp)
00000000000057c2	addq	$0x04,0xa8(%rbp)
00000000000057c7	cmpq	$0x00000100,0xa0(%rbp)
00000000000057cf	jne	0x100005564
00000000000057d5	movss	0xffffff74(%rbp),%xmm0
00000000000057dd	addss	0xffffff68(%rbp),%xmm0
00000000000057e5	movss	%xmm0,0xffffff74(%rbp)
00000000000057ed	movss	0xffffff78(%rbp),%xmm1
00000000000057f5	addss	0xffffff70(%rbp),%xmm1
00000000000057fd	movss	%xmm1,0xffffff78(%rbp)
0000000000005805	incl	0x84(%rbp)
0000000000005808	movl	0xbc(%rbp),%eax
000000000000580b	cmpl	%eax,0x84(%rbp)
000000000000580e	je	0x00005849
0000000000005810	movq	0xffffff50(%rbp),%rdx
0000000000005817	addq	$0x04,%rdx
000000000000581b	movq	%rdx,0xa8(%rbp)
000000000000581f	movss	0xffffff74(%rbp),%xmm0
0000000000005827	movss	%xmm0,0xffffff7c(%rbp)
000000000000582f	movss	0xffffff78(%rbp),%xmm1
0000000000005837	movss	%xmm1,0x80(%rbp)
000000000000583c	movq	$0x00000000,0xa0(%rbp)
0000000000005844	jmp	0x100005564
0000000000005849	cmpl	$0x000000ff,0xbc(%rbp)
0000000000005850	ja	0x00005871
0000000000005852	movl	$0x00000100,%edx
0000000000005857	subl	0xbc(%rbp),%edx
000000000000585a	shll	$0x08,%edx
000000000000585d	movl	%edx,%edx
000000000000585f	shlq	$0x02,%rdx
0000000000005863	xorl	%esi,%esi
0000000000005865	movq	0xffffff50(%rbp),%rdi
000000000000586c	callq	0x00005871
0000000000005871	movq	0xffffff48(%rbp),%rax
0000000000005878	movl	$0x00000000,(%rax)
000000000000587e	movl	0x94(%rbp),%ecx
0000000000005881	movq	0xffffff40(%rbp),%rdx
0000000000005888	movl	%ecx,(%rdx)
000000000000588a	movq	0x0000f53f(%rip),%rbx
0000000000005891	movl	(%rbx),%esi
0000000000005893	testl	%esi,%esi
0000000000005895	je	0x000058b4
0000000000005897	movl	0xffffff60(%rbp),%esi
000000000000589d	xorl	%r9d,%r9d
00000000000058a0	xorl	%r8d,%r8d
00000000000058a3	xorl	%ecx,%ecx
00000000000058a5	movl	$0x00000001,%edx
00000000000058aa	movl	$0x06128482,%edi
00000000000058af	callq	0x000058b4
00000000000058b4	movl	$0x00000001,%eax
00000000000058b9	addq	$0x000000a8,%rsp
00000000000058c0	popq	%rbx
00000000000058c1	popq	%r12
00000000000058c3	popq	%r13
00000000000058c5	popq	%r14
00000000000058c7	popq	%r15
00000000000058c9	leave
00000000000058ca	ret
00000000000058cb	nop
__ZN22AppleIntelHDGraphicsFB16hwSetCursorImageEjP20IOHardwareCursorInfo:
00000000000058cc	pushq	%rbp
00000000000058cd	movq	%rsp,%rbp
00000000000058d0	pushq	%r15
00000000000058d2	pushq	%r14
00000000000058d4	pushq	%r13
00000000000058d6	pushq	%r12
00000000000058d8	pushq	%rbx
00000000000058d9	subq	$0x58,%rsp
00000000000058dd	movq	%rdi,0xb8(%rbp)
00000000000058e1	movl	%esi,0xb4(%rbp)
00000000000058e4	movq	%rdx,%r12
00000000000058e7	movl	0x00000194(%rdi),%eax
00000000000058ed	movq	$0x00000000,0xc0(%rbp)
00000000000058f5	cmpl	%eax,%esi
00000000000058f7	jae	0x00005909
00000000000058f9	subl	%esi,%eax
00000000000058fb	decl	%eax
00000000000058fd	movq	0x00000198(%rdi,%rax,8),%rax
0000000000005905	movq	%rax,0xc0(%rbp)
0000000000005909	movq	0x18(%r12),%r13
000000000000590e	movq	0xb8(%rbp),%rax
0000000000005912	movq	0x000000c0(%rax),%rbx
0000000000005919	movl	0xb4(%rbp),%edx
000000000000591c	movq	%rdx,0xa8(%rbp)
0000000000005920	movq	0x0000f4a9(%rip),%rcx
0000000000005927	movl	(%rcx),%r15d
000000000000592a	testl	%r15d,%r15d
000000000000592d	je	0x00005949
000000000000592f	movq	%rdx,%rdi
0000000000005932	xorl	%r9d,%r9d
0000000000005935	xorl	%r8d,%r8d
0000000000005938	xorl	%ecx,%ecx
000000000000593a	xorl	%edx,%edx
000000000000593c	movq	%rdi,%rsi
000000000000593f	movl	$0x06128485,%edi
0000000000005944	callq	0x00005949
0000000000005949	movl	0x08(%r12),%eax
000000000000594e	movq	0xc0(%rbp),%rdx
0000000000005952	movl	%eax,0x000004a8(%rdx)
0000000000005958	movl	0x04(%r12),%eax
000000000000595d	movl	%eax,0x000004ac(%rdx)
0000000000005963	movl	0x000004b0(%rdx),%ecx
0000000000005969	xorl	$0x01,%ecx
000000000000596c	andl	$0x01,%ecx
000000000000596f	movl	%ecx,0x000004b0(%rdx)
0000000000005975	imulq	$0x000000f0,0xa8(%rbp),%rax
000000000000597d	movq	0xb8(%rbp),%rdi
0000000000005981	movl	0x000001fc(%rdi,%rax),%esi
0000000000005988	orl	$0x04000023,%esi
000000000000598e	cmpl	$0x01,0xb4(%rbp)
0000000000005992	sbbq	%rax,%rax
0000000000005995	andq	$0xfffff000,%eax
000000000000599b	movq	0x00000098(%rdi),%rdx
00000000000059a2	leaq	0x00071180(%rax,%rdx),%rax
00000000000059aa	movl	(%rax),%eax
00000000000059ac	movl	%esi,%edx
00000000000059ae	andl	$0xfbffffff,%edx
00000000000059b4	testl	$0x40000000,%eax
00000000000059b9	cmovel	%edx,%esi
00000000000059bc	movl	%esi,0xcc(%rbp)
00000000000059bf	leaq	0x00080000(%rbx),%rax
00000000000059c6	movl	0xb4(%rbp),%r14d
00000000000059ca	testl	%r14d,%r14d
00000000000059cd	cmovneq	%rax,%rbx
00000000000059d1	leaq	0x00040000(%rbx),%rax
00000000000059d8	testl	%ecx,%ecx
00000000000059da	cmovneq	%rax,%rbx
00000000000059de	movq	%r13,%r9
00000000000059e1	xorl	%r14d,%r14d
00000000000059e4	xorl	%r13d,%r13d
00000000000059e7	xorl	%r15d,%r15d
00000000000059ea	movl	$0x80808081,%r11d
00000000000059f0	jmp	0x00005aad
00000000000059f5	movq	%r8,%rbx
00000000000059f8	leaq	0xfc(%r8),%r10
00000000000059fc	cmpl	%edi,0x08(%r12)
0000000000005a01	jbe	0x00005a8e
0000000000005a07	movl	(%r9),%eax
0000000000005a0a	movl	%eax,0x90(%rbp)
0000000000005a0d	movl	%eax,%esi
0000000000005a0f	shrl	$0x18,%esi
0000000000005a12	cmpl	$0x00ffffff,%eax
0000000000005a17	jne	0x00005a23
0000000000005a19	incl	%r14d
0000000000005a1c	movl	$0x0f000000,0x90(%rbp)
0000000000005a23	testl	%esi,%esi
0000000000005a25	je	0x00005a82
0000000000005a27	cmpl	$0x000000ff,%esi
0000000000005a2d	je	0x00005a82
0000000000005a2f	movl	0x90(%rbp),%edx
0000000000005a32	andl	$0x00ff0000,%edx
0000000000005a38	shrl	$0x10,%edx
0000000000005a3b	imull	%esi,%edx
0000000000005a3e	movl	%edx,0x8c(%rbp)
0000000000005a41	movl	0x90(%rbp),%eax
0000000000005a44	movzbl	%ah,%ecx
0000000000005a47	imull	%esi,%ecx
0000000000005a4a	movzbl	%al,%edx
0000000000005a4d	imull	%esi,%edx
0000000000005a50	movl	%edx,%eax
0000000000005a52	mull	%r11d
0000000000005a55	shrl	$0x07,%edx
0000000000005a58	shll	$0x18,%esi
0000000000005a5b	orl	%esi,%edx
0000000000005a5d	movl	%edx,0x90(%rbp)
0000000000005a60	movl	0x8c(%rbp),%eax
0000000000005a63	mull	%r11d
0000000000005a66	shrl	$0x07,%edx
0000000000005a69	shll	$0x10,%edx
0000000000005a6c	orl	%edx,0x90(%rbp)
0000000000005a6f	movl	%ecx,%eax
0000000000005a71	mull	%r11d
0000000000005a74	movl	%edx,%ecx
0000000000005a76	shrl	$0x07,%ecx
0000000000005a79	shll	$0x08,%ecx
0000000000005a7c	orl	%ecx,0x90(%rbp)
0000000000005a7f	incl	%r13d
0000000000005a82	addq	$0x04,%r9
0000000000005a86	movl	0x90(%rbp),%ecx
0000000000005a89	movl	%ecx,(%r10)
0000000000005a8c	jmp	0x00005a96
0000000000005a8e	movl	$0x00000000,0xfc(%r8)
0000000000005a96	incq	%rdi
0000000000005a99	addq	$0x04,%r8
0000000000005a9d	cmpq	$0x00000100,%rdi
0000000000005aa4	jne	0x1000059f5
0000000000005aaa	incq	%r15
0000000000005aad	movl	0x04(%r12),%eax
0000000000005ab2	cmpl	%r15d,%eax
0000000000005ab5	jbe	0x00005ac2
0000000000005ab7	leaq	0x04(%rbx),%r8
0000000000005abb	xorl	%edi,%edi
0000000000005abd	jmp	0x1000059f5
0000000000005ac2	cmpl	$0x000000ff,%eax
0000000000005ac7	ja	0x00005ae3
0000000000005ac9	movl	$0x00000100,%edx
0000000000005ace	subl	%eax,%edx
0000000000005ad0	shll	$0x08,%edx
0000000000005ad3	movl	%edx,%edx
0000000000005ad5	shlq	$0x02,%rdx
0000000000005ad9	xorl	%esi,%esi
0000000000005adb	movq	%rbx,%rdi
0000000000005ade	callq	0x00005ae3
0000000000005ae3	testl	%r14d,%r14d
0000000000005ae6	je	0x00005b30
0000000000005ae8	testl	%r13d,%r13d
0000000000005aeb	je	0x00005b2c
0000000000005aed	movl	$0xe00002c7,%eax
0000000000005af2	movq	0x0000f2d7(%rip),%rbx
0000000000005af9	movl	(%rbx),%r11d
0000000000005afc	testl	%r11d,%r11d
0000000000005aff	je	0x00005bd2
0000000000005b05	xorl	%r9d,%r9d
0000000000005b08	xorl	%r8d,%r8d
0000000000005b0b	xorl	%ecx,%ecx
0000000000005b0d	movq	$0xe00002c7,%rdx
0000000000005b14	movq	0xa8(%rbp),%rsi
0000000000005b18	movl	$0x06128486,%edi
0000000000005b1d	callq	0x00005b22
0000000000005b22	movl	$0xe00002c7,%eax
0000000000005b27	jmp	0x00005bd2
0000000000005b2c	andl	$0xdf,0xcc(%rbp)
0000000000005b30	imulq	$0x000000f0,0xa8(%rbp),%rax
0000000000005b38	addq	0xb8(%rbp),%rax
0000000000005b3c	movl	0xcc(%rbp),%edi
0000000000005b3f	movl	%edi,0x000001fc(%rax)
0000000000005b45	cmpb	$0x00,0x0000024c(%rax)
0000000000005b4c	je	0x00005b6e
0000000000005b4e	cmpl	$0x01,0xb4(%rbp)
0000000000005b52	sbbq	%rdx,%rdx
0000000000005b55	andq	$0xc0,%rdx
0000000000005b59	movq	0xb8(%rbp),%rcx
0000000000005b5d	movq	0x00000098(%rcx),%rax
0000000000005b64	leaq	0x000700c0(%rax,%rdx),%rax
0000000000005b6c	movl	%edi,(%rax)
0000000000005b6e	movq	0xc0(%rbp),%rbx
0000000000005b72	movl	0x000004b0(%rbx),%edx
0000000000005b78	imulq	$0x3c,0xa8(%rbp),%rax
0000000000005b7d	addq	%rdx,%rax
0000000000005b80	movq	0xb8(%rbp),%rdi
0000000000005b84	movl	0x00000200(%rdi,%rax,4),%ecx
0000000000005b8b	cmpl	$0x01,0xb4(%rbp)
0000000000005b8f	sbbq	%rdx,%rdx
0000000000005b92	andq	$0xc0,%rdx
0000000000005b96	movq	0x00000098(%rdi),%rax
0000000000005b9d	leaq	0x000700c4(%rax,%rdx),%rax
0000000000005ba5	movl	%ecx,(%rax)
0000000000005ba7	xorl	%eax,%eax
0000000000005ba9	movq	0x0000f220(%rip),%rdx
0000000000005bb0	movl	(%rdx),%r10d
0000000000005bb3	testl	%r10d,%r10d
0000000000005bb6	je	0x00005bd2
0000000000005bb8	xorl	%r9d,%r9d
0000000000005bbb	xorl	%r8d,%r8d
0000000000005bbe	xorl	%ecx,%ecx
0000000000005bc0	xorl	%edx,%edx
0000000000005bc2	movq	0xa8(%rbp),%rsi
0000000000005bc6	movl	$0x06128486,%edi
0000000000005bcb	callq	0x00005bd0
0000000000005bd0	xorl	%eax,%eax
0000000000005bd2	addq	$0x58,%rsp
0000000000005bd6	popq	%rbx
0000000000005bd7	popq	%r12
0000000000005bd9	popq	%r13
0000000000005bdb	popq	%r14
0000000000005bdd	popq	%r15
0000000000005bdf	leave
0000000000005be0	ret
0000000000005be1	nop
__ZN21AppleIntelFramebuffer12connectFlagsEiiPj:
0000000000005be2	pushq	%rbp
0000000000005be3	movq	%rsp,%rbp
0000000000005be6	pushq	%r12
0000000000005be8	pushq	%rbx
0000000000005be9	subq	$0x10,%rsp
0000000000005bed	movq	%rdi,%rbx
0000000000005bf0	movl	%edx,%esi
0000000000005bf2	movq	%rcx,%r12
0000000000005bf5	leaq	0xe0(%rbp),%rcx
0000000000005bf9	leaq	0xe8(%rbp),%rdx
0000000000005bfd	callq	0x100004e1a
0000000000005c02	movl	%eax,%esi
0000000000005c04	testl	%eax,%eax
0000000000005c06	jne	0x00005c38
0000000000005c08	movq	0xe8(%rbp),%rdx
0000000000005c0c	movl	0x08(%rdx),%ecx
0000000000005c0f	movl	%ecx,(%r12)
0000000000005c13	leaq	0x0000ccc6(%rip),%rax
0000000000005c1a	cmpq	%rax,%rdx
0000000000005c1d	je	0x00005c38
0000000000005c1f	testb	$0xf0,0x00000210(%rbx)
0000000000005c26	jne	0x00005c38
0000000000005c28	cmpl	$0x00000226,0x0c(%rdx)
0000000000005c2f	je	0x00005c38
0000000000005c31	andl	$0xf8,%ecx
0000000000005c34	movl	%ecx,(%r12)
0000000000005c38	movl	%esi,%eax
0000000000005c3a	addq	$0x10,%rsp
0000000000005c3e	popq	%rbx
0000000000005c3f	popq	%r12
0000000000005c41	leave
0000000000005c42	ret
0000000000005c43	nop
__ZN21AppleIntelFramebuffer27getTimingInfoForDisplayModeEiP19IOTimingInformation:
0000000000005c44	pushq	%rbp
0000000000005c45	movq	%rsp,%rbp
0000000000005c48	subq	$0x60,%rsp
0000000000005c4c	movq	%rbx,0xe0(%rbp)
0000000000005c50	movq	%r12,0xe8(%rbp)
0000000000005c54	movq	%r13,0xf0(%rbp)
0000000000005c58	movq	%r14,0xf8(%rbp)
0000000000005c5c	movq	%rdi,%r13
0000000000005c5f	movl	%esi,%r12d
0000000000005c62	movq	%rdx,%rbx
0000000000005c65	movq	0x0000f164(%rip),%r14
0000000000005c6c	movl	(%r14),%eax
0000000000005c6f	testl	%eax,%eax
0000000000005c71	je	0x00005c8f
0000000000005c73	movl	0x04(%rdx),%ecx
0000000000005c76	movslq	%esi,%rdx
0000000000005c79	movl	0x000001d8(%rdi),%esi
0000000000005c7f	xorl	%r9d,%r9d
0000000000005c82	xorl	%r8d,%r8d
0000000000005c85	movl	$0x061284b1,%edi
0000000000005c8a	callq	0x00005c8f
0000000000005c8f	leaq	0xd0(%rbp),%rcx
0000000000005c93	leaq	0xd8(%rbp),%rdx
0000000000005c97	movl	%r12d,%esi
0000000000005c9a	movq	%r13,%rdi
0000000000005c9d	callq	0x100004e1a
0000000000005ca2	movl	%eax,%r12d
0000000000005ca5	testl	%eax,%eax
0000000000005ca7	je	0x00005cc1
0000000000005ca9	movl	(%r14),%eax
0000000000005cac	testl	%eax,%eax
0000000000005cae	je	0x00005d3a
0000000000005cb4	movslq	%r12d,%rsi
0000000000005cb7	xorl	%r9d,%r9d
0000000000005cba	xorl	%r8d,%r8d
0000000000005cbd	xorl	%ecx,%ecx
0000000000005cbf	jmp	0x00005d2e
0000000000005cc1	movq	0xd8(%rbp),%rax
0000000000005cc5	movl	0x0c(%rax),%eax
0000000000005cc8	movl	%eax,(%rbx)
0000000000005cca	movl	0x04(%rbx),%eax
0000000000005ccd	testl	%eax,%eax
0000000000005ccf	jns	0x00005d17
0000000000005cd1	movq	0xd0(%rbp),%rsi
0000000000005cd5	leaq	0x08(%rbx),%rdi
0000000000005cd9	movl	$0x000000a0,%edx
0000000000005cde	callq	0x00005ce3
0000000000005ce3	movq	0xd0(%rbp),%rax
0000000000005ce7	movq	0x28(%rax),%rdx
0000000000005ceb	testq	%rdx,%rdx
0000000000005cee	je	0x00005d17
0000000000005cf0	leaq	0xa0(%rbp),%rcx
0000000000005cf4	movl	0x000001d8(%r13),%esi
0000000000005cfb	movq	0x000001d0(%r13),%rdi
0000000000005d02	callq	0x100003228
0000000000005d07	testb	%al,%al
0000000000005d09	je	0x00005d17
0000000000005d0b	movq	0xc0(%rbp),%rax
0000000000005d0f	movq	%rax,0x40(%rbx)
0000000000005d13	movq	%rax,0x38(%rbx)
0000000000005d17	movl	(%r14),%eax
0000000000005d1a	testl	%eax,%eax
0000000000005d1c	je	0x00005d3a
0000000000005d1e	movl	0x04(%rbx),%ecx
0000000000005d21	movl	0x000001d8(%r13),%esi
0000000000005d28	xorl	%r9d,%r9d
0000000000005d2b	xorl	%r8d,%r8d
0000000000005d2e	xorl	%edx,%edx
0000000000005d30	movl	$0x061284b2,%edi
0000000000005d35	callq	0x00005d3a
0000000000005d3a	movl	%r12d,%eax
0000000000005d3d	movq	0xe0(%rbp),%rbx
0000000000005d41	movq	0xe8(%rbp),%r12
0000000000005d45	movq	0xf0(%rbp),%r13
0000000000005d49	movq	0xf8(%rbp),%r14
0000000000005d4d	leave
0000000000005d4e	ret
0000000000005d4f	nop
__ZN21AppleIntelFramebuffer18setDetailedTimingsEP7OSArray:
0000000000005d50	pushq	%rbp
0000000000005d51	movq	%rsp,%rbp
0000000000005d54	pushq	%r13
0000000000005d56	pushq	%r12
0000000000005d58	pushq	%rbx
0000000000005d59	subq	$0x18,%rsp
0000000000005d5d	movq	%rdi,%r12
0000000000005d60	movq	%rsi,%rbx
0000000000005d63	movq	0x0000f066(%rip),%rax
0000000000005d6a	movl	(%rax),%eax
0000000000005d6c	testl	%eax,%eax
0000000000005d6e	je	0x00005d90
0000000000005d70	movq	0x000001f8(%rdi),%rcx
0000000000005d77	movl	0x000001d8(%rdi),%esi
0000000000005d7d	xorl	%r9d,%r9d
0000000000005d80	xorl	%r8d,%r8d
0000000000005d83	movq	%rbx,%rdx
0000000000005d86	movl	$0x06128514,%edi
0000000000005d8b	callq	0x00005d90
0000000000005d90	testq	%rbx,%rbx
0000000000005d93	je	0x00005dae
0000000000005d95	movq	(%r12),%rax
0000000000005d99	movq	%rbx,%rdx
0000000000005d9c	leaq	0x0000b498(%rip),%rsi
0000000000005da3	movq	%r12,%rdi
0000000000005da6	call	*0x00000268(%rax)
0000000000005dac	jmp	0x00005dc2
0000000000005dae	movq	(%r12),%rax
0000000000005db2	leaq	0x0000b482(%rip),%rsi
0000000000005db9	movq	%r12,%rdi
0000000000005dbc	call	*0x000002a0(%rax)
0000000000005dc2	movq	%rbx,0x000001f8(%r12)
0000000000005dca	cmpl	$0xfb,0x000001dc(%r12)
0000000000005dd3	jne	0x00005ed6
0000000000005dd9	leaq	0xd8(%rbp),%rcx
0000000000005ddd	xorl	%edx,%edx
0000000000005ddf	movl	$0xfffffffb,%esi
0000000000005de4	movq	%r12,%rdi
0000000000005de7	callq	0x100004e1a
0000000000005dec	testl	%eax,%eax
0000000000005dee	jne	0x00005ed6
0000000000005df4	movl	0x0000046c(%r12),%eax
0000000000005dfc	testl	%eax,%eax
0000000000005dfe	jne	0x00005e0e
0000000000005e00	movq	0x0000efd9(%rip),%rax
0000000000005e07	movq	(%rax),%r13
0000000000005e0a	xorl	%ebx,%ebx
0000000000005e0c	jmp	0x00005e85
0000000000005e0e	movl	%eax,0x000001dc(%r12)
0000000000005e16	jmp	0x00005ed6
0000000000005e1b	movq	(%rdx),%rax
0000000000005e1e	movq	%rdx,%rdi
0000000000005e21	call	*0x00000178(%rax)
0000000000005e27	movq	%rax,%rcx
0000000000005e2a	movl	0x40(%rax),%esi
0000000000005e2d	movq	0xd8(%rbp),%rax
0000000000005e31	cmpl	0x40(%rax),%esi
0000000000005e34	jne	0x00005e82
0000000000005e36	movl	0x50(%rcx),%edi
0000000000005e39	cmpl	0x50(%rax),%edi
0000000000005e3c	jne	0x00005e82
0000000000005e3e	movl	0x20(%rcx),%edx
0000000000005e41	andl	$0x04,%edx
0000000000005e44	movl	0x20(%rax),%eax
0000000000005e47	andl	$0x04,%eax
0000000000005e4a	cmpl	%eax,%edx
0000000000005e4c	jne	0x00005eaf
0000000000005e4e	movl	%esi,%edx
0000000000005e50	addl	0x44(%rcx),%edx
0000000000005e53	movq	0x28(%rcx),%rax
0000000000005e57	movq	%rdx,%rsi
0000000000005e5a	xorl	%edx,%edx
0000000000005e5c	divq	%rsi
0000000000005e5f	addl	0x54(%rcx),%edi
0000000000005e62	xorl	%edx,%edx
0000000000005e64	divl	%edi
0000000000005e66	movl	%eax,%esi
0000000000005e68	movl	0x00000480(%r12),%edx
0000000000005e70	leal	0xfe(%rdx),%eax
0000000000005e73	cmpl	%eax,%esi
0000000000005e75	jb	0x00005e82
0000000000005e77	leal	0x02(%rdx),%eax
0000000000005e7a	cmpl	%eax,%esi
0000000000005e7c	ja	0x00005e82
0000000000005e7e	movl	(%rcx),%ebx
0000000000005e80	jmp	0x00005eb1
0000000000005e82	incq	%rbx
0000000000005e85	movq	0x000001f8(%r12),%rdi
0000000000005e8d	movq	(%rdi),%rax
0000000000005e90	movl	%ebx,%esi
0000000000005e92	call	*0x000001e8(%rax)
0000000000005e98	movq	%rax,%rdi
0000000000005e9b	movq	%r13,%rsi
0000000000005e9e	callq	0x00005ea3
0000000000005ea3	movq	%rax,%rdx
0000000000005ea6	testq	%rax,%rax
0000000000005ea9	jne	0x100005e1b
0000000000005eaf	xorl	%ebx,%ebx
0000000000005eb1	cmpl	%ebx,0x000001dc(%r12)
0000000000005eb9	je	0x00005ed6
0000000000005ebb	xorl	%ecx,%ecx
0000000000005ebd	xorl	%edx,%edx
0000000000005ebf	movl	%ebx,%esi
0000000000005ec1	movq	%r12,%rdi
0000000000005ec4	callq	0x100004e1a
0000000000005ec9	testw	%ax,%ax
0000000000005ecc	jne	0x00005ed6
0000000000005ece	movl	%ebx,0x000001dc(%r12)
0000000000005ed6	xorl	%eax,%eax
0000000000005ed8	addq	$0x18,%rsp
0000000000005edc	popq	%rbx
0000000000005edd	popq	%r12
0000000000005edf	popq	%r13
0000000000005ee1	leave
0000000000005ee2	ret
0000000000005ee3	nop
__ZN22AppleIntelHDGraphicsFB10hwSetNVRAMEjP21SaveFramebufferConfigPK29IODetailedTimingInformationV2:
0000000000005ee4	pushq	%rbp
0000000000005ee5	movq	%rsp,%rbp
0000000000005ee8	subq	$0x40,%rsp
0000000000005eec	movq	%rbx,0xd8(%rbp)
0000000000005ef0	movq	%r12,0xe0(%rbp)
0000000000005ef4	movq	%r13,0xe8(%rbp)
0000000000005ef8	movq	%r14,0xf0(%rbp)
0000000000005efc	movq	%r15,0xf8(%rbp)
0000000000005f00	movq	%rdi,%r12
0000000000005f03	movl	%esi,%r13d
0000000000005f06	movq	%rdx,%r14
0000000000005f09	movq	%rcx,%r15
0000000000005f0c	movq	0x0000eebd(%rip),%rax
0000000000005f13	movl	(%rax),%ecx
0000000000005f15	testl	%ecx,%ecx
0000000000005f17	je	0x00005f2f
0000000000005f19	movl	%esi,%esi
0000000000005f1b	xorl	%r9d,%r9d
0000000000005f1e	xorl	%r8d,%r8d
0000000000005f21	xorl	%ecx,%ecx
0000000000005f23	xorl	%edx,%edx
0000000000005f25	movl	$0x06128479,%edi
0000000000005f2a	callq	0x00005f2f
0000000000005f2f	movq	0x0000eeca(%rip),%rax
0000000000005f36	movq	(%rax),%rbx
0000000000005f39	callq	0x00005f3e
0000000000005f3e	movq	%rax,%rdi
0000000000005f41	movq	%rbx,%rsi
0000000000005f44	callq	0x00005f49
0000000000005f49	movq	%rax,0xc8(%rbp)
0000000000005f4d	movl	0x00000194(%r12),%eax
0000000000005f55	xorl	%edx,%edx
0000000000005f57	cmpl	%eax,%r13d
0000000000005f5a	jae	0x00005f69
0000000000005f5c	subl	%r13d,%eax
0000000000005f5f	decl	%eax
0000000000005f61	movq	0x00000198(%r12,%rax,8),%rdx
0000000000005f69	movl	0x00000210(%rdx),%eax
0000000000005f6f	cmpl	$0x02,%eax
0000000000005f72	je	0x00005faf
0000000000005f74	cmpl	$0x03,%eax
0000000000005f77	je	0x00005f88
0000000000005f79	movl	$0xe00002c7,%ebx
0000000000005f7e	decl	%eax
0000000000005f80	jne	0x0000612a
0000000000005f86	jmp	0x00005fb6
0000000000005f88	movl	$0x00000010,%esi
0000000000005f8d	movq	%r12,%rdi
0000000000005f90	callq	0x10000290c
0000000000005f95	movl	%eax,0x08(%r14)
0000000000005f99	movl	0x000005dc(%r12),%edx
0000000000005fa1	testl	%edx,%edx
0000000000005fa3	je	0x00005fc7
0000000000005fa5	movl	$0x00000002,0x38(%r14)
0000000000005fad	jmp	0x00005fc7
0000000000005faf	movl	$0x00000040,%esi
0000000000005fb4	jmp	0x00005fbb
0000000000005fb6	movl	$0x00000020,%esi
0000000000005fbb	movq	%r12,%rdi
0000000000005fbe	callq	0x10000290c
0000000000005fc3	movl	%eax,0x08(%r14)
0000000000005fc7	xorl	%ebx,%ebx
0000000000005fc9	testq	%r15,%r15
0000000000005fcc	je	0x000060b7
0000000000005fd2	movl	0x00000194(%r12),%edx
0000000000005fda	xorl	%eax,%eax
0000000000005fdc	cmpl	%edx,%r13d
0000000000005fdf	jae	0x00005ff0
0000000000005fe1	movl	%edx,%eax
0000000000005fe3	subl	%r13d,%eax
0000000000005fe6	decl	%eax
0000000000005fe8	movq	0x00000198(%r12,%rax,8),%rax
0000000000005ff0	cmpl	$0x03,0x00000210(%rax)
0000000000005ff7	jne	0x00006062
0000000000005ff9	xorl	%eax,%eax
0000000000005ffb	cmpl	%edx,%r13d
0000000000005ffe	jae	0x0000600e
0000000000006000	subl	%r13d,%edx
0000000000006003	leal	0xff(%rdx),%eax
0000000000006006	movq	0x00000198(%r12,%rax,8),%rax
000000000000600e	addq	$0x0000024e,%eax
0000000000006014	movzbl	0x05(%rax),%esi
0000000000006018	movzbl	0x07(%rax),%ecx
000000000000601c	movzbl	0x04(%rax),%edx
0000000000006020	andl	$0x000000f0,%edx
0000000000006026	shll	$0x04,%edx
0000000000006029	movzbl	0x02(%rax),%eax
000000000000602d	orl	%eax,%edx
000000000000602f	cmpl	%edx,0x40(%r15)
0000000000006033	jne	0x0000604b
0000000000006035	movl	%ecx,%eax
0000000000006037	andl	$0x000000f0,%eax
000000000000603c	shll	$0x04,%eax
000000000000603f	movzbl	%dh,%edx
0000000000006043	orl	%edx,%eax
0000000000006045	cmpl	%eax,0x50(%r15)
0000000000006049	je	0x00006062
000000000000604b	movl	0x54(%r14),%ebx
000000000000604f	movl	$0x00000060,%edx
0000000000006054	xorl	%esi,%esi
0000000000006056	movq	%r14,%rdi
0000000000006059	callq	0x0000605e
000000000000605e	movl	%ebx,0x54(%r14)
0000000000006062	movl	$0x000000a0,%esi
0000000000006067	movq	%r15,%rdi
000000000000606a	callq	0x0000606f
000000000000606f	movq	%rax,%r15
0000000000006072	leaq	0x0000b1d6(%rip),%rdi
0000000000006079	testl	%r13d,%r13d
000000000000607c	je	0x00006085
000000000000607e	leaq	0x0000b1d8(%rip),%rdi
0000000000006085	callq	0x0000608a
000000000000608a	movq	%rax,%rdx
000000000000608d	movl	$0xe00002bc,%ebx
0000000000006092	cmpq	$0x00,0xc8(%rbp)
0000000000006097	je	0x000060b7
0000000000006099	movq	0xc8(%rbp),%rcx
000000000000609d	movq	(%rcx),%rax
00000000000060a0	movq	0x00000088(%r12),%rsi
00000000000060a8	movq	%r15,%rcx
00000000000060ab	movq	0xc8(%rbp),%rdi
00000000000060af	call	*0x000009e8(%rax)
00000000000060b5	movl	%eax,%ebx
00000000000060b7	testq	%r14,%r14
00000000000060ba	je	0x0000612a
00000000000060bc	movl	%r13d,%eax
00000000000060bf	leaq	(%rax,%rax,2),%rax
00000000000060c3	shlq	$0x05,%rax
00000000000060c7	leaq	0x000004d0(%r12,%rax),%rsi
00000000000060cf	movl	$0x00000060,%edx
00000000000060d4	movq	%r14,%rdi
00000000000060d7	callq	0x000060dc
00000000000060dc	leaq	0x000004c8(%r12),%rdi
00000000000060e4	movl	$0x00000100,%esi
00000000000060e9	callq	0x000060ee
00000000000060ee	movq	%rax,%r14
00000000000060f1	leaq	0x0000b173(%rip),%rdi
00000000000060f8	callq	0x000060fd
00000000000060fd	movq	%rax,%rdx
0000000000006100	movl	$0xe00002bc,%ebx
0000000000006105	cmpq	$0x00,0xc8(%rbp)
000000000000610a	je	0x0000612a
000000000000610c	movq	0xc8(%rbp),%rcx
0000000000006110	movq	(%rcx),%rax
0000000000006113	movq	0x00000088(%r12),%rsi
000000000000611b	movq	%r14,%rcx
000000000000611e	movq	0xc8(%rbp),%rdi
0000000000006122	call	*0x000009e8(%rax)
0000000000006128	movl	%eax,%ebx
000000000000612a	movq	0x0000ec9f(%rip),%rax
0000000000006131	movl	(%rax),%eax
0000000000006133	testl	%eax,%eax
0000000000006135	je	0x0000614f
0000000000006137	movslq	%ebx,%rdx
000000000000613a	movl	%r13d,%esi
000000000000613d	xorl	%r9d,%r9d
0000000000006140	xorl	%r8d,%r8d
0000000000006143	xorl	%ecx,%ecx
0000000000006145	movl	$0x0612847a,%edi
000000000000614a	callq	0x0000614f
000000000000614f	movl	%ebx,%eax
0000000000006151	movq	0xd8(%rbp),%rbx
0000000000006155	movq	0xe0(%rbp),%r12
0000000000006159	movq	0xe8(%rbp),%r13
000000000000615d	movq	0xf0(%rbp),%r14
0000000000006161	movq	0xf8(%rbp),%r15
0000000000006165	leave
0000000000006166	ret
0000000000006167	nop
__ZN21AppleIntelFramebuffer21setStartupDisplayModeEii:
0000000000006168	pushq	%rbp
0000000000006169	movq	%rsp,%rbp
000000000000616c	subq	$0x30,%rsp
0000000000006170	movq	%rbx,0xe8(%rbp)
0000000000006174	movq	%r12,0xf0(%rbp)
0000000000006178	movq	%r13,0xf8(%rbp)
000000000000617c	movq	%rdi,%r12
000000000000617f	movl	%esi,%ebx
0000000000006181	movq	0x0000ec48(%rip),%r13
0000000000006188	movl	0x00(%r13),%edi
000000000000618c	testl	%edi,%edi
000000000000618e	je	0x000061ae
0000000000006190	movslq	%edx,%rcx
0000000000006193	movslq	%esi,%rdx
0000000000006196	movl	0x000001d8(%r12),%esi
000000000000619e	xorl	%r9d,%r9d
00000000000061a1	xorl	%r8d,%r8d
00000000000061a4	movl	$0x06128505,%edi
00000000000061a9	callq	0x000061ae
00000000000061ae	leaq	0xd8(%rbp),%rcx
00000000000061b2	xorl	%edx,%edx
00000000000061b4	movl	%ebx,%esi
00000000000061b6	movq	%r12,%rdi
00000000000061b9	callq	0x100004e1a
00000000000061be	movl	%eax,%ebx
00000000000061c0	testw	%ax,%ax
00000000000061c3	jne	0x000061e8
00000000000061c5	movq	0xd8(%rbp),%rcx
00000000000061c9	leaq	0x00000388(%r12),%rdx
00000000000061d1	movl	0x000001d8(%r12),%esi
00000000000061d9	movq	0x000001d0(%r12),%rdi
00000000000061e1	callq	0x100005ee4
00000000000061e6	movl	%eax,%ebx
00000000000061e8	movl	0x00(%r13),%esi
00000000000061ec	testl	%esi,%esi
00000000000061ee	je	0x00006208
00000000000061f0	movswq	%bx,%rsi
00000000000061f4	xorl	%r9d,%r9d
00000000000061f7	xorl	%r8d,%r8d
00000000000061fa	xorl	%ecx,%ecx
00000000000061fc	xorl	%edx,%edx
00000000000061fe	movl	$0x06128506,%edi
0000000000006203	callq	0x00006208
0000000000006208	movswl	%bx,%eax
000000000000620b	movq	0xe8(%rbp),%rbx
000000000000620f	movq	0xf0(%rbp),%r12
0000000000006213	movq	0xf8(%rbp),%r13
0000000000006217	leave
0000000000006218	ret
0000000000006219	nop
__ZN22AppleIntelHDGraphicsFB8TrainFDIEiPNS_10CRTCParamsE:
000000000000621a	pushq	%rbp
000000000000621b	movq	%rsp,%rbp
000000000000621e	pushq	%r13
0000000000006220	pushq	%r12
0000000000006222	pushq	%rbx
0000000000006223	subq	$0x08,%rsp
0000000000006227	movq	%rdi,%r13
000000000000622a	movq	%rdx,%r12
000000000000622d	movl	0x00000194(%rdi),%eax
0000000000006233	xorl	%edx,%edx
0000000000006235	cmpl	%eax,%esi
0000000000006237	jae	0x00006245
0000000000006239	subl	%esi,%eax
000000000000623b	decl	%eax
000000000000623d	movq	0x00000198(%rdi,%rax,8),%rdx
0000000000006245	movl	0x00000210(%rdx),%ebx
000000000000624b	movq	0x00000098(%r13),%rax
0000000000006252	movl	0x000f000c(%rax),%edx
0000000000006258	movl	%edx,0x6c(%r12)
000000000000625d	movq	0x00000098(%r13),%rax
0000000000006264	movl	0x00060100(%rax),%eax
000000000000626a	movl	%eax,0x68(%r12)
000000000000626f	orb	$0x20,%dh
0000000000006272	movl	%edx,0x6c(%r12)
0000000000006277	movq	0x00000098(%r13),%rax
000000000000627e	movl	%edx,0x000f000c(%rax)
0000000000006284	movl	$0x00000019,%edi
0000000000006289	callq	0x0000628e
000000000000628e	movl	0x6c(%r12),%edx
0000000000006293	orl	$0x10,%edx
0000000000006296	movl	%edx,0x6c(%r12)
000000000000629b	movq	0x00000098(%r13),%rax
00000000000062a2	movl	%edx,0x000f000c(%rax)
00000000000062a8	movq	0x00000698(%r13),%rax
00000000000062af	movzbl	0x18(%rax),%eax
00000000000062b3	shll	$0x13,%eax
00000000000062b6	orl	0x6c(%r12),%eax
00000000000062bb	movl	%eax,0x6c(%r12)
00000000000062c0	movq	0x00000098(%r13),%rdx
00000000000062c7	movl	%eax,0x000f000c(%rdx)
00000000000062cd	movq	0x00000698(%r13),%rax
00000000000062d4	movzbl	0x18(%rax),%eax
00000000000062d8	shll	$0x13,%eax
00000000000062db	orl	0x68(%r12),%eax
00000000000062e0	movl	%eax,0x68(%r12)
00000000000062e5	movq	0x00000098(%r13),%rdx
00000000000062ec	movl	%eax,0x00060100(%rdx)
00000000000062f2	cmpl	$0x03,%ebx
00000000000062f5	jne	0x0000631c
00000000000062f7	movq	0x00000698(%r13),%rax
00000000000062fe	movzbl	0x15(%rax),%eax
0000000000006302	shll	$0x10,%eax
0000000000006305	orl	0x6c(%r12),%eax
000000000000630a	movl	%eax,0x6c(%r12)
000000000000630f	movq	0x00000098(%r13),%rdx
0000000000006316	movl	%eax,0x000f000c(%rdx)
000000000000631c	movl	0x6c(%r12),%edx
0000000000006321	orl	$0x80000000,%edx
0000000000006327	movl	%edx,0x6c(%r12)
000000000000632c	movq	0x00000098(%r13),%rax
0000000000006333	movl	%edx,0x000f000c(%rax)
0000000000006339	movl	0x68(%r12),%edx
000000000000633e	orl	$0x80000000,%edx
0000000000006344	movl	%edx,0x68(%r12)
0000000000006349	movq	0x00000098(%r13),%rax
0000000000006350	movl	%edx,0x00060100(%rax)
0000000000006356	movq	0x00000698(%r13),%rax
000000000000635d	movzbl	0x17(%rax),%edx
0000000000006361	shll	$0x16,%edx
0000000000006364	movzbl	0x16(%rax),%eax
0000000000006368	shll	$0x19,%eax
000000000000636b	orl	%eax,%edx
000000000000636d	orl	0x6c(%r12),%edx
0000000000006372	movl	%edx,0x6c(%r12)
0000000000006377	movq	0x00000098(%r13),%rax
000000000000637e	movl	%edx,0x000f000c(%rax)
0000000000006384	movl	0x68(%r12),%edx
0000000000006389	andl	$0xcfffffff,%edx
000000000000638f	movl	%edx,0x68(%r12)
0000000000006394	movq	0x00000098(%r13),%rax
000000000000639b	movl	%edx,0x00060100(%rax)
00000000000063a1	movl	0x6c(%r12),%edx
00000000000063a6	andl	$0xcfffffff,%edx
00000000000063ac	movl	%edx,0x6c(%r12)
00000000000063b1	movq	0x00000098(%r13),%rax
00000000000063b8	movl	%edx,0x000f000c(%rax)
00000000000063be	movl	$0x00000016,%edi
00000000000063c3	callq	0x000063c8
00000000000063c8	movl	$0x00000003,%ebx
00000000000063cd	movq	0x00000098(%r13),%rdx
00000000000063d4	movl	0x000f0014(%rdx),%eax
00000000000063da	testb	$0x01,%ah
00000000000063dd	jne	0x000063f4
00000000000063df	decl	%ebx
00000000000063e1	movl	$0x00000064,%edi
00000000000063e6	callq	0x000063eb
00000000000063eb	testl	%ebx,%ebx
00000000000063ed	jne	0x000063cd
00000000000063ef	jmp	0x000064d1
00000000000063f4	movl	0x000f0014(%rdx),%eax
00000000000063fa	andl	$0x00000100,%eax
00000000000063ff	movl	%eax,0x000f0014(%rdx)
0000000000006405	movl	$0x00000064,%edi
000000000000640a	callq	0x0000640f
000000000000640f	movl	0x68(%r12),%edx
0000000000006414	orl	$0x10000000,%edx
000000000000641a	movl	%edx,0x68(%r12)
000000000000641f	movq	0x00000098(%r13),%rax
0000000000006426	movl	%edx,0x00060100(%rax)
000000000000642c	movl	0x6c(%r12),%edx
0000000000006431	orl	$0x10000000,%edx
0000000000006437	movl	%edx,0x6c(%r12)
000000000000643c	movq	0x00000098(%r13),%rax
0000000000006443	movl	%edx,0x000f000c(%rax)
0000000000006449	movl	$0x00000016,%edi
000000000000644e	callq	0x00006453
0000000000006453	movl	$0x00000003,%ebx
0000000000006458	movq	0x00000098(%r13),%rdx
000000000000645f	movl	0x000f0014(%rdx),%eax
0000000000006465	testb	$0x02,%ah
0000000000006468	jne	0x0000647c
000000000000646a	decl	%ebx
000000000000646c	movl	$0x00000064,%edi
0000000000006471	callq	0x00006476
0000000000006476	testl	%ebx,%ebx
0000000000006478	jne	0x00006458
000000000000647a	jmp	0x000064d1
000000000000647c	movl	0x000f0014(%rdx),%eax
0000000000006482	andl	$0x00000200,%eax
0000000000006487	movl	%eax,0x000f0014(%rdx)
000000000000648d	movl	0x6c(%r12),%edx
0000000000006492	orl	$0x30000000,%edx
0000000000006498	movl	%edx,0x6c(%r12)
000000000000649d	movq	0x00000098(%r13),%rax
00000000000064a4	movl	%edx,0x000f000c(%rax)
00000000000064aa	movl	0x68(%r12),%edx
00000000000064af	orl	$0x30000000,%edx
00000000000064b5	movl	%edx,0x68(%r12)
00000000000064ba	movq	0x00000098(%r13),%rax
00000000000064c1	movl	%edx,0x00060100(%rax)
00000000000064c7	movl	$0x00000064,%edi
00000000000064cc	callq	0x000064d1
00000000000064d1	xorl	%eax,%eax
00000000000064d3	addq	$0x08,%rsp
00000000000064d7	popq	%rbx
00000000000064d8	popq	%r12
00000000000064da	popq	%r13
00000000000064dc	leave
00000000000064dd	ret
__ZN22AppleIntelHDGraphicsFB15hwWaitForVBlankEij:
00000000000064de	pushq	%rbp
00000000000064df	movq	%rsp,%rbp
00000000000064e2	pushq	%r14
00000000000064e4	pushq	%r13
00000000000064e6	pushq	%r12
00000000000064e8	pushq	%rbx
00000000000064e9	subq	$0x10,%rsp
00000000000064ed	movq	%rdi,%r14
00000000000064f0	movl	%esi,%ebx
00000000000064f2	movl	%edx,%r13d
00000000000064f5	leaq	0xd8(%rbp),%rdx
00000000000064f9	movl	$0x000f4240,%esi
00000000000064fe	movl	$0x00000014,%edi
0000000000006503	callq	0x00006508
0000000000006508	movl	0x00000194(%r14),%eax
000000000000650f	xorl	%r12d,%r12d
0000000000006512	cmpl	%eax,%ebx
0000000000006514	jae	0x00006522
0000000000006516	subl	%ebx,%eax
0000000000006518	decl	%eax
000000000000651a	movq	0x00000198(%r14,%rax,8),%r12
0000000000006522	movq	0x000004c0(%r12),%rbx
000000000000652a	leaq	0xd0(%rbp),%r14
000000000000652e	movq	0x000004c0(%r12),%rax
0000000000006536	cmpq	%rbx,%rax
0000000000006539	je	0x0000653f
000000000000653b	xorl	%eax,%eax
000000000000653d	jmp	0x00006563
000000000000653f	testl	%r13d,%r13d
0000000000006542	je	0x0000654c
0000000000006544	movl	%r13d,%edi
0000000000006547	callq	0x0000654c
000000000000654c	movq	%r14,%rdi
000000000000654f	callq	0x00006554
0000000000006554	movq	0xd8(%rbp),%rax
0000000000006558	cmpq	%rax,0xd0(%rbp)
000000000000655c	jb	0x0000652e
000000000000655e	movl	$0xe00002d6,%eax
0000000000006563	addq	$0x10,%rsp
0000000000006567	popq	%rbx
0000000000006568	popq	%r12
000000000000656a	popq	%r13
000000000000656c	popq	%r14
000000000000656e	leave
000000000000656f	ret
__ZN22AppleIntelHDGraphicsFB8hwFBCSetEb:
0000000000006570	pushq	%rbp
0000000000006571	movq	%rsp,%rbp
0000000000006574	subq	$0x60,%rsp
0000000000006578	movq	%rbx,0xd8(%rbp)
000000000000657c	movq	%r12,0xe0(%rbp)
0000000000006580	movq	%r13,0xe8(%rbp)
0000000000006584	movq	%r14,0xf0(%rbp)
0000000000006588	movq	%r15,0xf8(%rbp)
000000000000658c	movq	%rdi,%rbx
000000000000658f	movl	%esi,%r12d
0000000000006592	cmpb	$0x00,0x000006f0(%rdi)
0000000000006599	je	0x00006907
000000000000659f	cmpq	$0x00,0x000006d8(%rdi)
00000000000065a7	je	0x00006907
00000000000065ad	testb	%dh,%dh
00000000000065b0	je	0x000065d8
00000000000065b2	cmpl	$0x01,0x000006f4(%rdi)
00000000000065b9	sbbq	%rax,%rax
00000000000065bc	andq	$0xfffff000,%eax
00000000000065c2	addq	$0x00071180,%eax
00000000000065c8	addq	0x00000098(%rdi),%rax
00000000000065cf	movl	(%rax),%eax
00000000000065d1	movl	%eax,%r12d
00000000000065d4	shrl	$0x1f,%r12d
00000000000065d8	cmpb	%r12b,0x000006f1(%rbx)
00000000000065df	je	0x0000690e
00000000000065e5	movq	0x00000098(%rbx),%rcx
00000000000065ec	addq	$0x00042000,%rcx
00000000000065f3	movl	(%rcx),%eax
00000000000065f5	movl	%eax,%edx
00000000000065f7	orl	$0x00600000,%edx
00000000000065fd	cmpl	%edx,%eax
00000000000065ff	je	0x00006603
0000000000006601	movl	%edx,(%rcx)
0000000000006603	movq	0x00000098(%rbx),%rcx
000000000000660a	addq	$0x00042004,%rcx
0000000000006611	movl	(%rcx),%eax
0000000000006613	movl	%eax,%edx
0000000000006615	orl	$0x00400000,%edx
000000000000661b	cmpl	%edx,%eax
000000000000661d	je	0x00006621
000000000000661f	movl	%edx,(%rcx)
0000000000006621	movq	0x00000098(%rbx),%rcx
0000000000006628	addq	$0x00042020,%rcx
000000000000662f	movl	(%rcx),%eax
0000000000006631	movl	%eax,%edx
0000000000006633	orb	$0x80,%dl
0000000000006636	cmpl	%edx,%eax
0000000000006638	je	0x0000663c
000000000000663a	movl	%edx,(%rcx)
000000000000663c	movq	0x00000710(%rbx),%rdx
0000000000006643	testq	%rdx,%rdx
0000000000006646	je	0x0000666a
0000000000006648	movq	0x000006d8(%rbx),%rdi
000000000000664f	movq	(%rdi),%rax
0000000000006652	movq	0x00000718(%rbx),%rsi
0000000000006659	call	*0x00000160(%rax)
000000000000665f	movq	$0x00000000,0x00000710(%rbx)
000000000000666a	testb	%r12b,%r12b
000000000000666d	je	0x000066b3
000000000000666f	movq	$0x00000000,0x00000718(%rbx)
000000000000667a	movq	0x000006d8(%rbx),%rdi
0000000000006681	movq	(%rdi),%rax
0000000000006684	leaq	0x00000718(%rbx),%rdx
000000000000668b	movl	$0x00001000,%ecx
0000000000006690	movl	$0x00800000,%esi
0000000000006695	call	*0x00000150(%rax)
000000000000669b	movl	$0xe00002bc,%edx
00000000000066a0	testb	%al,%al
00000000000066a2	je	0x00006910
00000000000066a8	movq	$0x00800000,0x00000710(%rbx)
00000000000066b3	movb	%r12b,0x000006f1(%rbx)
00000000000066ba	movq	0x00000718(%rbx),%r15
00000000000066c1	movq	0x000006e0(%rbx),%rax
00000000000066c8	movq	%rax,0xb0(%rbp)
00000000000066cc	movl	0x000006f4(%rbx),%ecx
00000000000066d2	movl	0x000006fc(%rbx),%eax
00000000000066d8	movl	$0x00000001,%edx
00000000000066dd	cmpl	$0x02,%eax
00000000000066e0	je	0x000066ec
00000000000066e2	xorl	%edx,%edx
00000000000066e4	cmpl	$0x04,%eax
00000000000066e7	sete	%dl
00000000000066ea	addl	%edx,%edx
00000000000066ec	movl	%ecx,%r13d
00000000000066ef	orl	$0x20000000,%r13d
00000000000066f6	movl	%ecx,%eax
00000000000066f8	shll	$0x1e,%eax
00000000000066fb	orl	%eax,%r13d
00000000000066fe	shll	$0x06,%edx
0000000000006701	orl	%edx,%r13d
0000000000006704	xorl	%r14d,%r14d
0000000000006707	cmpb	$0x00,0x00000700(%rbx)
000000000000670e	je	0x00006733
0000000000006710	movl	0x00000708(%rbx),%r14d
0000000000006717	andl	$0x3f,%r14d
000000000000671b	orl	$0x08000000,%r14d
0000000000006722	movl	0x00000704(%rbx),%eax
0000000000006728	andl	$0x000007ff,%eax
000000000000672d	shll	$0x10,%eax
0000000000006730	orl	%eax,%r14d
0000000000006733	cmpl	$0x01,%ecx
0000000000006736	sbbq	%rax,%rax
0000000000006739	andq	$0xfffff000,%eax
000000000000673f	addq	$0x0007119c,%eax
0000000000006745	addq	0x00000098(%rbx),%rax
000000000000674c	movl	(%rax),%eax
000000000000674e	andl	$0xfffff000,%eax
0000000000006753	movl	%eax,0xcc(%rbp)
0000000000006756	movq	0x00000098(%rbx),%rdx
000000000000675d	movl	0x00043208(%rdx),%eax
0000000000006763	xorl	%ecx,%ecx
0000000000006765	movl	$0x00000000,0xbc(%rbp)
000000000000676c	testl	%eax,%eax
000000000000676e	jns	0x000067d1
0000000000006770	cmpl	$0x01,0x000006f4(%rbx)
0000000000006777	sbbq	%rax,%rax
000000000000677a	andq	$0xfc,%rax
000000000000677e	leaq	0x00045104(%rax,%rdx),%rax
0000000000006786	movl	(%rax),%eax
0000000000006788	movl	%eax,0xbc(%rbp)
000000000000678b	movl	0x000006f8(%rbx),%esi
0000000000006791	xorl	%edx,%edx
0000000000006793	movq	%rbx,%rdi
0000000000006796	callq	0x1000064de
000000000000679b	cmpl	$0x01,0x000006f4(%rbx)
00000000000067a2	sbbq	%rax,%rax
00000000000067a5	andq	$0xfc,%rax
00000000000067a9	addq	$0x00045104,%eax
00000000000067af	addq	0x00000098(%rbx),%rax
00000000000067b6	movl	$0x00000000,(%rax)
00000000000067bc	movl	0x000006f8(%rbx),%esi
00000000000067c2	xorl	%edx,%edx
00000000000067c4	movq	%rbx,%rdi
00000000000067c7	callq	0x1000064de
00000000000067cc	movl	$0x00000001,%ecx
00000000000067d1	movq	0x00000098(%rbx),%rax
00000000000067d8	addq	$0x00043208,%eax
00000000000067de	movl	%r13d,(%rax)
00000000000067e1	movq	0x00000098(%rbx),%rax
00000000000067e8	addq	$0x00043224,%eax
00000000000067ee	movl	$0x00000000,(%rax)
00000000000067f4	movq	0x00000098(%rbx),%rdx
00000000000067fb	addq	$0x00002128,%rdx
0000000000006802	movl	0xcc(%rbp),%eax
0000000000006805	movl	%eax,(%rdx)
0000000000006807	testb	%cl,%cl
0000000000006809	je	0x0000684b
000000000000680b	movl	0x000006f8(%rbx),%esi
0000000000006811	xorl	%edx,%edx
0000000000006813	movq	%rbx,%rdi
0000000000006816	callq	0x1000064de
000000000000681b	cmpl	$0x01,0x000006f4(%rbx)
0000000000006822	sbbq	%rax,%rax
0000000000006825	andq	$0xfc,%rax
0000000000006829	addq	$0x00045104,%eax
000000000000682f	addq	0x00000098(%rbx),%rax
0000000000006836	movl	0xbc(%rbp),%edx
0000000000006839	movl	%edx,(%rax)
000000000000683b	movl	0x000006f8(%rbx),%esi
0000000000006841	xorl	%edx,%edx
0000000000006843	movq	%rbx,%rdi
0000000000006846	callq	0x1000064de
000000000000684b	testb	%r12b,%r12b
000000000000684e	je	0x0000690e
0000000000006854	movq	0x00000098(%rbx),%rdx
000000000000685b	addq	$0x00043200,%rdx
0000000000006862	movl	%r15d,%eax
0000000000006865	subl	0xb0(%rbp),%eax
0000000000006868	movl	%eax,(%rdx)
000000000000686a	movq	0x00000098(%rbx),%rax
0000000000006871	addq	$0x0004320c,%eax
0000000000006877	movl	%r14d,(%rax)
000000000000687a	movq	0x00000098(%rbx),%rax
0000000000006881	addq	$0x00043218,%eax
0000000000006887	movl	$0x00000000,(%rax)
000000000000688d	movl	0xcc(%rbp),%edx
0000000000006890	orl	$0x01,%edx
0000000000006893	movl	%edx,0xcc(%rbp)
0000000000006896	movq	0x00000098(%rbx),%rax
000000000000689d	addq	$0x00002128,%eax
00000000000068a3	movl	%edx,(%rax)
00000000000068a5	movq	0x000006b8(%rbx),%rdi
00000000000068ac	testq	%rdi,%rdi
00000000000068af	je	0x000068db
00000000000068b1	movq	(%rdi),%rax
00000000000068b4	movq	0x000006b8(%rax),%rax
00000000000068bb	movq	0x00000730(%rbx),%rsi
00000000000068c2	leaq	0xcc(%rbp),%rcx
00000000000068c6	movq	$0x00000000,(%rsp)
00000000000068ce	xorl	%r9d,%r9d
00000000000068d1	xorl	%r8d,%r8d
00000000000068d4	movl	$0x00000001,%edx
00000000000068d9	call	*%rax
00000000000068db	movq	0x00000098(%rbx),%rax
00000000000068e2	addq	$0x00043224,%eax
00000000000068e8	movl	$0x80000000,(%rax)
00000000000068ee	orl	$0x80000000,%r13d
00000000000068f5	movq	0x00000098(%rbx),%rax
00000000000068fc	addq	$0x00043208,%eax
0000000000006902	movl	%r13d,(%rax)
0000000000006905	jmp	0x0000690e
0000000000006907	movl	$0xe00002c7,%edx
000000000000690c	jmp	0x00006910
000000000000690e	xorl	%edx,%edx
0000000000006910	movl	%edx,%eax
0000000000006912	movq	0xd8(%rbp),%rbx
0000000000006916	movq	0xe0(%rbp),%r12
000000000000691a	movq	0xe8(%rbp),%r13
000000000000691e	movq	0xf0(%rbp),%r14
0000000000006922	movq	0xf8(%rbp),%r15
0000000000006926	leave
0000000000006927	ret
__ZN22AppleIntelHDGraphicsFB13hwPostModeSetEv:
0000000000006928	pushq	%rbp
0000000000006929	movq	%rsp,%rbp
000000000000692c	pushq	%rbx
000000000000692d	subq	$0x08,%rsp
0000000000006931	movq	%rdi,%rbx
0000000000006934	movl	$0x00000001,%esi
0000000000006939	callq	0x100002c00
000000000000693e	movl	$0x00000001,%esi
0000000000006943	movq	%rbx,%rdi
0000000000006946	addq	$0x08,%rsp
000000000000694a	popq	%rbx
000000000000694b	leave
000000000000694c	jmp	0x100006570
0000000000006951	nop
__ZN22AppleIntelHDGraphicsFB12hwPreModeSetEv:
0000000000006952	pushq	%rbp
0000000000006953	movq	%rsp,%rbp
0000000000006956	pushq	%rbx
0000000000006957	subq	$0x08,%rsp
000000000000695b	movq	%rdi,%rbx
000000000000695e	xorl	%esi,%esi
0000000000006960	callq	0x100006570
0000000000006965	xorl	%esi,%esi
0000000000006967	movq	%rbx,%rdi
000000000000696a	addq	$0x08,%rsp
000000000000696e	popq	%rbx
000000000000696f	leave
0000000000006970	jmp	0x100002c00
0000000000006975	nop
__ZN22AppleIntelHDGraphicsFB14DisableDisplayEi:
0000000000006976	pushq	%rbp
0000000000006977	movq	%rsp,%rbp
000000000000697a	pushq	%r13
000000000000697c	pushq	%r12
000000000000697e	pushq	%rbx
000000000000697f	subq	$0x08,%rsp
0000000000006983	movq	%rdi,%r12
0000000000006986	movl	%esi,%r13d
0000000000006989	movl	0x00000194(%rdi),%eax
000000000000698f	cmpl	%eax,%esi
0000000000006991	jae	0x00006bf4
0000000000006997	subl	%esi,%eax
0000000000006999	decl	%eax
000000000000699b	cmpq	$0x00,0x00000198(%rdi,%rax,8)
00000000000069a4	je	0x00006bf4
00000000000069aa	xorl	%esi,%esi
00000000000069ac	callq	0x100006570
00000000000069b1	movq	0x00000098(%r12),%rdx
00000000000069b9	movl	0x00070180(%rdx),%eax
00000000000069bf	andl	$0x7fffffff,%eax
00000000000069c4	movl	%eax,0x00070180(%rdx)
00000000000069ca	movq	0x00000098(%r12),%rdx
00000000000069d2	movl	0x0007019c(%rdx),%eax
00000000000069d8	movl	%eax,0x0007019c(%rdx)
00000000000069de	movl	$0x000003e8,%edx
00000000000069e3	movl	%r13d,%esi
00000000000069e6	movq	%r12,%rdi
00000000000069e9	callq	0x1000064de
00000000000069ee	movl	0x00000600(%r12),%r9d
00000000000069f6	testl	%r9d,%r9d
00000000000069f9	je	0x00006a4f
00000000000069fb	movzbl	0x00000190(%rsp),%eax
0000000000006a04	cmpl	%eax,%r13d
0000000000006a07	jne	0x00006a4f
0000000000006a09	movl	0x000003b8(%r12),%edx
0000000000006a11	andl	$0xfe,%edx
0000000000006a14	movl	%edx,0x000003b8(%r12)
0000000000006a1c	movq	0x00000098(%r12),%rax
0000000000006a24	movl	%edx,0x000c7204(%rax)
0000000000006a2a	xorl	%ebx,%ebx
0000000000006a2c	movq	0x00000098(%r12),%rdx
0000000000006a34	movl	0x000c7200(%rdx),%eax
0000000000006a3a	testl	%eax,%eax
0000000000006a3c	je	0x00006a57
0000000000006a3e	movl	$0x0000000a,%edi
0000000000006a43	callq	0x00006a48
0000000000006a48	incl	%ebx
0000000000006a4a	cmpb	$0x14,%bl
0000000000006a4d	jne	0x00006a2c
0000000000006a4f	movq	0x00000098(%r12),%rdx
0000000000006a57	movl	0x00070008(%rdx),%eax
0000000000006a5d	andl	$0x7fffffff,%eax
0000000000006a62	movl	%eax,0x00070008(%rdx)
0000000000006a68	xorl	%ebx,%ebx
0000000000006a6a	movq	0x00000098(%r12),%rdx
0000000000006a72	movl	0x00070008(%rdx),%eax
0000000000006a78	testl	$0x40000000,%eax
0000000000006a7d	je	0x00006a98
0000000000006a7f	movl	$0x00000002,%edi
0000000000006a84	callq	0x00006a89
0000000000006a89	incl	%ebx
0000000000006a8b	cmpb	$0x64,%bl
0000000000006a8e	jne	0x00006a6a
0000000000006a90	movq	0x00000098(%r12),%rdx
0000000000006a98	movl	0x00060100(%rdx),%eax
0000000000006a9e	andl	$0x7fffffff,%eax
0000000000006aa3	movl	%eax,0x00060100(%rdx)
0000000000006aa9	movq	0x00000098(%r12),%rdx
0000000000006ab1	movl	0x000f000c(%rdx),%eax
0000000000006ab7	andl	$0x7fffffff,%eax
0000000000006abc	movl	%eax,0x000f000c(%rdx)
0000000000006ac2	movl	$0x000003e8,%edx
0000000000006ac7	movl	%r13d,%esi
0000000000006aca	movq	%r12,%rdi
0000000000006acd	callq	0x1000064de
0000000000006ad2	movq	0x00000098(%r12),%rdx
0000000000006ada	movl	0x00060100(%rdx),%eax
0000000000006ae0	andl	$0xcfffffff,%eax
0000000000006ae5	movl	%eax,0x00060100(%rdx)
0000000000006aeb	movq	0x00000098(%r12),%rdx
0000000000006af3	movl	0x000f000c(%rdx),%eax
0000000000006af9	andl	$0xcfffffff,%eax
0000000000006afe	movl	%eax,0x000f000c(%rdx)
0000000000006b04	movl	0x00000600(%r12),%r8d
0000000000006b0c	testl	%r8d,%r8d
0000000000006b0f	je	0x00006b3a
0000000000006b11	movzbl	0x00000190(%rsp),%eax
0000000000006b1a	cmpl	%eax,%r13d
0000000000006b1d	jne	0x00006b3a
0000000000006b1f	movq	0x00000098(%r12),%rdx
0000000000006b27	movl	0x000e1180(%rdx),%eax
0000000000006b2d	andl	$0x7fffffff,%eax
0000000000006b32	movl	%eax,0x000e1180(%rdx)
0000000000006b38	jmp	0x00006b53
0000000000006b3a	movq	0x00000098(%r12),%rdx
0000000000006b42	movl	0x000e1100(%rdx),%eax
0000000000006b48	andl	$0x7fffffff,%eax
0000000000006b4d	movl	%eax,0x000e1100(%rdx)
0000000000006b53	movq	0x00000098(%r12),%rdx
0000000000006b5b	movl	0x000f0008(%rdx),%eax
0000000000006b61	andl	$0x7fffffff,%eax
0000000000006b66	movl	%eax,0x000f0008(%rdx)
0000000000006b6c	xorl	%ebx,%ebx
0000000000006b6e	movq	0x00000098(%r12),%rdx
0000000000006b76	movl	0x000f0008(%rdx),%eax
0000000000006b7c	testl	$0x40000000,%eax
0000000000006b81	je	0x00006b9c
0000000000006b83	movl	$0x00000002,%edi
0000000000006b88	callq	0x00006b8d
0000000000006b8d	incl	%ebx
0000000000006b8f	cmpb	$0x64,%bl
0000000000006b92	jne	0x00006b6e
0000000000006b94	movq	0x00000098(%r12),%rdx
0000000000006b9c	movl	0x000f000c(%rdx),%eax
0000000000006ba2	andl	$0xef,%eax
0000000000006ba5	movl	%eax,0x000f000c(%rdx)
0000000000006bab	movq	0x00000098(%r12),%rdx
0000000000006bb3	movl	0x00068080(%rdx),%eax
0000000000006bb9	andl	$0x7fffffff,%eax
0000000000006bbe	movl	%eax,0x00068080(%rdx)
0000000000006bc4	movq	0x00000098(%r12),%rdx
0000000000006bcc	movl	0x000c6014(%rdx),%eax
0000000000006bd2	andl	$0x7fffffff,%eax
0000000000006bd7	movl	%eax,0x000c6014(%rdx)
0000000000006bdd	movq	0x00000098(%r12),%rdx
0000000000006be5	movl	0x000f000c(%rdx),%eax
0000000000006beb	andb	$0xdf,%ah
0000000000006bee	movl	%eax,0x000f000c(%rdx)
0000000000006bf4	xorl	%eax,%eax
0000000000006bf6	addq	$0x08,%rsp
0000000000006bfa	popq	%rbx
0000000000006bfb	popq	%r12
0000000000006bfd	popq	%r13
0000000000006bff	leave
0000000000006c00	ret
0000000000006c01	nop
__ZN22AppleIntelHDGraphicsFB14hwCleanupStateEb:
0000000000006c02	pushq	%rbp
0000000000006c03	movq	%rsp,%rbp
0000000000006c06	subq	$0x30,%rsp
0000000000006c0a	movq	%rbx,0xd8(%rbp)
0000000000006c0e	movq	%r12,0xe0(%rbp)
0000000000006c12	movq	%r13,0xe8(%rbp)
0000000000006c16	movq	%r14,0xf0(%rbp)
0000000000006c1a	movq	%r15,0xf8(%rbp)
0000000000006c1e	movq	%rdi,%rbx
0000000000006c21	movl	%esi,%r13d
0000000000006c24	movl	0x00000194(%rdi),%edx
0000000000006c2a	testl	%edx,%edx
0000000000006c2c	je	0x00006d0a
0000000000006c32	leal	0xff(%rdx),%eax
0000000000006c35	movq	0x00000198(%rdi,%rax,8),%rax
0000000000006c3d	cmpb	$0x00,0x0000020d(%rax)
0000000000006c44	setne	%r12b
0000000000006c48	cmpl	$0x01,%edx
0000000000006c4b	jle	0x00006c6d
0000000000006c4d	ja	0x00006c53
0000000000006c4f	xorl	%eax,%eax
0000000000006c51	jmp	0x00006c5e
0000000000006c53	leal	0xfe(%rdx),%eax
0000000000006c56	movq	0x00000198(%rdi,%rax,8),%rax
0000000000006c5e	movl	$0x00000001,%r14d
0000000000006c64	cmpb	$0x00,0x0000020d(%rax)
0000000000006c6b	jne	0x00006c70
0000000000006c6d	xorl	%r14d,%r14d
0000000000006c70	movq	0x0000e159(%rip),%r15
0000000000006c77	movl	(%r15),%r11d
0000000000006c7a	testl	%r11d,%r11d
0000000000006c7d	je	0x00006c9b
0000000000006c7f	movzbl	%dh,%ecx
0000000000006c83	movzbl	%ah,%edx
0000000000006c87	movzbl	%ch,%esi
0000000000006c8b	xorl	%r9d,%r9d
0000000000006c8e	xorl	%r8d,%r8d
0000000000006c91	movl	$0x061284c5,%edi
0000000000006c96	callq	0x00006c9b
0000000000006c9b	testb	%r13b,%r13b
0000000000006c9e	je	0x00006ca5
0000000000006ca0	xorl	%r14d,%r14d
0000000000006ca3	jmp	0x00006caa
0000000000006ca5	testb	%r12b,%r12b
0000000000006ca8	jne	0x00006cbe
0000000000006caa	xorl	%esi,%esi
0000000000006cac	movq	%rbx,%rdi
0000000000006caf	callq	0x100006976
0000000000006cb4	xorl	%esi,%esi
0000000000006cb6	movq	%rbx,%rdi
0000000000006cb9	callq	0x100001c3a
0000000000006cbe	testb	%r14b,%r14b
0000000000006cc1	jne	0x00006cdd
0000000000006cc3	movl	$0x00000001,%esi
0000000000006cc8	movq	%rbx,%rdi
0000000000006ccb	callq	0x100006976
0000000000006cd0	movl	$0x00000001,%esi
0000000000006cd5	movq	%rbx,%rdi
0000000000006cd8	callq	0x100001c3a
0000000000006cdd	testb	%r13b,%r13b
0000000000006ce0	je	0x00006cea
0000000000006ce2	movq	%rbx,%rdi
0000000000006ce5	callq	0x100002f9a
0000000000006cea	movl	(%r15),%r10d
0000000000006ced	testl	%r10d,%r10d
0000000000006cf0	je	0x00006d1b
0000000000006cf2	xorl	%r9d,%r9d
0000000000006cf5	xorl	%r8d,%r8d
0000000000006cf8	xorl	%ecx,%ecx
0000000000006cfa	xorl	%edx,%edx
0000000000006cfc	xorl	%esi,%esi
0000000000006cfe	movl	$0x061284c6,%edi
0000000000006d03	callq	0x00006d08
0000000000006d08	jmp	0x00006d1b
0000000000006d0a	cmpb	$0x00,0x0000020d
0000000000006d12	setne	%r12b
0000000000006d16	jmp	0x100006c6d
0000000000006d1b	xorl	%eax,%eax
0000000000006d1d	movq	0xd8(%rbp),%rbx
0000000000006d21	movq	0xe0(%rbp),%r12
0000000000006d25	movq	0xe8(%rbp),%r13
0000000000006d29	movq	0xf0(%rbp),%r14
0000000000006d2d	movq	0xf8(%rbp),%r15
0000000000006d31	leave
0000000000006d32	ret
0000000000006d33	nop
__ZN21AppleIntelFramebuffer20processConnectChangeEPm:
0000000000006d34	pushq	%rbp
0000000000006d35	movq	%rsp,%rbp
0000000000006d38	pushq	%rbx
0000000000006d39	subq	$0x08,%rsp
0000000000006d3d	movq	%rdi,%rbx
0000000000006d40	movb	$0x00,0x0000020e(%rdi)
0000000000006d47	cmpb	$0x00,0x0000020d(%rdi)
0000000000006d4e	jne	0x00006d5e
0000000000006d50	movq	0x000001d0(%rdi),%rdi
0000000000006d57	xorl	%esi,%esi
0000000000006d59	callq	0x100006c02
0000000000006d5e	movq	(%rbx),%rax
0000000000006d61	xorl	%esi,%esi
0000000000006d63	movq	%rbx,%rdi
0000000000006d66	call	*0x00000a48(%rax)
0000000000006d6c	movq	(%rbx),%rax
0000000000006d6f	leaq	0x0000a502(%rip),%rsi
0000000000006d76	movq	%rbx,%rdi
0000000000006d79	call	*0x000002a0(%rax)
0000000000006d7f	cmpb	$0x00,0x0000020d(%rbx)
0000000000006d86	jne	0x00006d9f
0000000000006d88	movq	(%rbx),%rax
0000000000006d8b	movl	0x000001e0(%rbx),%edx
0000000000006d91	movl	$0x00000100,%esi
0000000000006d96	movq	%rbx,%rdi
0000000000006d99	call	*0x000009f8(%rax)
0000000000006d9f	xorl	%eax,%eax
0000000000006da1	addq	$0x08,%rsp
0000000000006da5	popq	%rbx
0000000000006da6	leave
0000000000006da7	ret
__ZN22AppleIntelHDGraphicsFB19hwSetupCursorMemoryEv:
0000000000006da8	pushq	%rbp
0000000000006da9	movq	%rsp,%rbp
0000000000006dac	pushq	%r12
0000000000006dae	pushq	%rbx
0000000000006daf	movq	%rdi,%rbx
0000000000006db2	cmpq	$0x00,0x00000120(%rdi)
0000000000006dba	jne	0x00006e91
0000000000006dc0	movq	0x0000e041(%rip),%r12
0000000000006dc7	movq	(%r12),%rdx
0000000000006dcb	movl	$0x00100000,%esi
0000000000006dd0	movl	$0x00000010,%edi
0000000000006dd5	callq	0x00006dda
0000000000006dda	movq	%rax,0x00000120(%rbx)
0000000000006de1	testq	%rax,%rax
0000000000006de4	jne	0x00006dfc
0000000000006de6	leaq	0x0000a496(%rip),%rdi
0000000000006ded	callq	0x00006df2
0000000000006df2	movl	$0xe00002bd,%eax
0000000000006df7	jmp	0x00006e93
0000000000006dfc	movq	0x000000a8(%rbx),%rax
0000000000006e03	movl	%eax,%edx
0000000000006e05	movl	%eax,0x00000200(%rbx)
0000000000006e0b	leal	0x00040000(%rax),%eax
0000000000006e11	movl	%eax,0x00000204(%rbx)
0000000000006e17	cmpl	$0x01,0x00000194(%rbx)
0000000000006e1e	jle	0x00006e38
0000000000006e20	leal	0x00080000(%rdx),%eax
0000000000006e26	movl	%eax,0x000002f0(%rbx)
0000000000006e2c	leal	0x000c0000(%rdx),%eax
0000000000006e32	movl	%eax,0x000002f4(%rbx)
0000000000006e38	movq	0x00000120(%rbx),%rsi
0000000000006e3f	xorl	%edx,%edx
0000000000006e41	movq	%rbx,%rdi
0000000000006e44	callq	0x100001750
0000000000006e49	movq	%rax,%rcx
0000000000006e4c	xorl	%esi,%esi
0000000000006e4e	movl	%ecx,%edx
0000000000006e50	andl	$0xfffff000,%edx
0000000000006e56	orl	$0x01,%edx
0000000000006e59	movq	%rcx,%rax
0000000000006e5c	shrq	$0x1c,%rax
0000000000006e60	andl	$0x000000f0,%eax
0000000000006e65	orl	%eax,%edx
0000000000006e67	movq	%rsi,%rax
0000000000006e6a	addq	0x000000a8(%rbx),%rax
0000000000006e71	shrq	$0x0a,%rax
0000000000006e75	addq	0x000000c8(%rbx),%rax
0000000000006e7c	movl	%edx,(%rax)
0000000000006e7e	movq	(%r12),%rax
0000000000006e82	addq	%rax,%rcx
0000000000006e85	addq	%rax,%rsi
0000000000006e88	cmpq	$0x000fffff,%rsi
0000000000006e8f	jbe	0x00006e4e
0000000000006e91	xorl	%eax,%eax
0000000000006e93	popq	%rbx
0000000000006e94	popq	%r12
0000000000006e96	leave
0000000000006e97	ret
__ZN22AppleIntelHDGraphicsFB13hwSetupMemoryEi:
0000000000006e98	pushq	%rbp
0000000000006e99	movq	%rsp,%rbp
0000000000006e9c	pushq	%r15
0000000000006e9e	pushq	%r14
0000000000006ea0	pushq	%r13
0000000000006ea2	pushq	%r12
0000000000006ea4	pushq	%rbx
0000000000006ea5	subq	$0x48,%rsp
0000000000006ea9	movq	%rdi,%r14
0000000000006eac	movl	%esi,%ebx
0000000000006eae	movslq	%esi,%rax
0000000000006eb1	movq	%rax,0x98(%rbp)
0000000000006eb5	movq	0x0000df14(%rip),%rdx
0000000000006ebc	movl	(%rdx),%r11d
0000000000006ebf	testl	%r11d,%r11d
0000000000006ec2	je	0x00006edb
0000000000006ec4	xorl	%r9d,%r9d
0000000000006ec7	xorl	%r8d,%r8d
0000000000006eca	xorl	%ecx,%ecx
0000000000006ecc	xorl	%edx,%edx
0000000000006ece	movq	%rax,%rsi
0000000000006ed1	movl	$0x06128441,%edi
0000000000006ed6	callq	0x00006edb
0000000000006edb	imulq	$0x000000f0,0x98(%rbp),%rax
0000000000006ee3	movl	0x000001f0(%r14,%rax),%r12d
0000000000006eeb	testl	%r12d,%r12d
0000000000006eee	movl	$0x00002000,%eax
0000000000006ef3	cmovel	%eax,%r12d
0000000000006ef7	movl	%ebx,%r9d
0000000000006efa	movl	0x00000194(%r14),%edx
0000000000006f01	xorl	%eax,%eax
0000000000006f03	cmpl	%edx,%ebx
0000000000006f05	jae	0x00006f15
0000000000006f07	movl	%edx,%eax
0000000000006f09	subl	%ebx,%eax
0000000000006f0b	decl	%eax
0000000000006f0d	movq	0x00000198(%r14,%rax,8),%rax
0000000000006f15	cmpb	$0x00,0x00000490(%rax)
0000000000006f1c	je	0x00006f8f
0000000000006f1e	testl	%ebx,%ebx
0000000000006f20	je	0x00006f5e
0000000000006f22	imulq	$0x000000f0,0x98(%rbp),%rdx
0000000000006f2a	addq	%r14,%rdx
0000000000006f2d	movl	$0x02000000,0x000001f4(%rdx)
0000000000006f37	addq	$0x00000200,%rdx
0000000000006f3e	movl	$0x03fff000,0x08(%rdx)
0000000000006f45	shrl	$0x07,%r12d
0000000000006f49	leal	0xfffffffc(,%r12,4),%eax
0000000000006f51	orl	$0x02000001,%eax
0000000000006f56	movl	%eax,0x0c(%rdx)
0000000000006f59	jmp	0x000075a1
0000000000006f5e	movl	$0x00000000,0x000001f4(%r14)
0000000000006f69	movl	$0x00fff000,0x00000208(%r14)
0000000000006f74	shrl	$0x07,%r12d
0000000000006f78	leal	0xfffffffc(,%r12,4),%eax
0000000000006f80	orl	$0x01,%eax
0000000000006f83	movl	%eax,0x0000020c(%r14)
0000000000006f8a	jmp	0x000075a1
0000000000006f8f	imulq	$0x000000f0,0x98(%rbp),%rax
0000000000006f97	leaq	0x000001a0(%r14,%rax),%rax
0000000000006f9f	movl	0x14(%rax),%esi
0000000000006fa2	movzwl	0x08(%rax),%eax
0000000000006fa6	leal	0x01(%rax),%ecx
0000000000006fa9	cmpb	$0x00,0x00000164(%r14)
0000000000006fb1	je	0x00006ffb
0000000000006fb3	xorl	%eax,%eax
0000000000006fb5	cmpl	%edx,%ebx
0000000000006fb7	jae	0x00006fc7
0000000000006fb9	movl	%edx,%eax
0000000000006fbb	subl	%ebx,%eax
0000000000006fbd	decl	%eax
0000000000006fbf	movq	0x00000198(%r14,%rax,8),%rax
0000000000006fc7	cmpb	$0x00,0x0000020d(%rax)
0000000000006fce	je	0x00006ffb
0000000000006fd0	movl	%ebx,%eax
0000000000006fd2	xorl	$0x01,%eax
0000000000006fd5	andl	$0x01,%eax
0000000000006fd8	xorl	%edi,%edi
0000000000006fda	cmpl	%edx,%eax
0000000000006fdc	jae	0x00006fee
0000000000006fde	movl	%edx,%edi
0000000000006fe0	subl	%eax,%edi
0000000000006fe2	movl	%edi,%eax
0000000000006fe4	decl	%eax
0000000000006fe6	movq	0x00000198(%r14,%rax,8),%rdi
0000000000006fee	cmpb	$0x00,0x0000020d(%rdi)
0000000000006ff5	setne	%r8b
0000000000006ff9	jmp	0x00006ffe
0000000000006ffb	xorl	%r8d,%r8d
0000000000006ffe	movzwl	%si,%eax
0000000000007001	leaq	0x08(%rax),%rsi
0000000000007005	andq	$0xf8,%rsi
0000000000007009	testl	%ebx,%ebx
000000000000700b	je	0x00007027
000000000000700d	testb	%r8b,%r8b
0000000000007010	je	0x00007038
0000000000007012	movl	%ebx,%eax
0000000000007014	xorl	$0x01,%eax
0000000000007017	andl	$0x01,%eax
000000000000701a	movl	$0x00000000,0xac(%rbp)
0000000000007021	cmpl	%edx,%eax
0000000000007023	jb	0x00007048
0000000000007025	jmp	0x00007041
0000000000007027	testb	%r8b,%r8b
000000000000702a	je	0x00007041
000000000000702c	movl	$0x02000000,0xac(%rbp)
0000000000007033	cmpl	%edx,%r9d
0000000000007036	jb	0x00007048
0000000000007038	movl	$0x02000000,0xac(%rbp)
000000000000703f	jmp	0x00007048
0000000000007041	movl	$0x00000000,0xac(%rbp)
0000000000007048	movl	0xac(%rbp),%edx
000000000000704b	orl	$0x01,%edx
000000000000704e	imulq	$0x000000f0,0x98(%rbp),%rax
0000000000007056	addq	%r14,%rax
0000000000007059	movl	%edx,0x0000020c(%rax)
000000000000705f	movl	0xac(%rbp),%edx
0000000000007062	movl	%edx,0x000001f4(%rax)
0000000000007068	movl	0x000001e4(%rax),%edx
000000000000706e	shrl	$0x1a,%edx
0000000000007071	andl	$0x0f,%edx
0000000000007074	cmpl	$0x05,%edx
0000000000007077	jbe	0x0000707e
0000000000007079	shll	$0x02,%ecx
000000000000707c	jmp	0x00007087
000000000000707e	leal	(%rcx,%rcx),%eax
0000000000007081	cmpl	$0x04,%edx
0000000000007084	cmovael	%eax,%ecx
0000000000007087	leal	0x000001ff(%rcx),%r15d
000000000000708e	andl	$0xfffffe00,%r15d
0000000000007095	movl	%r12d,%edx
0000000000007098	imulq	%rsi,%rdx
000000000000709c	movl	%r15d,%r9d
000000000000709f	xorl	%ecx,%ecx
00000000000070a1	movl	%ecx,%edi
00000000000070a3	movl	$0x00100000,%eax
00000000000070a8	shll	%cl,%eax
00000000000070aa	incq	%rcx
00000000000070ad	cmpq	%rax,%rdx
00000000000070b0	ja	0x000070a1
00000000000070b2	leal	0x14(%rdi),%ecx
00000000000070b5	movl	$0x00000001,%eax
00000000000070ba	shll	%cl,%eax
00000000000070bc	movl	0xac(%rbp),%edi
00000000000070bf	leal	0xff(%rdi,%rax),%eax
00000000000070c3	andl	$0xfffff000,%eax
00000000000070c8	imulq	$0x000000f0,0x98(%rbp),%rdx
00000000000070d0	movl	%eax,0x00000208(%r14,%rdx)
00000000000070d8	xorl	%ecx,%ecx
00000000000070da	movl	%ecx,%edi
00000000000070dc	movl	$0x00000200,%eax
00000000000070e1	shll	%cl,%eax
00000000000070e3	incq	%rcx
00000000000070e6	cmpl	%eax,%r12d
00000000000070e9	ja	0x000070da
00000000000070eb	imulq	$0x000000f0,0x98(%rbp),%rdx
00000000000070f3	leal	0x02(%rdi),%ecx
00000000000070f6	movl	$0x00000001,%eax
00000000000070fb	shll	%cl,%eax
00000000000070fd	leal	0xfffffffc(,%rax,4),%eax
0000000000007104	orl	%eax,0x0000020c(%r14,%rdx)
000000000000710c	testb	%r8b,%r8b
000000000000710f	je	0x00007270
0000000000007115	movq	0x98(%rbp),%rax
0000000000007119	movq	0x00000110(%r14,%rax,8),%rdi
0000000000007121	testq	%rdi,%rdi
0000000000007124	je	0x00007153
0000000000007126	movq	(%rdi),%rax
0000000000007129	xorl	%esi,%esi
000000000000712b	call	*0x000001f8(%rax)
0000000000007131	movq	0x98(%rbp),%rdx
0000000000007135	movq	0x00000110(%r14,%rdx,8),%rdi
000000000000713d	movq	(%rdi),%rax
0000000000007140	call	*0x28(%rax)
0000000000007143	movq	0x98(%rbp),%rdi
0000000000007147	movq	$0x00000000,0x00000110(%r14,%rdi,8)
0000000000007153	testl	%ebx,%ebx
0000000000007155	je	0x000071d6
0000000000007157	movq	0x0000dc72(%rip),%rax
000000000000715e	movl	(%rax),%r10d
0000000000007161	testl	%r10d,%r10d
0000000000007164	je	0x00007184
0000000000007166	xorl	%r9d,%r9d
0000000000007169	xorl	%r8d,%r8d
000000000000716c	movl	$0x04000000,%ecx
0000000000007171	movl	$0x02000000,%edx
0000000000007176	movq	0x98(%rbp),%rsi
000000000000717a	movl	$0x06128455,%edi
000000000000717f	callq	0x00007184
0000000000007184	movl	$0x02000000,%ecx
0000000000007189	movl	0x000000f8(%r14),%edx
0000000000007190	movq	%rcx,%rax
0000000000007193	shrq	$0x0a,%rax
0000000000007197	addq	0x000000c8(%r14),%rax
000000000000719e	movl	%edx,(%rax)
00000000000071a0	movq	0x0000dc61(%rip),%rdx
00000000000071a7	addq	(%rdx),%rcx
00000000000071aa	cmpq	$0x03ffffff,%rcx
00000000000071b1	jbe	0x00007189
00000000000071b3	movq	0x0000dc16(%rip),%rdi
00000000000071ba	movl	(%rdi),%r9d
00000000000071bd	testl	%r9d,%r9d
00000000000071c0	je	0x0000724d
00000000000071c6	xorl	%r9d,%r9d
00000000000071c9	xorl	%r8d,%r8d
00000000000071cc	xorl	%ecx,%ecx
00000000000071ce	xorl	%edx,%edx
00000000000071d0	movq	0x98(%rbp),%rsi
00000000000071d4	jmp	0x00007243
00000000000071d6	movq	0x0000dbf3(%rip),%rax
00000000000071dd	movl	(%rax),%r8d
00000000000071e0	testl	%r8d,%r8d
00000000000071e3	je	0x000071fe
00000000000071e5	xorl	%r9d,%r9d
00000000000071e8	xorl	%r8d,%r8d
00000000000071eb	movl	$0x02000000,%ecx
00000000000071f0	xorl	%edx,%edx
00000000000071f2	xorl	%esi,%esi
00000000000071f4	movl	$0x06128455,%edi
00000000000071f9	callq	0x000071fe
00000000000071fe	xorl	%ecx,%ecx
0000000000007200	movl	0x000000f8(%r14),%edx
0000000000007207	movq	%rcx,%rax
000000000000720a	shrq	$0x0a,%rax
000000000000720e	addq	0x000000c8(%r14),%rax
0000000000007215	movl	%edx,(%rax)
0000000000007217	movq	0x0000dbea(%rip),%rdx
000000000000721e	addq	(%rdx),%rcx
0000000000007221	cmpq	$0x01ffffff,%rcx
0000000000007228	jbe	0x00007200
000000000000722a	movq	0x0000db9f(%rip),%rdi
0000000000007231	movl	(%rdi),%edi
0000000000007233	testl	%edi,%edi
0000000000007235	je	0x0000724d
0000000000007237	xorl	%r9d,%r9d
000000000000723a	xorl	%r8d,%r8d
000000000000723d	xorl	%ecx,%ecx
000000000000723f	xorl	%edx,%edx
0000000000007241	xorl	%esi,%esi
0000000000007243	movl	$0x06128456,%edi
0000000000007248	callq	0x0000724d
000000000000724d	imulq	$0x000000f0,0x98(%rbp),%rax
0000000000007255	leaq	0x00000200(%r14,%rax),%rax
000000000000725d	movl	$0x00000000,0x08(%rax)
0000000000007264	movl	$0x00000000,0x0c(%rax)
000000000000726b	jmp	0x000075a1
0000000000007270	movq	%r9,%r13
0000000000007273	imulq	%rsi,%r13
0000000000007277	testq	%r13,%r13
000000000000727a	je	0x000075a1
0000000000007280	movq	0x98(%rbp),%rax
0000000000007284	movq	0x00000110(%r14,%rax,8),%rdi
000000000000728c	testq	%rdi,%rdi
000000000000728f	je	0x000072e1
0000000000007291	movq	(%rdi),%rax
0000000000007294	call	*0x000001c8(%rax)
000000000000729a	cmpq	%rax,%r13
000000000000729d	je	0x0000740e
00000000000072a3	movq	0x98(%rbp),%rdx
00000000000072a7	movq	0x00000110(%r14,%rdx,8),%rdi
00000000000072af	testq	%rdi,%rdi
00000000000072b2	je	0x000072e1
00000000000072b4	movq	(%rdi),%rax
00000000000072b7	xorl	%esi,%esi
00000000000072b9	call	*0x000001f8(%rax)
00000000000072bf	movq	0x98(%rbp),%rax
00000000000072c3	movq	0x00000110(%r14,%rax,8),%rdi
00000000000072cb	movq	(%rdi),%rax
00000000000072ce	call	*0x28(%rax)
00000000000072d1	movq	0x98(%rbp),%rdx
00000000000072d5	movq	$0x00000000,0x00000110(%r14,%rdx,8)
00000000000072e1	movq	0x0000dae8(%rip),%rdi
00000000000072e8	movl	(%rdi),%esi
00000000000072ea	testl	%esi,%esi
00000000000072ec	je	0x00007307
00000000000072ee	xorl	%r9d,%r9d
00000000000072f1	xorl	%r8d,%r8d
00000000000072f4	xorl	%ecx,%ecx
00000000000072f6	movq	%r13,%rdx
00000000000072f9	movq	0x98(%rbp),%rsi
00000000000072fd	movl	$0x0612845d,%edi
0000000000007302	callq	0x00007307
0000000000007307	movq	0x0000dafa(%rip),%rax
000000000000730e	movq	(%rax),%rdx
0000000000007311	movq	%r13,%rsi
0000000000007314	movl	$0x00000120,%edi
0000000000007319	callq	0x0000731e
000000000000731e	movq	0x98(%rbp),%rdx
0000000000007322	movq	%rax,0x00000110(%r14,%rdx,8)
000000000000732a	movq	0x0000da9f(%rip),%rdi
0000000000007331	movl	(%rdi),%ecx
0000000000007333	testl	%ecx,%ecx
0000000000007335	je	0x00007350
0000000000007337	xorl	%r9d,%r9d
000000000000733a	xorl	%r8d,%r8d
000000000000733d	xorl	%ecx,%ecx
000000000000733f	movq	%rax,%rdx
0000000000007342	movq	0x98(%rbp),%rsi
0000000000007346	movl	$0x0612845e,%edi
000000000000734b	callq	0x00007350
0000000000007350	movq	0x98(%rbp),%rax
0000000000007354	movq	0x00000110(%r14,%rax,8),%rdi
000000000000735c	testq	%rdi,%rdi
000000000000735f	jne	0x000073ac
0000000000007361	leaq	0x00009f31(%rip),%rdi
0000000000007368	xorl	%eax,%eax
000000000000736a	callq	0x0000736f
000000000000736f	movl	$0xe00002bd,%eax
0000000000007374	movq	0x0000da55(%rip),%rdx
000000000000737b	movl	(%rdx),%edx
000000000000737d	testl	%edx,%edx
000000000000737f	je	0x000075f4
0000000000007385	xorl	%r9d,%r9d
0000000000007388	xorl	%r8d,%r8d
000000000000738b	xorl	%ecx,%ecx
000000000000738d	movq	$0xe00002bd,%rdx
0000000000007394	movq	0x98(%rbp),%rsi
0000000000007398	movl	$0x06128442,%edi
000000000000739d	callq	0x000073a2
00000000000073a2	movl	$0xe00002bd,%eax
00000000000073a7	jmp	0x000075f4
00000000000073ac	movq	(%rdi),%rax
00000000000073af	xorl	%esi,%esi
00000000000073b1	call	*0x000001f0(%rax)
00000000000073b7	movq	0x98(%rbp),%rax
00000000000073bb	movq	0x00000110(%r14,%rax,8),%rdi
00000000000073c3	movq	(%rdi),%rax
00000000000073c6	call	*0x000002e0(%rax)
00000000000073cc	movq	%rax,%rbx
00000000000073cf	movq	$0x00000008,0xc0(%rbp)
00000000000073d7	leaq	0xc0(%rbp),%rdx
00000000000073db	leaq	0xc8(%rbp),%rsi
00000000000073df	xorl	%r8d,%r8d
00000000000073e2	xorl	%ecx,%ecx
00000000000073e4	leaq	0x00009ebe(%rip),%rdi
00000000000073eb	callq	0x000073f0
00000000000073f0	movl	$0x00000020,%edx
00000000000073f5	testl	%eax,%eax
00000000000073f7	cmoveq	0xc8(%rbp),%rdx
00000000000073fc	movq	%rdx,0xc8(%rbp)
0000000000007400	xorl	%eax,%eax
0000000000007402	clflush	(%rax,%rbx)
0000000000007406	addq	%rdx,%rax
0000000000007409	cmpq	%rax,%r13
000000000000740c	ja	0x00007402
000000000000740e	movl	0xac(%rbp),%edx
0000000000007411	movq	%rdx,0xa0(%rbp)
0000000000007415	movq	0x0000d9b4(%rip),%rdi
000000000000741c	movl	(%rdi),%eax
000000000000741e	testl	%eax,%eax
0000000000007420	je	0x00007441
0000000000007422	movl	0xac(%rbp),%ecx
0000000000007425	addl	$0x02000000,%ecx
000000000000742b	movl	%ecx,%ecx
000000000000742d	xorl	%r9d,%r9d
0000000000007430	xorl	%r8d,%r8d
0000000000007433	movq	0x98(%rbp),%rsi
0000000000007437	movl	$0x06128455,%edi
000000000000743c	callq	0x00007441
0000000000007441	movq	0xa0(%rbp),%rsi
0000000000007445	movl	0xac(%rbp),%eax
0000000000007448	addl	$0x02000000,%eax
000000000000744d	movl	%eax,%ecx
000000000000744f	jmp	0x00007472
0000000000007451	movl	0x000000f8(%r14),%edx
0000000000007458	movq	%rsi,%rax
000000000000745b	shrq	$0x0a,%rax
000000000000745f	addq	0x000000c8(%r14),%rax
0000000000007466	movl	%edx,(%rax)
0000000000007468	movq	0x0000d999(%rip),%rdx
000000000000746f	addq	(%rdx),%rsi
0000000000007472	cmpq	%rcx,%rsi
0000000000007475	jb	0x00007451
0000000000007477	movq	0x0000d952(%rip),%rdi
000000000000747e	movl	(%rdi),%eax
0000000000007480	testl	%eax,%eax
0000000000007482	je	0x000075ca
0000000000007488	xorl	%r9d,%r9d
000000000000748b	xorl	%r8d,%r8d
000000000000748e	xorl	%ecx,%ecx
0000000000007490	xorl	%edx,%edx
0000000000007492	movq	0x98(%rbp),%rsi
0000000000007496	movl	$0x06128456,%edi
000000000000749b	callq	0x000074a0
00000000000074a0	shrl	$0x09,%r12d
00000000000074a4	movl	%r12d,0xb0(%rbp)
00000000000074a8	shrl	$0x09,%r15d
00000000000074ac	movl	%r15d,%esi
00000000000074af	movq	%rsi,%rcx
00000000000074b2	movq	0x0000d94f(%rip),%rax
00000000000074b9	imulq	(%rax),%rcx
00000000000074bd	movq	%r13,%rax
00000000000074c0	xorl	%edx,%edx
00000000000074c2	divq	%rcx
00000000000074c5	movl	%eax,0xb4(%rbp)
00000000000074c8	movq	0x0000d901(%rip),%rdx
00000000000074cf	movl	(%rdx),%r13d
00000000000074d2	testl	%r13d,%r13d
00000000000074d5	je	0x000074f0
00000000000074d7	movl	%eax,%ecx
00000000000074d9	xorl	%r9d,%r9d
00000000000074dc	xorl	%r8d,%r8d
00000000000074df	movq	%rsi,%rdx
00000000000074e2	movq	0x98(%rbp),%rsi
00000000000074e6	movl	$0x06128459,%edi
00000000000074eb	callq	0x000074f0
00000000000074f0	movl	$0x00000000,0xb8(%rbp)
00000000000074f7	xorl	%r13d,%r13d
00000000000074fa	movl	$0x00000000,0xbc(%rbp)
0000000000007501	jmp	0x0000756d
0000000000007503	movl	0xbc(%rbp),%ebx
0000000000007506	addl	%r12d,%ebx
0000000000007509	movq	0x0000d8f8(%rip),%rdi
0000000000007510	imulq	(%rdi),%rbx
0000000000007514	addq	0xa0(%rbp),%rbx
0000000000007518	movq	0x98(%rbp),%rax
000000000000751c	movq	0x00000110(%r14,%rax,8),%rsi
0000000000007524	movl	%r13d,%edx
0000000000007527	movq	%r14,%rdi
000000000000752a	callq	0x100001750
000000000000752f	movl	%eax,%edx
0000000000007531	andl	$0xfffff000,%edx
0000000000007537	orl	$0x01,%edx
000000000000753a	shrq	$0x1c,%rax
000000000000753e	andl	$0x000000f0,%eax
0000000000007543	orl	%eax,%edx
0000000000007545	shrq	$0x0a,%rbx
0000000000007549	addq	0x000000c8(%r14),%rbx
0000000000007550	movl	%edx,(%rbx)
0000000000007552	movq	0x0000d8af(%rip),%rdx
0000000000007559	addq	(%rdx),%r13
000000000000755c	incl	%r12d
000000000000755f	cmpl	%r15d,%r12d
0000000000007562	jne	0x00007503
0000000000007564	incl	0xb8(%rbp)
0000000000007567	movl	0xb0(%rbp),%edi
000000000000756a	addl	%edi,0xbc(%rbp)
000000000000756d	movl	0xb4(%rbp),%eax
0000000000007570	cmpl	%eax,0xb8(%rbp)
0000000000007573	je	0x0000757a
0000000000007575	xorl	%r12d,%r12d
0000000000007578	jmp	0x0000755f
000000000000757a	movq	0x0000d84f(%rip),%rdx
0000000000007581	movl	(%rdx),%r12d
0000000000007584	testl	%r12d,%r12d
0000000000007587	je	0x000075c6
0000000000007589	xorl	%r9d,%r9d
000000000000758c	xorl	%r8d,%r8d
000000000000758f	xorl	%ecx,%ecx
0000000000007591	xorl	%edx,%edx
0000000000007593	movq	0x98(%rbp),%rsi
0000000000007597	movl	$0x0612845a,%edi
000000000000759c	callq	0x000075a1
00000000000075a1	movq	0x0000d828(%rip),%rdi
00000000000075a8	movl	(%rdi),%ebx
00000000000075aa	testl	%ebx,%ebx
00000000000075ac	je	0x000075c6
00000000000075ae	xorl	%r9d,%r9d
00000000000075b1	xorl	%r8d,%r8d
00000000000075b4	xorl	%ecx,%ecx
00000000000075b6	xorl	%edx,%edx
00000000000075b8	movq	0x98(%rbp),%rsi
00000000000075bc	movl	$0x06128442,%edi
00000000000075c1	callq	0x000075c6
00000000000075c6	xorl	%eax,%eax
00000000000075c8	jmp	0x000075f4
00000000000075ca	shrl	$0x09,%r12d
00000000000075ce	movl	%r12d,0xb0(%rbp)
00000000000075d2	shrl	$0x09,%r15d
00000000000075d6	movl	%r15d,%ecx
00000000000075d9	movq	0x0000d828(%rip),%rax
00000000000075e0	imulq	(%rax),%rcx
00000000000075e4	movq	%r13,%rax
00000000000075e7	xorl	%edx,%edx
00000000000075e9	divq	%rcx
00000000000075ec	movl	%eax,0xb4(%rbp)
00000000000075ef	jmp	0x1000074f0
00000000000075f4	addq	$0x48,%rsp
00000000000075f8	popq	%rbx
00000000000075f9	popq	%r12
00000000000075fb	popq	%r13
00000000000075fd	popq	%r14
00000000000075ff	popq	%r15
0000000000007601	leave
0000000000007602	ret
0000000000007603	nop
__ZN22AppleIntelHDGraphicsFB26readEDIDOverridePropertiesEP9IOService:
0000000000007604	pushq	%rbp
0000000000007605	movq	%rsp,%rbp
0000000000007608	pushq	%r15
000000000000760a	pushq	%r14
000000000000760c	pushq	%r13
000000000000760e	pushq	%r12
0000000000007610	pushq	%rbx
0000000000007611	subq	$0x08,%rsp
0000000000007615	movq	%rsi,%r13
0000000000007618	movl	$0x00000080,%edi
000000000000761d	callq	0x00007622
0000000000007622	movq	%rax,0x0000cfb7(%rip)
0000000000007629	testq	%rax,%rax
000000000000762c	je	0x00007bf4
0000000000007632	movl	$0x00000080,%edx
0000000000007637	xorl	%esi,%esi
0000000000007639	movq	%rax,%rdi
000000000000763c	callq	0x00007641
0000000000007641	movq	0x0000d798(%rip),%r14
0000000000007648	movq	(%r14),%rbx
000000000000764b	movq	0x00(%r13),%rax
000000000000764f	leaq	0x00009c64(%rip),%rsi
0000000000007656	movq	%r13,%rdi
0000000000007659	call	*0x000002b8(%rax)
000000000000765f	movq	%rax,%rdi
0000000000007662	movq	%rbx,%rsi
0000000000007665	callq	0x0000766a
000000000000766a	movq	%rax,%r12
000000000000766d	testq	%rax,%rax
0000000000007670	je	0x000076eb
0000000000007672	movq	0x0000cf67(%rip),%rbx
0000000000007679	movq	(%rax),%rax
000000000000767c	movq	%r12,%rdi
000000000000767f	call	*0x00000140(%rax)
0000000000007685	movl	%eax,%edi
0000000000007687	callq	0x0000768c
000000000000768c	movq	%rax,(%rbx)
000000000000768f	movq	0x0000cf4a(%rip),%rax
0000000000007696	cmpq	$0x00,(%rax)
000000000000769a	je	0x000076eb
000000000000769c	movq	(%r12),%rax
00000000000076a0	movq	%r12,%rdi
00000000000076a3	call	*0x00000140(%rax)
00000000000076a9	movl	%eax,%ebx
00000000000076ab	movq	(%r12),%rax
00000000000076af	movq	%r12,%rdi
00000000000076b2	call	*0x00000178(%rax)
00000000000076b8	movq	%rax,%rsi
00000000000076bb	movq	0x0000cf1e(%rip),%rax
00000000000076c2	movq	(%rax),%rdi
00000000000076c5	movl	%ebx,%edx
00000000000076c7	callq	0x000076cc
00000000000076cc	movq	0x0000cf0d(%rip),%rbx
00000000000076d3	movq	(%r12),%rax
00000000000076d7	movq	%r12,%rdi
00000000000076da	call	*0x00000140(%rax)
00000000000076e0	movl	%eax,0x08(%rbx)
00000000000076e3	movl	$0x00000001,%r15d
00000000000076e9	jmp	0x000076ee
00000000000076eb	xorl	%r15d,%r15d
00000000000076ee	movq	(%r14),%rbx
00000000000076f1	movq	0x00(%r13),%rax
00000000000076f5	leaq	0x00009bd9(%rip),%rsi
00000000000076fc	movq	%r13,%rdi
00000000000076ff	call	*0x000002b8(%rax)
0000000000007705	movq	%rax,%rdi
0000000000007708	movq	%rbx,%rsi
000000000000770b	callq	0x00007710
0000000000007710	movq	%rax,%r12
0000000000007713	testq	%rax,%rax
0000000000007716	je	0x00007792
0000000000007718	movq	0x0000cec1(%rip),%rbx
000000000000771f	movq	(%rax),%rax
0000000000007722	movq	%r12,%rdi
0000000000007725	call	*0x00000140(%rax)
000000000000772b	movl	%eax,%edi
000000000000772d	callq	0x00007732
0000000000007732	movq	%rax,0x10(%rbx)
0000000000007736	movq	0x0000cea3(%rip),%rax
000000000000773d	cmpq	$0x00,0x10(%rax)
0000000000007742	je	0x00007792
0000000000007744	movq	(%r12),%rax
0000000000007748	movq	%r12,%rdi
000000000000774b	call	*0x00000140(%rax)
0000000000007751	movl	%eax,%ebx
0000000000007753	movq	(%r12),%rax
0000000000007757	movq	%r12,%rdi
000000000000775a	call	*0x00000178(%rax)
0000000000007760	movq	%rax,%rsi
0000000000007763	movq	0x0000ce76(%rip),%rax
000000000000776a	movq	0x10(%rax),%rdi
000000000000776e	movl	%ebx,%edx
0000000000007770	callq	0x00007775
0000000000007775	movq	0x0000ce64(%rip),%rbx
000000000000777c	movq	(%r12),%rax
0000000000007780	movq	%r12,%rdi
0000000000007783	call	*0x00000140(%rax)
0000000000007789	movl	%eax,0x18(%rbx)
000000000000778c	movl	$0x00000001,%r15d
0000000000007792	movq	(%r14),%rbx
0000000000007795	movq	0x00(%r13),%rax
0000000000007799	leaq	0x00009b50(%rip),%rsi
00000000000077a0	movq	%r13,%rdi
00000000000077a3	call	*0x000002b8(%rax)
00000000000077a9	movq	%rax,%rdi
00000000000077ac	movq	%rbx,%rsi
00000000000077af	callq	0x000077b4
00000000000077b4	movq	%rax,%r12
00000000000077b7	testq	%rax,%rax
00000000000077ba	je	0x00007836
00000000000077bc	movq	0x0000ce1d(%rip),%rbx
00000000000077c3	movq	(%rax),%rax
00000000000077c6	movq	%r12,%rdi
00000000000077c9	call	*0x00000140(%rax)
00000000000077cf	movl	%eax,%edi
00000000000077d1	callq	0x000077d6
00000000000077d6	movq	%rax,0x20(%rbx)
00000000000077da	movq	0x0000cdff(%rip),%rax
00000000000077e1	cmpq	$0x00,0x20(%rax)
00000000000077e6	je	0x00007836
00000000000077e8	movq	(%r12),%rax
00000000000077ec	movq	%r12,%rdi
00000000000077ef	call	*0x00000140(%rax)
00000000000077f5	movl	%eax,%ebx
00000000000077f7	movq	(%r12),%rax
00000000000077fb	movq	%r12,%rdi
00000000000077fe	call	*0x00000178(%rax)
0000000000007804	movq	%rax,%rsi
0000000000007807	movq	0x0000cdd2(%rip),%rax
000000000000780e	movq	0x20(%rax),%rdi
0000000000007812	movl	%ebx,%edx
0000000000007814	callq	0x00007819
0000000000007819	movq	0x0000cdc0(%rip),%rbx
0000000000007820	movq	(%r12),%rax
0000000000007824	movq	%r12,%rdi
0000000000007827	call	*0x00000140(%rax)
000000000000782d	movl	%eax,0x28(%rbx)
0000000000007830	movl	$0x00000001,%r15d
0000000000007836	movq	(%r14),%rbx
0000000000007839	movq	0x00(%r13),%rax
000000000000783d	leaq	0x00009ac5(%rip),%rsi
0000000000007844	movq	%r13,%rdi
0000000000007847	call	*0x000002b8(%rax)
000000000000784d	movq	%rax,%rdi
0000000000007850	movq	%rbx,%rsi
0000000000007853	callq	0x00007858
0000000000007858	movq	%rax,%r12
000000000000785b	testq	%rax,%rax
000000000000785e	je	0x000078da
0000000000007860	movq	0x0000cd79(%rip),%rbx
0000000000007867	movq	(%rax),%rax
000000000000786a	movq	%r12,%rdi
000000000000786d	call	*0x00000140(%rax)
0000000000007873	movl	%eax,%edi
0000000000007875	callq	0x0000787a
000000000000787a	movq	%rax,0x30(%rbx)
000000000000787e	movq	0x0000cd5b(%rip),%rax
0000000000007885	cmpq	$0x00,0x30(%rax)
000000000000788a	je	0x000078da
000000000000788c	movq	(%r12),%rax
0000000000007890	movq	%r12,%rdi
0000000000007893	call	*0x00000140(%rax)
0000000000007899	movl	%eax,%ebx
000000000000789b	movq	(%r12),%rax
000000000000789f	movq	%r12,%rdi
00000000000078a2	call	*0x00000178(%rax)
00000000000078a8	movq	%rax,%rsi
00000000000078ab	movq	0x0000cd2e(%rip),%rax
00000000000078b2	movq	0x30(%rax),%rdi
00000000000078b6	movl	%ebx,%edx
00000000000078b8	callq	0x000078bd
00000000000078bd	movq	0x0000cd1c(%rip),%rbx
00000000000078c4	movq	(%r12),%rax
00000000000078c8	movq	%r12,%rdi
00000000000078cb	call	*0x00000140(%rax)
00000000000078d1	movl	%eax,0x38(%rbx)
00000000000078d4	movl	$0x00000001,%r15d
00000000000078da	movq	(%r14),%rbx
00000000000078dd	movq	0x00(%r13),%rax
00000000000078e1	leaq	0x00009a3a(%rip),%rsi
00000000000078e8	movq	%r13,%rdi
00000000000078eb	call	*0x000002b8(%rax)
00000000000078f1	movq	%rax,%rdi
00000000000078f4	movq	%rbx,%rsi
00000000000078f7	callq	0x000078fc
00000000000078fc	movq	%rax,%r12
00000000000078ff	testq	%rax,%rax
0000000000007902	je	0x0000797e
0000000000007904	movq	0x0000ccd5(%rip),%rbx
000000000000790b	movq	(%rax),%rax
000000000000790e	movq	%r12,%rdi
0000000000007911	call	*0x00000140(%rax)
0000000000007917	movl	%eax,%edi
0000000000007919	callq	0x0000791e
000000000000791e	movq	%rax,0x40(%rbx)
0000000000007922	movq	0x0000ccb7(%rip),%rax
0000000000007929	cmpq	$0x00,0x40(%rax)
000000000000792e	je	0x0000797e
0000000000007930	movq	(%r12),%rax
0000000000007934	movq	%r12,%rdi
0000000000007937	call	*0x00000140(%rax)
000000000000793d	movl	%eax,%ebx
000000000000793f	movq	(%r12),%rax
0000000000007943	movq	%r12,%rdi
0000000000007946	call	*0x00000178(%rax)
000000000000794c	movq	%rax,%rsi
000000000000794f	movq	0x0000cc8a(%rip),%rax
0000000000007956	movq	0x40(%rax),%rdi
000000000000795a	movl	%ebx,%edx
000000000000795c	callq	0x00007961
0000000000007961	movq	0x0000cc78(%rip),%rbx
0000000000007968	movq	(%r12),%rax
000000000000796c	movq	%r12,%rdi
000000000000796f	call	*0x00000140(%rax)
0000000000007975	movl	%eax,0x48(%rbx)
0000000000007978	movl	$0x00000001,%r15d
000000000000797e	movq	(%r14),%rbx
0000000000007981	movq	0x00(%r13),%rax
0000000000007985	leaq	0x000099ae(%rip),%rsi
000000000000798c	movq	%r13,%rdi
000000000000798f	call	*0x000002b8(%rax)
0000000000007995	movq	%rax,%rdi
0000000000007998	movq	%rbx,%rsi
000000000000799b	callq	0x000079a0
00000000000079a0	movq	%rax,%r12
00000000000079a3	testq	%rax,%rax
00000000000079a6	je	0x00007a22
00000000000079a8	movq	0x0000cc31(%rip),%rbx
00000000000079af	movq	(%rax),%rax
00000000000079b2	movq	%r12,%rdi
00000000000079b5	call	*0x00000140(%rax)
00000000000079bb	movl	%eax,%edi
00000000000079bd	callq	0x000079c2
00000000000079c2	movq	%rax,0x50(%rbx)
00000000000079c6	movq	0x0000cc13(%rip),%rax
00000000000079cd	cmpq	$0x00,0x50(%rax)
00000000000079d2	je	0x00007a22
00000000000079d4	movq	(%r12),%rax
00000000000079d8	movq	%r12,%rdi
00000000000079db	call	*0x00000140(%rax)
00000000000079e1	movl	%eax,%ebx
00000000000079e3	movq	(%r12),%rax
00000000000079e7	movq	%r12,%rdi
00000000000079ea	call	*0x00000178(%rax)
00000000000079f0	movq	%rax,%rsi
00000000000079f3	movq	0x0000cbe6(%rip),%rax
00000000000079fa	movq	0x50(%rax),%rdi
00000000000079fe	movl	%ebx,%edx
0000000000007a00	callq	0x00007a05
0000000000007a05	movq	0x0000cbd4(%rip),%rbx
0000000000007a0c	movq	(%r12),%rax
0000000000007a10	movq	%r12,%rdi
0000000000007a13	call	*0x00000140(%rax)
0000000000007a19	movl	%eax,0x58(%rbx)
0000000000007a1c	movl	$0x00000001,%r15d
0000000000007a22	movq	(%r14),%rbx
0000000000007a25	movq	0x00(%r13),%rax
0000000000007a29	leaq	0x00009928(%rip),%rsi
0000000000007a30	movq	%r13,%rdi
0000000000007a33	call	*0x000002b8(%rax)
0000000000007a39	movq	%rax,%rdi
0000000000007a3c	movq	%rbx,%rsi
0000000000007a3f	callq	0x00007a44
0000000000007a44	movq	%rax,%r12
0000000000007a47	testq	%rax,%rax
0000000000007a4a	je	0x00007ac6
0000000000007a4c	movq	0x0000cb8d(%rip),%rbx
0000000000007a53	movq	(%rax),%rax
0000000000007a56	movq	%r12,%rdi
0000000000007a59	call	*0x00000140(%rax)
0000000000007a5f	movl	%eax,%edi
0000000000007a61	callq	0x00007a66
0000000000007a66	movq	%rax,0x60(%rbx)
0000000000007a6a	movq	0x0000cb6f(%rip),%rax
0000000000007a71	cmpq	$0x00,0x60(%rax)
0000000000007a76	je	0x00007ac6
0000000000007a78	movq	(%r12),%rax
0000000000007a7c	movq	%r12,%rdi
0000000000007a7f	call	*0x00000140(%rax)
0000000000007a85	movl	%eax,%ebx
0000000000007a87	movq	(%r12),%rax
0000000000007a8b	movq	%r12,%rdi
0000000000007a8e	call	*0x00000178(%rax)
0000000000007a94	movq	%rax,%rsi
0000000000007a97	movq	0x0000cb42(%rip),%rax
0000000000007a9e	movq	0x60(%rax),%rdi
0000000000007aa2	movl	%ebx,%edx
0000000000007aa4	callq	0x00007aa9
0000000000007aa9	movq	0x0000cb30(%rip),%rbx
0000000000007ab0	movq	(%r12),%rax
0000000000007ab4	movq	%r12,%rdi
0000000000007ab7	call	*0x00000140(%rax)
0000000000007abd	movl	%eax,0x68(%rbx)
0000000000007ac0	movl	$0x00000001,%r15d
0000000000007ac6	movq	(%r14),%rbx
0000000000007ac9	movq	0x00(%r13),%rax
0000000000007acd	leaq	0x000098ac(%rip),%rsi
0000000000007ad4	movq	%r13,%rdi
0000000000007ad7	call	*0x000002b8(%rax)
0000000000007add	movq	%rax,%rdi
0000000000007ae0	movq	%rbx,%rsi
0000000000007ae3	callq	0x00007ae8
0000000000007ae8	movq	%rax,%r12
0000000000007aeb	testq	%rax,%rax
0000000000007aee	je	0x00007b6a
0000000000007af0	movq	0x0000cae9(%rip),%rbx
0000000000007af7	movq	(%rax),%rax
0000000000007afa	movq	%r12,%rdi
0000000000007afd	call	*0x00000140(%rax)
0000000000007b03	movl	%eax,%edi
0000000000007b05	callq	0x00007b0a
0000000000007b0a	movq	%rax,0x70(%rbx)
0000000000007b0e	movq	0x0000cacb(%rip),%rax
0000000000007b15	cmpq	$0x00,0x70(%rax)
0000000000007b1a	je	0x00007b6a
0000000000007b1c	movq	(%r12),%rax
0000000000007b20	movq	%r12,%rdi
0000000000007b23	call	*0x00000140(%rax)
0000000000007b29	movl	%eax,%ebx
0000000000007b2b	movq	(%r12),%rax
0000000000007b2f	movq	%r12,%rdi
0000000000007b32	call	*0x00000178(%rax)
0000000000007b38	movq	%rax,%rsi
0000000000007b3b	movq	0x0000ca9e(%rip),%rax
0000000000007b42	movq	0x70(%rax),%rdi
0000000000007b46	movl	%ebx,%edx
0000000000007b48	callq	0x00007b4d
0000000000007b4d	movq	0x0000ca8c(%rip),%rbx
0000000000007b54	movq	(%r12),%rax
0000000000007b58	movq	%r12,%rdi
0000000000007b5b	call	*0x00000140(%rax)
0000000000007b61	movl	%eax,0x78(%rbx)
0000000000007b64	movl	$0x00000001,%r15d
0000000000007b6a	movq	(%r14),%rbx
0000000000007b6d	movq	0x00(%r13),%rax
0000000000007b71	leaq	0x00009829(%rip),%rsi
0000000000007b78	movq	%r13,%rdi
0000000000007b7b	call	*0x000002b8(%rax)
0000000000007b81	movq	%rax,%rdi
0000000000007b84	movq	%rbx,%rsi
0000000000007b87	callq	0x00007b8c
0000000000007b8c	testq	%rax,%rax
0000000000007b8f	je	0x00007ba2
0000000000007b91	movq	0x0000ca48(%rip),%rax
0000000000007b98	movb	$0x01,0x7c(%rax)
0000000000007b9c	movl	$0x00000001,%r15d
0000000000007ba2	movq	0x00(%r13),%rax
0000000000007ba6	leaq	0x0000980e(%rip),%rsi
0000000000007bad	movq	%r13,%rdi
0000000000007bb0	call	*0x000002b8(%rax)
0000000000007bb6	movq	%rax,%rdi
0000000000007bb9	movq	%rbx,%rsi
0000000000007bbc	callq	0x00007bc1
0000000000007bc1	testq	%rax,%rax
0000000000007bc4	je	0x00007bd3
0000000000007bc6	movq	0x0000ca13(%rip),%rax
0000000000007bcd	movb	$0x01,0x7d(%rax)
0000000000007bd1	jmp	0x00007bf4
0000000000007bd3	testl	%r15d,%r15d
0000000000007bd6	jne	0x00007bf4
0000000000007bd8	movq	0x0000ca01(%rip),%rdi
0000000000007bdf	movl	$0x00000080,%esi
0000000000007be4	callq	0x00007be9
0000000000007be9	movq	$0x00000000,0x0000c9ec(%rip)
0000000000007bf4	addq	$0x08,%rsp
0000000000007bf8	popq	%rbx
0000000000007bf9	popq	%r12
0000000000007bfb	popq	%r13
0000000000007bfd	popq	%r14
0000000000007bff	popq	%r15
0000000000007c01	leave
0000000000007c02	ret
0000000000007c03	nop
__ZN22AppleIntelHDGraphicsFB21zeroAvailStolenMemoryEv:
0000000000007c04	pushq	%rbp
0000000000007c05	movq	%rsp,%rbp
0000000000007c08	pushq	%r12
0000000000007c0a	pushq	%rbx
0000000000007c0b	subq	$0x10,%rsp
0000000000007c0f	movq	%rdi,%r12
0000000000007c12	movq	$0x00000000,0xe8(%rbp)
0000000000007c1a	movq	0x000006d8(%rdi),%rdi
0000000000007c21	movq	(%rdi),%rax
0000000000007c24	call	*0x00000148(%rax)
0000000000007c2a	movq	%rax,%rbx
0000000000007c2d	movl	%eax,%esi
0000000000007c2f	leaq	0x0000979f(%rip),%rdi
0000000000007c36	xorl	%eax,%eax
0000000000007c38	callq	0x00007c3d
0000000000007c3d	movq	0x000006d8(%r12),%rdi
0000000000007c45	movq	(%rdi),%rax
0000000000007c48	leaq	0xe8(%rbp),%rdx
0000000000007c4c	movl	$0x00001000,%ecx
0000000000007c51	movq	%rbx,%rsi
0000000000007c54	call	*0x00000150(%rax)
0000000000007c5a	movq	0xe8(%rbp),%rsi
0000000000007c5e	subl	0x000006e0(%r12),%esi
0000000000007c66	movq	0x000000a0(%r12),%rdi
0000000000007c6e	movq	%rbx,%rdx
0000000000007c71	callq	0x00007c76
0000000000007c76	movq	%rax,%rdi
0000000000007c79	movq	(%rax),%rax
0000000000007c7c	xorl	%esi,%esi
0000000000007c7e	call	*0x00000200(%rax)
0000000000007c84	movq	%rax,%rdi
0000000000007c87	movq	(%rax),%rax
0000000000007c8a	call	*0x00000118(%rax)
0000000000007c90	movq	%rax,%rdi
0000000000007c93	movq	%rbx,%rdx
0000000000007c96	xorl	%esi,%esi
0000000000007c98	callq	0x00007c9d
0000000000007c9d	movq	0x000006d8(%r12),%rdi
0000000000007ca5	movq	(%rdi),%rax
0000000000007ca8	movq	0xe8(%rbp),%rsi
0000000000007cac	movq	%rbx,%rdx
0000000000007caf	call	*0x00000160(%rax)
0000000000007cb5	addq	$0x10,%rsp
0000000000007cb9	popq	%rbx
0000000000007cba	popq	%r12
0000000000007cbc	leave
0000000000007cbd	ret
__ZN22AppleIntelHDGraphicsFB17initVCSRingBufferEv:
0000000000007cbe	pushq	%rbp
0000000000007cbf	movq	%rsp,%rbp
0000000000007cc2	pushq	%rbx
0000000000007cc3	subq	$0x08,%rsp
0000000000007cc7	movq	%rdi,%rbx
0000000000007cca	movq	0x00000098(%rdi),%rax
0000000000007cd1	movl	$0x00000000,0x0000403c(%rax)
0000000000007cdb	movq	0x00000098(%rdi),%rax
0000000000007ce2	movl	$0x00000000,0x00004038(%rax)
0000000000007cec	movq	0x00000098(%rdi),%rax
0000000000007cf3	movl	$0x00000000,0x00004030(%rax)
0000000000007cfd	movq	0x00000098(%rdi),%rax
0000000000007d04	movl	$0x00000000,0x00004034(%rax)
0000000000007d0e	cmpq	$0x00,0x000004b0(%rdi)
0000000000007d16	jne	0x00007d8e
0000000000007d18	movq	0x000006d8(%rdi),%rdi
0000000000007d1f	movq	(%rdi),%rax
0000000000007d22	leaq	0x000004b0(%rbx),%rdx
0000000000007d29	movl	$0x00001000,%ecx
0000000000007d2e	movl	$0x00001000,%esi
0000000000007d33	call	*0x00000150(%rax)
0000000000007d39	movq	0x000004b0(%rbx),%rsi
0000000000007d40	subl	0x000006e0(%rbx),%esi
0000000000007d46	movl	%esi,0x00000488(%rbx)
0000000000007d4c	movl	%esi,%esi
0000000000007d4e	movq	0x000000a0(%rbx),%rdi
0000000000007d55	movl	$0x00001000,%edx
0000000000007d5a	callq	0x00007d5f
0000000000007d5f	movq	%rax,%rdi
0000000000007d62	movq	%rax,0x00000478(%rbx)
0000000000007d69	movq	(%rax),%rax
0000000000007d6c	xorl	%esi,%esi
0000000000007d6e	call	*0x00000200(%rax)
0000000000007d74	movq	%rax,%rdi
0000000000007d77	movq	%rax,0x00000480(%rbx)
0000000000007d7e	movq	(%rax),%rax
0000000000007d81	call	*0x00000118(%rax)
0000000000007d87	movq	%rax,0x000004a8(%rbx)
0000000000007d8e	movq	0x000004a8(%rbx),%rdi
0000000000007d95	movl	$0x00001000,%edx
0000000000007d9a	xorl	%esi,%esi
0000000000007d9c	callq	0x00007da1
0000000000007da1	movl	$0x00001000,0x0000048c(%rbx)
0000000000007dab	movl	$0x00000000,0x00000490(%rbx)
0000000000007db5	movl	$0x00000fff,0x00000498(%rbx)
0000000000007dbf	movl	$0x00000000,0x0000049c(%rbx)
0000000000007dc9	movl	$0x00000000,0x00000494(%rbx)
0000000000007dd3	addq	$0x08,%rsp
0000000000007dd7	popq	%rbx
0000000000007dd8	leave
0000000000007dd9	ret
__ZN22AppleIntelHDGraphicsFB23VerifyAvailStolenMemoryEv:
0000000000007dda	pushq	%rbp
0000000000007ddb	movq	%rsp,%rbp
0000000000007dde	pushq	%r14
0000000000007de0	pushq	%r13
0000000000007de2	pushq	%r12
0000000000007de4	pushq	%rbx
0000000000007de5	subq	$0x10,%rsp
0000000000007de9	movq	%rdi,%r14
0000000000007dec	movq	$0x00000000,0xd8(%rbp)
0000000000007df4	leaq	0x000095eb(%rip),%rdi
0000000000007dfb	xorl	%eax,%eax
0000000000007dfd	callq	0x00007e02
0000000000007e02	movq	0x000006d8(%r14),%rdi
0000000000007e09	movq	(%rdi),%rax
0000000000007e0c	call	*0x00000148(%rax)
0000000000007e12	movq	%rax,%r13
0000000000007e15	movl	%eax,%esi
0000000000007e17	leaq	0x000095b7(%rip),%rdi
0000000000007e1e	xorl	%eax,%eax
0000000000007e20	callq	0x00007e25
0000000000007e25	movq	0x000006d8(%r14),%rdi
0000000000007e2c	movq	(%rdi),%rax
0000000000007e2f	leaq	0xd8(%rbp),%rdx
0000000000007e33	movl	$0x00001000,%ecx
0000000000007e38	movq	%r13,%rsi
0000000000007e3b	call	*0x00000150(%rax)
0000000000007e41	movq	0xd8(%rbp),%rsi
0000000000007e45	subl	0x000006e0(%r14),%esi
0000000000007e4c	movq	0x000000a0(%r14),%rdi
0000000000007e53	movq	%r13,%rdx
0000000000007e56	callq	0x00007e5b
0000000000007e5b	movq	%rax,%rdi
0000000000007e5e	movq	(%rax),%rax
0000000000007e61	xorl	%esi,%esi
0000000000007e63	call	*0x00000200(%rax)
0000000000007e69	movq	%rax,%rdi
0000000000007e6c	movq	(%rax),%rax
0000000000007e6f	call	*0x00000118(%rax)
0000000000007e75	movq	%rax,%r12
0000000000007e78	xorl	%ebx,%ebx
0000000000007e7a	jmp	0x00007e98
0000000000007e7c	leaq	(%rbx,%r12),%rsi
0000000000007e80	movl	$0x00001000,%edx
0000000000007e85	movq	%r12,%rdi
0000000000007e88	callq	0x00007e8d
0000000000007e8d	testl	%eax,%eax
0000000000007e8f	jne	0x00007e9f
0000000000007e91	addq	$0x00001000,%rbx
0000000000007e98	cmpq	%r13,%rbx
0000000000007e9b	jb	0x00007e7c
0000000000007e9d	jmp	0x00007eda
0000000000007e9f	movl	%ebx,%edx
0000000000007ea1	leaq	0x0000955a(%rip),%rsi
0000000000007ea8	leaq	0x00009561(%rip),%rdi
0000000000007eaf	xorl	%eax,%eax
0000000000007eb1	callq	0x00007eb6
0000000000007eb6	movq	0x000006d8(%r14),%rdi
0000000000007ebd	movq	(%rdi),%rax
0000000000007ec0	movq	0xd8(%rbp),%rsi
0000000000007ec4	movq	%r13,%rdx
0000000000007ec7	call	*0x00000160(%rax)
0000000000007ecd	addq	$0x10,%rsp
0000000000007ed1	popq	%rbx
0000000000007ed2	popq	%r12
0000000000007ed4	popq	%r13
0000000000007ed6	popq	%r14
0000000000007ed8	leave
0000000000007ed9	ret
0000000000007eda	movl	%ebx,%edx
0000000000007edc	leaq	0x00009551(%rip),%rsi
0000000000007ee3	jmp	0x00007ea8
0000000000007ee5	nop
__ZN22AppleIntelHDGraphicsFB16initStolenMemoryEv:
0000000000007ee6	pushq	%rbp
0000000000007ee7	movq	%rsp,%rbp
0000000000007eea	pushq	%r13
0000000000007eec	pushq	%r12
0000000000007eee	pushq	%rbx
0000000000007eef	subq	$0x08,%rsp
0000000000007ef3	movq	%rdi,%r12
0000000000007ef6	movq	0x00000088(%rdi),%rdi
0000000000007efd	movq	(%rdi),%rax
0000000000007f00	movl	$0x00000052,%esi
0000000000007f05	call	*0x00000888(%rax)
0000000000007f0b	movl	%eax,%ebx
0000000000007f0d	movq	0x00000088(%r12),%rdi
0000000000007f15	movq	(%rdi),%rax
0000000000007f18	movl	$0x0000005c,%esi
0000000000007f1d	call	*0x00000880(%rax)
0000000000007f23	movl	%eax,%ecx
0000000000007f25	shrw	$0x04,%bx
0000000000007f29	movl	%ebx,%eax
0000000000007f2b	andl	$0x0f,%eax
0000000000007f2e	cmpl	$0x09,%eax
0000000000007f31	ja	0x00008030
0000000000007f37	movl	%eax,%eax
0000000000007f39	leaq	0x0000000c(%rip),%rdx
0000000000007f40	movslq	(%rdx,%rax,4),%rax
0000000000007f44	addq	%rdx,%rax
0000000000007f47	jmp	*%rax
0000000000007f49	nopl	(%rax)
0000000000007f4c	inb	$0x00,%al
0000000000007f4e	addb	%al,(%rax)
0000000000007f50	cmpb	%al,(%rax)
0000000000007f52	addb	%al,(%rax)
0000000000007f54	addb	%al,(%rax)
0000000000007f57	addb	%cl,0x00(%rax)
0000000000007f5a	addb	%al,(%rax)
0000000000007f5c	pushq	%rax
0000000000007f5d	addb	%al,(%rax)
0000000000007f5f	addb	%bl,0x00(%rax)
0000000000007f62	addb	%al,(%rax)
0000000000007f64	.byte 0x60 #bad opcode
0000000000007f65	addb	%al,(%rax)
0000000000007f67	addb	%ch,0x00(%rax)
0000000000007f6a	addb	%al,(%rax)
0000000000007f6c	subb	%al,(%rax)
0000000000007f6e	addb	%al,(%rax)
0000000000007f70	xorb	%al,(%rax)
0000000000007f72	addb	%al,(%rax)
0000000000007f74	movl	$0x08000000,%r13d
0000000000007f7a	jmp	0x00007fba
0000000000007f7c	movl	$0x10000000,%r13d
0000000000007f82	jmp	0x00007fba
0000000000007f84	movl	$0x00100000,%r13d
0000000000007f8a	jmp	0x00007fba
0000000000007f8c	movl	$0x00400000,%r13d
0000000000007f92	jmp	0x00007fba
0000000000007f94	movl	$0x00800000,%r13d
0000000000007f9a	jmp	0x00007fba
0000000000007f9c	movl	$0x01000000,%r13d
0000000000007fa2	jmp	0x00007fba
0000000000007fa4	movl	$0x02000000,%r13d
0000000000007faa	jmp	0x00007fba
0000000000007fac	movl	$0x03000000,%r13d
0000000000007fb2	jmp	0x00007fba
0000000000007fb4	movl	$0x04000000,%r13d
0000000000007fba	movl	%ecx,%ebx
0000000000007fbc	movq	%rbx,0x000006e0(%r12)
0000000000007fc4	movq	%r13,0x000006e8(%r12)
0000000000007fcc	xorl	%ecx,%ecx
0000000000007fce	xorl	%edx,%edx
0000000000007fd0	movl	$0x00001000,%esi
0000000000007fd5	xorl	%edi,%edi
0000000000007fd7	callq	0x00007fdc
0000000000007fdc	movq	%rax,%rcx
0000000000007fdf	movq	%rax,0x000006d8(%r12)
0000000000007fe7	testq	%rax,%rax
0000000000007fea	je	0x00008030
0000000000007fec	movq	(%rax),%rax
0000000000007fef	movq	%r13,%rdx
0000000000007ff2	movq	%rbx,%rsi
0000000000007ff5	movq	%rcx,%rdi
0000000000007ff8	call	*0x00000160(%rax)
0000000000007ffe	movq	0x000006d8(%r12),%rdi
0000000000008006	movq	(%rdi),%rax
0000000000008009	movq	0x000006e8(%r12),%rdx
0000000000008011	shrq	%rdx
0000000000008014	movq	0x000006e0(%r12),%rsi
000000000000801c	movq	0x00000158(%rax),%r11
0000000000008023	addq	$0x08,%rsp
0000000000008027	popq	%rbx
0000000000008028	popq	%r12
000000000000802a	popq	%r13
000000000000802c	leave
000000000000802d	jmp	*%r11
0000000000008030	addq	$0x08,%rsp
0000000000008034	popq	%rbx
0000000000008035	popq	%r12
0000000000008037	popq	%r13
0000000000008039	leave
000000000000803a	ret
000000000000803b	nop
__ZN22AppleIntelHDGraphicsFB16getOSInformationEv:
000000000000803c	pushq	%rbp
000000000000803d	movq	%rsp,%rbp
0000000000008040	pushq	%r13
0000000000008042	pushq	%r12
0000000000008044	pushq	%rbx
0000000000008045	subq	$0x08,%rsp
0000000000008049	movq	%rdi,%rbx
000000000000804c	movq	0x0000cd8d(%rip),%rax
0000000000008053	movq	(%rax),%r12
0000000000008056	movq	0x00000088(%rdi),%rdi
000000000000805d	movq	(%rdi),%rax
0000000000008060	leaq	0x000093d4(%rip),%rsi
0000000000008067	call	*0x000002b8(%rax)
000000000000806d	movq	%rax,%rdi
0000000000008070	movq	%r12,%rsi
0000000000008073	callq	0x00008078
0000000000008078	movq	%rax,%rcx
000000000000807b	testq	%rax,%rax
000000000000807e	je	0x000080a6
0000000000008080	movq	(%rax),%rax
0000000000008083	movl	$0x00000014,%edx
0000000000008088	xorl	%esi,%esi
000000000000808a	movq	%rcx,%rdi
000000000000808d	call	*0x00000180(%rax)
0000000000008093	movq	%rax,%rcx
0000000000008096	testq	%rax,%rax
0000000000008099	je	0x000080a6
000000000000809b	cmpw	$0x4930,(%rax)
00000000000080a0	je	0x0000812b
00000000000080a6	movq	0x00000088(%rbx),%rdi
00000000000080ad	movq	(%rdi),%rax
00000000000080b0	leaq	0x00009395(%rip),%rsi
00000000000080b7	call	*0x000002b8(%rax)
00000000000080bd	movq	%rax,%rdi
00000000000080c0	movq	%r12,%rsi
00000000000080c3	callq	0x000080c8
00000000000080c8	movq	%rax,%rcx
00000000000080cb	testq	%rax,%rax
00000000000080ce	je	0x000080f2
00000000000080d0	movq	(%rax),%rax
00000000000080d3	movl	$0x00000014,%edx
00000000000080d8	xorl	%esi,%esi
00000000000080da	movq	%rcx,%rdi
00000000000080dd	call	*0x00000180(%rax)
00000000000080e3	movq	%rax,%rcx
00000000000080e6	testq	%rax,%rax
00000000000080e9	je	0x000080f2
00000000000080eb	cmpw	$0x4930,(%rax)
00000000000080f0	je	0x0000812b
00000000000080f2	movq	%rbx,%rdi
00000000000080f5	callq	0x1000043e8
00000000000080fa	movq	%rax,%r13
00000000000080fd	movq	0x0000cb3c(%rip),%r12
0000000000008104	testq	%r12,%r12
0000000000008107	je	0x00008124
0000000000008109	movq	%r12,%rsi
000000000000810c	movq	%r13,%rdi
000000000000810f	callq	0x00008114
0000000000008114	testl	%eax,%eax
0000000000008116	jne	0x00008109
0000000000008118	movq	0x0000cb29(%rip),%rcx
000000000000811f	testq	%rcx,%rcx
0000000000008122	jne	0x0000812b
0000000000008124	leaq	0x0000cb55(%rip),%rcx
000000000000812b	movq	(%rcx),%rax
000000000000812e	movq	%rax,0x00000140(%rbx)
0000000000008135	movq	0x08(%rcx),%rax
0000000000008139	movq	%rax,0x00000148(%rbx)
0000000000008140	movl	0x10(%rcx),%eax
0000000000008143	movl	%eax,0x00000150(%rbx)
0000000000008149	xorl	%eax,%eax
000000000000814b	testb	$0x03,0x04(%rcx)
000000000000814f	setne	%al
0000000000008152	movl	%eax,0x00000600(%rbx)
0000000000008158	movzbl	0x02(%rcx),%eax
000000000000815c	movl	%eax,0x000005d8(%rbx)
0000000000008162	movq	0x00000098(%rbx),%rsi
0000000000008169	movl	0x000e1180(%rsi),%edx
000000000000816f	movl	%edx,%eax
0000000000008171	andl	$0xc0000000,%eax
0000000000008176	cmpl	$0x40000000,%eax
000000000000817b	jne	0x00008189
000000000000817d	andl	$0xbfffffff,%edx
0000000000008183	movl	%edx,0x000e1180(%rsi)
0000000000008189	movb	$0xff,0x0000018c(%rbx)
0000000000008190	movb	$0xff,0x0000018d(%rbx)
0000000000008197	movb	$0xff,0x0000018e(%rbx)
000000000000819e	movb	$0xff,0x0000018f(%rbx)
00000000000081a5	movzbl	0x04(%rcx),%eax
00000000000081a9	xorl	%r8d,%r8d
00000000000081ac	xorl	%edi,%edi
00000000000081ae	testb	$0x01,%al
00000000000081b0	je	0x000081ea
00000000000081b2	movq	0x00000098(%rbx),%rax
00000000000081b9	movl	0x000e1180(%rax),%edx
00000000000081bf	movl	%edx,%eax
00000000000081c1	shrl	$0x1e,%eax
00000000000081c4	andl	$0x01,%eax
00000000000081c7	movb	%al,0x0000018c(%rbx)
00000000000081cd	cmpb	$0x01,%al
00000000000081cf	sbbl	%r8d,%r8d
00000000000081d2	andl	$0x01,%r8d
00000000000081d6	cmpb	$0x01,%al
00000000000081d8	sbbl	%edi,%edi
00000000000081da	incl	%edi
00000000000081dc	testl	%edx,%edx
00000000000081de	jns	0x000081e6
00000000000081e0	movb	%al,0x0000018f(%rbx)
00000000000081e6	movzbl	0x04(%rcx),%eax
00000000000081ea	testb	$0x04,%al
00000000000081ec	je	0x00008229
00000000000081ee	movq	0x00000098(%rbx),%rax
00000000000081f5	movl	0x000e1100(%rax),%edx
00000000000081fb	movl	%edx,%eax
00000000000081fd	shrl	$0x1e,%eax
0000000000008200	andl	$0x01,%eax
0000000000008203	movl	%eax,%esi
0000000000008205	movb	%al,0x0000018d(%rbx)
000000000000820b	movl	$0x00000001,%eax
0000000000008210	testb	%dh,%dh
0000000000008213	cmovnel	%eax,%edi
0000000000008216	cmovel	%eax,%r8d
000000000000821a	testl	%edx,%edx
000000000000821c	jns	0x00008225
000000000000821e	movb	%dh,0x0000018f(%rbx)
0000000000008225	movzbl	0x04(%rcx),%eax
0000000000008229	testb	$0x10,%al
000000000000822b	je	0x00008264
000000000000822d	movq	0x00000098(%rbx),%rax
0000000000008234	movl	0x000e4100(%rax),%edx
000000000000823a	movl	%edx,%eax
000000000000823c	shrl	$0x1e,%eax
000000000000823f	andl	$0x01,%eax
0000000000008242	movl	%eax,%esi
0000000000008244	movb	%al,0x0000018e(%rbx)
000000000000824a	movl	$0x00000001,%eax
000000000000824f	testb	%dh,%dh
0000000000008252	cmovnel	%eax,%edi
0000000000008255	cmovel	%eax,%r8d
0000000000008259	testl	%edx,%edx
000000000000825b	jns	0x00008264
000000000000825d	movb	%dh,0x0000018f(%rbx)
0000000000008264	xorl	%eax,%eax
0000000000008266	testb	%r8b,%r8b
0000000000008269	setne	%al
000000000000826c	movl	%eax,0x00000194(%rbx)
0000000000008272	testb	%bh,%bh
0000000000008275	je	0x0000827f
0000000000008277	incl	%eax
0000000000008279	movl	%eax,0x00000194(%rbx)
000000000000827f	movl	0x0c(%rcx),%edx
0000000000008282	movl	%edx,0x00000184(%rbx)
0000000000008288	movl	0x10(%rcx),%eax
000000000000828b	movl	%eax,0x00000608(%rbx)
0000000000008291	testl	%edx,%edx
0000000000008293	setne	0x00000180(%rbx)
000000000000829a	addq	$0x08,%rsp
000000000000829e	popq	%rbx
000000000000829f	popq	%r12
00000000000082a1	popq	%r13
00000000000082a3	leave
00000000000082a4	ret
00000000000082a5	nop
__ZN21AppleIntelFramebuffer10setTimeoutEv:
00000000000082a6	pushq	%rbp
00000000000082a7	movq	%rsp,%rbp
00000000000082aa	pushq	%rbx
00000000000082ab	subq	$0x18,%rsp
00000000000082af	movq	%rdi,%rbx
00000000000082b2	cmpq	$0x00,0x000004e0(%rdi)
00000000000082ba	je	0x00008309
00000000000082bc	movq	$0x00000000,0xe8(%rbp)
00000000000082c4	movq	$0x00000000,0xe0(%rbp)
00000000000082cc	movq	0x000004e0(%rdi),%rdi
00000000000082d3	callq	0x000082d8
00000000000082d8	leaq	0xe8(%rbp),%rdx
00000000000082dc	movl	0x000004d4(%rbx),%edi
00000000000082e2	movl	$0x00000001,%esi
00000000000082e7	callq	0x000082ec
00000000000082ec	leaq	0xe0(%rbp),%rsi
00000000000082f0	movq	0xe8(%rbp),%rdi
00000000000082f4	callq	0x000082f9
00000000000082f9	movq	0xe0(%rbp),%rsi
00000000000082fd	movq	0x000004e0(%rbx),%rdi
0000000000008304	callq	0x00008309
0000000000008309	addq	$0x18,%rsp
000000000000830d	popq	%rbx
000000000000830e	leave
000000000000830f	ret
__ZN21AppleIntelFramebuffer16timerTestControlEb:
0000000000008310	pushq	%rbp
0000000000008311	movq	%rsp,%rbp
0000000000008314	movb	%dh,0x000004d8(%rdi)
000000000000831b	movq	0x000004e0(%rdi),%rdx
0000000000008322	testq	%rdx,%rdx
0000000000008325	je	0x00008354
0000000000008327	testb	%dh,%dh
000000000000832a	je	0x0000834b
000000000000832c	cmpb	$0x00,0x0000020d(%rdi)
0000000000008333	je	0x0000834b
0000000000008335	movq	0x000001d0(%rdi),%rax
000000000000833c	cmpb	$0x00,0x0000072c(%rax)
0000000000008343	je	0x0000834b
0000000000008345	leave
0000000000008346	jmp	0x1000082a6
000000000000834b	movq	%rdx,%rdi
000000000000834e	leave
000000000000834f	jmp	0x00008354
0000000000008354	leave
0000000000008355	ret
__ZN21AppleIntelFramebuffer16getApertureRangeEi:
0000000000008356	pushq	%rbp
0000000000008357	movq	%rsp,%rbp
000000000000835a	subq	$0x20,%rsp
000000000000835e	movq	%rbx,(%rsp)
0000000000008362	movq	%r12,0x08(%rsp)
0000000000008367	movq	%r13,0x10(%rsp)
000000000000836c	movq	%r14,0x18(%rsp)
0000000000008371	movq	%rdi,%r13
0000000000008374	movl	%esi,%ebx
0000000000008376	movq	0x0000ca53(%rip),%r12
000000000000837d	movl	(%r12),%r14d
0000000000008381	testl	%r14d,%r14d
0000000000008384	je	0x000083a6
0000000000008386	movzbl	0x0000020d(%rdi),%ecx
000000000000838d	movslq	%esi,%rdx
0000000000008390	movl	0x000001d8(%rdi),%esi
0000000000008396	xorl	%r9d,%r9d
0000000000008399	xorl	%r8d,%r8d
000000000000839c	movl	$0x061284e5,%edi
00000000000083a1	callq	0x000083a6
00000000000083a6	testl	%ebx,%ebx
00000000000083a8	jne	0x000083b4
00000000000083aa	cmpb	$0x00,0x0000020d(%r13)
00000000000083b2	jne	0x000083dc
00000000000083b4	movl	(%r12),%r12d
00000000000083b8	testl	%r12d,%r12d
00000000000083bb	je	0x0000846d
00000000000083c1	xorl	%r9d,%r9d
00000000000083c4	xorl	%r8d,%r8d
00000000000083c7	xorl	%ecx,%ecx
00000000000083c9	xorl	%edx,%edx
00000000000083cb	xorl	%esi,%esi
00000000000083cd	movl	$0x061284e6,%edi
00000000000083d2	callq	0x000083d7
00000000000083d7	jmp	0x0000846d
00000000000083dc	movq	0x000001f0(%r13),%rdx
00000000000083e3	movq	0x000001e8(%r13),%rsi
00000000000083ea	movq	0x000001d0(%r13),%rax
00000000000083f1	movq	0x000000a0(%rax),%rdi
00000000000083f8	callq	0x000083fd
00000000000083fd	movq	%rax,%r14
0000000000008400	testq	%rax,%rax
0000000000008403	jne	0x0000841c
0000000000008405	movq	0x000001d0(%r13),%rax
000000000000840c	movq	0x000000a0(%rax),%r14
0000000000008413	movq	(%r14),%rax
0000000000008416	movq	%r14,%rdi
0000000000008419	call	*0x20(%rax)
000000000000841c	movl	(%r12),%ebx
0000000000008420	testl	%ebx,%ebx
0000000000008422	je	0x00008470
0000000000008424	movq	(%r14),%rax
0000000000008427	movq	%r14,%rdi
000000000000842a	call	*0x000001c8(%rax)
0000000000008430	movq	%rax,%r12
0000000000008433	movq	%r14,%rdi
0000000000008436	callq	0x0000843b
000000000000843b	movq	%rax,%rbx
000000000000843e	movq	0x000001d0(%r13),%rax
0000000000008445	movq	0x000000a0(%rax),%rdi
000000000000844c	callq	0x00008451
0000000000008451	movl	%r12d,%ecx
0000000000008454	movl	%ebx,%edx
0000000000008456	subl	%eax,%edx
0000000000008458	xorl	%r9d,%r9d
000000000000845b	xorl	%r8d,%r8d
000000000000845e	movq	%r14,%rsi
0000000000008461	movl	$0x061284e6,%edi
0000000000008466	callq	0x0000846b
000000000000846b	jmp	0x00008470
000000000000846d	xorl	%r14d,%r14d
0000000000008470	movq	%r14,%rax
0000000000008473	movq	(%rsp),%rbx
0000000000008477	movq	0x08(%rsp),%r12
000000000000847c	movq	0x10(%rsp),%r13
0000000000008481	movq	0x18(%rsp),%r14
0000000000008486	leave
0000000000008487	ret
__ZN21AppleIntelFramebuffer4stopEP9IOService:
0000000000008488	pushq	%rbp
0000000000008489	movq	%rsp,%rbp
000000000000848c	pushq	%r12
000000000000848e	pushq	%rbx
000000000000848f	movq	%rdi,%rbx
0000000000008492	movq	%rsi,%r12
0000000000008495	movq	0x00000200(%rdi),%rdi
000000000000849c	testq	%rdi,%rdi
000000000000849f	je	0x000084b6
00000000000084a1	movl	$0x00040000,%esi
00000000000084a6	callq	0x000084ab
00000000000084ab	movq	$0x00000000,0x00000200(%rbx)
00000000000084b6	movq	%r12,%rsi
00000000000084b9	movq	%rbx,%rdi
00000000000084bc	movq	0x0000c94d(%rip),%rax
00000000000084c3	call	*0x000005d8(%rax)
00000000000084c9	movq	0x000001d0(%rbx),%rdi
00000000000084d0	testq	%rdi,%rdi
00000000000084d3	je	0x000084e6
00000000000084d5	movq	(%rdi),%rax
00000000000084d8	call	*0x28(%rax)
00000000000084db	movq	$0x00000000,0x000001d0(%rbx)
00000000000084e6	movq	0x000004e0(%rbx),%rdi
00000000000084ed	testq	%rdi,%rdi
00000000000084f0	je	0x0000850e
00000000000084f2	callq	0x000084f7
00000000000084f7	movq	0x000004e0(%rbx),%rdi
00000000000084fe	callq	0x00008503
0000000000008503	movq	$0x00000000,0x000004e0(%rbx)
000000000000850e	popq	%rbx
000000000000850f	popq	%r12
0000000000008511	leave
0000000000008512	ret
0000000000008513	nop
__ZN21AppleIntelFramebuffer5startEP9IOService:
0000000000008514	pushq	%rbp
0000000000008515	movq	%rsp,%rbp
0000000000008518	pushq	%r13
000000000000851a	pushq	%r12
000000000000851c	pushq	%rbx
000000000000851d	subq	$0x00000138,%rsp
0000000000008524	movq	%rdi,%r12
0000000000008527	movq	%rsi,%r13
000000000000852a	leaq	0x00008f28(%rip),%rdi
0000000000008531	callq	0x00008536
0000000000008536	movq	%rax,%rbx
0000000000008539	movq	0x00(%r13),%rax
000000000000853d	movq	%rbx,%rsi
0000000000008540	movq	%r13,%rdi
0000000000008543	call	*0x00000420(%rax)
0000000000008549	movq	%rax,%rdi
000000000000854c	leaq	0x0000c90d(%rip),%rsi
0000000000008553	callq	0x00008558
0000000000008558	movq	%rax,0x000001d0(%r12)
0000000000008560	movq	(%rbx),%rax
0000000000008563	movq	%rbx,%rdi
0000000000008566	call	*0x28(%rax)
0000000000008569	cmpq	$0x00,0x000001d0(%r12)
0000000000008572	je	0x00008960
0000000000008578	movq	%r13,%rsi
000000000000857b	movq	%r12,%rdi
000000000000857e	movq	0x0000c88b(%rip),%rax
0000000000008585	call	*0x000005d0(%rax)
000000000000858b	testb	%al,%al
000000000000858d	je	0x00008960
0000000000008593	movq	%r12,0x0000c656(%rip)
000000000000859a	movl	$0x00040000,%edi
000000000000859f	callq	0x000085a4
00000000000085a4	movq	%rax,0x00000200(%r12)
00000000000085ac	testq	%rax,%rax
00000000000085af	jne	0x000085c2
00000000000085b1	leaq	0x00008eaf(%rip),%rdi
00000000000085b8	callq	0x000085bd
00000000000085bd	jmp	0x00008960
00000000000085c2	movl	$0x00000001,0x000004b0(%r12)
00000000000085ce	leaq	0xfffffeb0(%rbp),%rbx
00000000000085d5	movl	$0x000000f0,%edx
00000000000085da	xorl	%esi,%esi
00000000000085dc	movq	%rbx,%rdi
00000000000085df	callq	0x000085e4
00000000000085e4	movq	$0x01312d00,0xfffffed0(%rbp)
00000000000085ef	movq	$0x1017df80,0xfffffed8(%rbp)
00000000000085fa	movl	$0x0000000f,0xfffffee4(%rbp)
0000000000008604	movl	$0x0000000f,0xfffffee8(%rbp)
000000000000860e	movl	$0x00000008,0xfffffeec(%rbp)
0000000000008618	movl	$0xffffffff,0xfffffef4(%rbp)
0000000000008622	movl	$0xffffffff,0xfffffefc(%rbp)
000000000000862c	movl	$0x00000fff,0xffffff00(%rbp)
0000000000008636	movl	$0x00000fff,0xffffff04(%rbp)
0000000000008640	movl	$0x00001000,0xffffff24(%rbp)
000000000000864a	movl	$0x00000fff,0xffffff2c(%rbp)
0000000000008654	movl	$0x00000fff,0xffffff34(%rbp)
000000000000865e	movl	$0x00000fff,0xffffff3c(%rbp)
0000000000008668	movl	$0x00000600,0xffffff44(%rbp)
0000000000008672	movl	$0x00000fff,0xffffff4c(%rbp)
000000000000867c	movl	$0x00000fff,0xffffff54(%rbp)
0000000000008686	movl	$0x00000fff,0xffffff5c(%rbp)
0000000000008690	movl	$0x00000000,0xffffff64(%rbp)
000000000000869a	movl	$0x00000000,0xffffff6c(%rbp)
00000000000086a4	movl	$0x00000000,0xffffff74(%rbp)
00000000000086ae	movl	$0x00000000,0xffffff7c(%rbp)
00000000000086b8	movb	$0x01,0xffffff10(%rbp)
00000000000086bf	movb	$0x01,0xffffff11(%rbp)
00000000000086c6	movb	$0x01,0xffffff12(%rbp)
00000000000086cd	movb	$0x01,0xffffff13(%rbp)
00000000000086d4	movb	$0x01,0xffffff14(%rbp)
00000000000086db	movb	$0x01,0xffffff15(%rbp)
00000000000086e2	movb	$0x01,0xffffff16(%rbp)
00000000000086e9	movb	$0x01,0xffffff17(%rbp)
00000000000086f0	movb	$0x01,0xffffff18(%rbp)
00000000000086f7	movb	$0x01,0xffffff19(%rbp)
00000000000086fe	movb	$0x01,0xffffff1a(%rbp)
0000000000008705	movb	$0x01,0xffffff1b(%rbp)
000000000000870c	movb	$0x01,0xffffff1c(%rbp)
0000000000008713	movb	$0x01,0xffffff1d(%rbp)
000000000000871a	leaq	0x00000298(%r12),%rdi
0000000000008722	movl	$0x000000f0,%edx
0000000000008727	movq	%rbx,%rsi
000000000000872a	callq	0x0000872f
000000000000872f	movq	(%r12),%rax
0000000000008733	movl	$0x000000f0,%ecx
0000000000008738	movq	%rbx,%rdx
000000000000873b	leaq	0x00008d35(%rip),%rsi
0000000000008742	movq	%r12,%rdi
0000000000008745	call	*0x00000288(%rax)
000000000000874b	movq	$0x00000000,0x000004a0(%r12)
0000000000008757	leaq	0xa0(%rbp),%rdx
000000000000875b	cld
000000000000875c	movl	$0x00000006,%ecx
0000000000008761	xorl	%eax,%eax
0000000000008763	movq	%rdx,%rdi
0000000000008766	rep/stosq	%rax,(%edi)
0000000000008769	movl	$0x0000000a,0xb0(%rbp)
0000000000008770	movl	$0x00000fff,0xb4(%rbp)
0000000000008777	movl	$0x00000fff,0xb8(%rbp)
000000000000877e	movq	(%r12),%rax
0000000000008782	movb	$0x30,%cl
0000000000008784	leaq	0x00008cfc(%rip),%rsi
000000000000878b	movq	%r12,%rdi
000000000000878e	call	*0x00000288(%rax)
0000000000008794	movq	0x0000c655(%rip),%rax
000000000000879b	movq	(%rax),%rbx
000000000000879e	movq	(%r12),%rax
00000000000087a2	leaq	0x00008ced(%rip),%rsi
00000000000087a9	movq	%r12,%rdi
00000000000087ac	call	*0x000002b8(%rax)
00000000000087b2	movq	%rax,%rdi
00000000000087b5	movq	%rbx,%rsi
00000000000087b8	callq	0x000087bd
00000000000087bd	movq	%rax,%rdx
00000000000087c0	movl	$0x0000001f,%ebx
00000000000087c5	testq	%rax,%rax
00000000000087c8	je	0x000087db
00000000000087ca	movq	(%rax),%rax
00000000000087cd	movq	%rdx,%rdi
00000000000087d0	call	*0x00000148(%rax)
00000000000087d6	movl	%eax,%ebx
00000000000087d8	orl	$0x10,%ebx
00000000000087db	movq	(%r12),%rax
00000000000087df	movl	%ebx,%edx
00000000000087e1	movl	$0x00000020,%ecx
00000000000087e6	leaq	0x00008ca9(%rip),%rsi
00000000000087ed	movq	%r12,%rdi
00000000000087f0	call	*0x00000280(%rax)
00000000000087f6	movl	$0x00000001,%edi
00000000000087fb	callq	0x00008800
0000000000008800	movq	%rax,%rsi
0000000000008803	movq	%rax,0xd8(%rbp)
0000000000008807	testq	%rax,%rax
000000000000880a	je	0x00008881
000000000000880c	movq	(%r12),%rax
0000000000008810	xorl	%ecx,%ecx
0000000000008812	leaq	0x00008c93(%rip),%rdx
0000000000008819	movq	%r12,%rdi
000000000000881c	call	*0x000009a0(%rax)
0000000000008822	movq	(%r12),%rax
0000000000008826	movq	0xd8(%rbp),%rsi
000000000000882a	movl	%ebx,%ecx
000000000000882c	leaq	0x00008c63(%rip),%rdx
0000000000008833	movq	%r12,%rdi
0000000000008836	call	*0x000009a0(%rax)
000000000000883c	leaq	0xd8(%rbp),%rdi
0000000000008840	movl	$0x00000001,%edx
0000000000008845	movl	$0x00000001,%esi
000000000000884a	callq	0x0000884f
000000000000884f	movq	%rax,%rbx
0000000000008852	movq	0xd8(%rbp),%rdi
0000000000008856	movq	(%rdi),%rax
0000000000008859	call	*0x28(%rax)
000000000000885c	testq	%rbx,%rbx
000000000000885f	je	0x00008881
0000000000008861	movq	(%r12),%rax
0000000000008865	movq	%rbx,%rdx
0000000000008868	leaq	0x00008c4e(%rip),%rsi
000000000000886f	movq	%r12,%rdi
0000000000008872	call	*0x00000268(%rax)
0000000000008878	movq	(%rbx),%rax
000000000000887b	movq	%rbx,%rdi
000000000000887e	call	*0x28(%rax)
0000000000008881	movq	(%r12),%rax
0000000000008885	movl	$0x00000020,%ecx
000000000000888a	movl	$0x00000001,%edx
000000000000888f	leaq	0x00008c3c(%rip),%rsi
0000000000008896	movq	%r12,%rdi
0000000000008899	call	*0x00000280(%rax)
000000000000889f	leaq	0x00008c3d(%rip),%rdi
00000000000088a6	callq	0x000088ab
00000000000088ab	movq	%rax,0x000004e8(%r12)
00000000000088b3	leaq	0x00008c2c(%rip),%rdi
00000000000088ba	callq	0x000088bf
00000000000088bf	movq	%rax,0x000004f0(%r12)
00000000000088c7	leaq	0x00008c1d(%rip),%rdi
00000000000088ce	callq	0x000088d3
00000000000088d3	movq	%rax,0x000004f8(%r12)
00000000000088db	movb	$0x00,0x000004bc(%r12)
00000000000088e4	movq	0x00(%r13),%rax
00000000000088e8	leaq	0x00008c0d(%rip),%rsi
00000000000088ef	movq	%r13,%rdi
00000000000088f2	call	*0x000002b8(%rax)
00000000000088f8	testq	%rax,%rax
00000000000088fb	setne	0x0000049c(%r12)
0000000000008904	movq	%r12,%rsi
0000000000008907	leaq	0x00003d9e(%rip),%rdi
000000000000890e	callq	0x00008913
0000000000008913	movq	%rax,0x000004e0(%r12)
000000000000891b	movl	$0x3b9aca00,0x000004d4(%r12)
0000000000008927	movq	$0x00000000,0x000004c0(%r12)
0000000000008933	movq	0x000004c0(%r12),%rax
000000000000893b	movq	%rax,0x000004c8(%r12)
0000000000008943	movb	$0x00,0x000004d8(%r12)
000000000000894c	movl	$0x00000001,%esi
0000000000008951	movq	%r12,%rdi
0000000000008954	callq	0x100008310
0000000000008959	movl	$0x00000001,%eax
000000000000895e	jmp	0x00008962
0000000000008960	xorl	%eax,%eax
0000000000008962	addq	$0x00000138,%rsp
0000000000008969	popq	%rbx
000000000000896a	popq	%r12
000000000000896c	popq	%r13
000000000000896e	leave
000000000000896f	ret
__ZN21AppleIntelFramebufferC1EPK11OSMetaClass:
0000000000008970	pushq	%rbp
0000000000008971	movq	%rsp,%rbp
0000000000008974	pushq	%rbx
0000000000008975	subq	$0x08,%rsp
0000000000008979	movq	%rdi,%rbx
000000000000897c	callq	0x00008981
0000000000008981	leaq	0x0000a7c8(%rip),%rax
0000000000008988	movq	%rax,(%rbx)
000000000000898b	addq	$0x08,%rsp
000000000000898f	popq	%rbx
0000000000008990	leave
0000000000008991	ret
__ZN21AppleIntelFramebufferC2EPK11OSMetaClass:
0000000000008992	pushq	%rbp
0000000000008993	movq	%rsp,%rbp
0000000000008996	pushq	%rbx
0000000000008997	subq	$0x08,%rsp
000000000000899b	movq	%rdi,%rbx
000000000000899e	callq	0x000089a3
00000000000089a3	leaq	0x0000a7a6(%rip),%rax
00000000000089aa	movq	%rax,(%rbx)
00000000000089ad	addq	$0x08,%rsp
00000000000089b1	popq	%rbx
00000000000089b2	leave
00000000000089b3	ret
__ZN21AppleIntelFramebufferC1Ev:
00000000000089b4	pushq	%rbp
00000000000089b5	movq	%rsp,%rbp
00000000000089b8	pushq	%rbx
00000000000089b9	subq	$0x08,%rsp
00000000000089bd	movq	%rdi,%rbx
00000000000089c0	leaq	0x0000c4d9(%rip),%rsi
00000000000089c7	callq	0x000089cc
00000000000089cc	leaq	0x0000a77d(%rip),%rax
00000000000089d3	movq	%rax,(%rbx)
00000000000089d6	leaq	0x0000c4c3(%rip),%rdi
00000000000089dd	addq	$0x08,%rsp
00000000000089e1	popq	%rbx
00000000000089e2	leave
00000000000089e3	jmp	0x000089e8
__ZNK21AppleIntelFramebuffer9MetaClass5allocEv:
00000000000089e8	pushq	%rbp
00000000000089e9	movq	%rsp,%rbp
00000000000089ec	pushq	%rbx
00000000000089ed	subq	$0x08,%rsp
00000000000089f1	movl	$0x00000500,%edi
00000000000089f6	callq	0x000089fb
00000000000089fb	movq	%rax,%rbx
00000000000089fe	xorl	%eax,%eax
0000000000008a00	testq	%rbx,%rbx
0000000000008a03	je	0x00008a10
0000000000008a05	movq	%rbx,%rdi
0000000000008a08	callq	0x1000089b4
0000000000008a0d	movq	%rbx,%rax
0000000000008a10	addq	$0x08,%rsp
0000000000008a14	popq	%rbx
0000000000008a15	leave
0000000000008a16	ret
0000000000008a17	nop
__ZN21AppleIntelFramebufferC2Ev:
0000000000008a18	pushq	%rbp
0000000000008a19	movq	%rsp,%rbp
0000000000008a1c	pushq	%rbx
0000000000008a1d	subq	$0x08,%rsp
0000000000008a21	movq	%rdi,%rbx
0000000000008a24	leaq	0x0000c475(%rip),%rsi
0000000000008a2b	callq	0x00008a30
0000000000008a30	leaq	0x0000a719(%rip),%rax
0000000000008a37	movq	%rax,(%rbx)
0000000000008a3a	leaq	0x0000c45f(%rip),%rdi
0000000000008a41	addq	$0x08,%rsp
0000000000008a45	popq	%rbx
0000000000008a46	leave
0000000000008a47	jmp	0x00008a4c
__ZN21AppleIntelFramebuffer9MetaClassC1Ev:
0000000000008a4c	pushq	%rbp
0000000000008a4d	movq	%rsp,%rbp
0000000000008a50	pushq	%rbx
0000000000008a51	subq	$0x08,%rsp
0000000000008a55	movq	%rdi,%rbx
0000000000008a58	movl	$0x00000500,%ecx
0000000000008a5d	movq	0x0000c35c(%rip),%rdx
0000000000008a64	leaq	0x00008aa3(%rip),%rsi
0000000000008a6b	callq	0x00008a70
0000000000008a70	leaq	0x0000a5d9(%rip),%rax
0000000000008a77	movq	%rax,(%rbx)
0000000000008a7a	addq	$0x08,%rsp
0000000000008a7e	popq	%rbx
0000000000008a7f	leave
0000000000008a80	ret
0000000000008a81	nop
__ZN21AppleIntelFramebuffer9MetaClassC2Ev:
0000000000008a82	pushq	%rbp
0000000000008a83	movq	%rsp,%rbp
0000000000008a86	pushq	%rbx
0000000000008a87	subq	$0x08,%rsp
0000000000008a8b	movq	%rdi,%rbx
0000000000008a8e	movl	$0x00000500,%ecx
0000000000008a93	movq	0x0000c326(%rip),%rdx
0000000000008a9a	leaq	0x00008a6d(%rip),%rsi
0000000000008aa1	callq	0x00008aa6
0000000000008aa6	leaq	0x0000a5a3(%rip),%rax
0000000000008aad	movq	%rax,(%rbx)
0000000000008ab0	addq	$0x08,%rsp
0000000000008ab4	popq	%rbx
0000000000008ab5	leave
0000000000008ab6	ret
0000000000008ab7	nop
__ZN22AppleIntelHDGraphicsFB9MetaClassC1Ev:
0000000000008ab8	pushq	%rbp
0000000000008ab9	movq	%rsp,%rbp
0000000000008abc	pushq	%rbx
0000000000008abd	subq	$0x08,%rsp
0000000000008ac1	movq	%rdi,%rbx
0000000000008ac4	movl	$0x00000750,%ecx
0000000000008ac9	movq	0x0000c2e8(%rip),%rdx
0000000000008ad0	leaq	0x00008a4d(%rip),%rsi
0000000000008ad7	callq	0x00008adc
0000000000008adc	leaq	0x0000b18d(%rip),%rax
0000000000008ae3	movq	%rax,(%rbx)
0000000000008ae6	addq	$0x08,%rsp
0000000000008aea	popq	%rbx
0000000000008aeb	leave
0000000000008aec	ret
0000000000008aed	nop
__ZN22AppleIntelHDGraphicsFB9MetaClassC2Ev:
0000000000008aee	pushq	%rbp
0000000000008aef	movq	%rsp,%rbp
0000000000008af2	pushq	%rbx
0000000000008af3	subq	$0x08,%rsp
0000000000008af7	movq	%rdi,%rbx
0000000000008afa	movl	$0x00000750,%ecx
0000000000008aff	movq	0x0000c2b2(%rip),%rdx
0000000000008b06	leaq	0x00008a17(%rip),%rsi
0000000000008b0d	callq	0x00008b12
0000000000008b12	leaq	0x0000b157(%rip),%rax
0000000000008b19	movq	%rax,(%rbx)
0000000000008b1c	addq	$0x08,%rsp
0000000000008b20	popq	%rbx
0000000000008b21	leave
0000000000008b22	ret
0000000000008b23	nop
__ZN21AppleIntelFramebufferD0Ev:
0000000000008b24	pushq	%rbp
0000000000008b25	movq	%rsp,%rbp
0000000000008b28	pushq	%rbx
0000000000008b29	subq	$0x08,%rsp
0000000000008b2d	movq	%rdi,%rbx
0000000000008b30	leaq	0x0000a619(%rip),%rax
0000000000008b37	movq	%rax,(%rdi)
0000000000008b3a	callq	0x00008b3f
0000000000008b3f	movl	$0x00000500,%esi
0000000000008b44	movq	%rbx,%rdi
0000000000008b47	addq	$0x08,%rsp
0000000000008b4b	popq	%rbx
0000000000008b4c	leave
0000000000008b4d	jmp	0x00008b52
__ZN21AppleIntelFramebufferD1Ev:
0000000000008b52	pushq	%rbp
0000000000008b53	movq	%rsp,%rbp
0000000000008b56	leaq	0x0000a5f3(%rip),%rax
0000000000008b5d	movq	%rax,(%rdi)
0000000000008b60	leave
0000000000008b61	jmp	0x00008b66
__ZN21AppleIntelFramebufferD2Ev:
0000000000008b66	pushq	%rbp
0000000000008b67	movq	%rsp,%rbp
0000000000008b6a	leaq	0x0000a5df(%rip),%rax
0000000000008b71	movq	%rax,(%rdi)
0000000000008b74	leave
0000000000008b75	jmp	0x00008b7a
__ZN22AppleIntelHDGraphicsFBC1Ev:
0000000000008b7a	pushq	%rbp
0000000000008b7b	movq	%rsp,%rbp
0000000000008b7e	pushq	%rbx
0000000000008b7f	subq	$0x08,%rsp
0000000000008b83	movq	%rdi,%rbx
0000000000008b86	leaq	0x0000c2d3(%rip),%rsi
0000000000008b8d	callq	0x00008b92
0000000000008b92	leaq	0x0000b1d7(%rip),%rax
0000000000008b99	movq	%rax,(%rbx)
0000000000008b9c	leaq	0x0000c2bd(%rip),%rdi
0000000000008ba3	addq	$0x08,%rsp
0000000000008ba7	popq	%rbx
0000000000008ba8	leave
0000000000008ba9	jmp	0x00008bae
__ZNK22AppleIntelHDGraphicsFB9MetaClass5allocEv:
0000000000008bae	pushq	%rbp
0000000000008baf	movq	%rsp,%rbp
0000000000008bb2	pushq	%rbx
0000000000008bb3	subq	$0x08,%rsp
0000000000008bb7	movl	$0x00000750,%edi
0000000000008bbc	callq	0x00008bc1
0000000000008bc1	movq	%rax,%rbx
0000000000008bc4	xorl	%eax,%eax
0000000000008bc6	testq	%rbx,%rbx
0000000000008bc9	je	0x00008bd6
0000000000008bcb	movq	%rbx,%rdi
0000000000008bce	callq	0x100008b7a
0000000000008bd3	movq	%rbx,%rax
0000000000008bd6	addq	$0x08,%rsp
0000000000008bda	popq	%rbx
0000000000008bdb	leave
0000000000008bdc	ret
0000000000008bdd	nop
__ZN22AppleIntelHDGraphicsFBC2Ev:
0000000000008bde	pushq	%rbp
0000000000008bdf	movq	%rsp,%rbp
0000000000008be2	pushq	%rbx
0000000000008be3	subq	$0x08,%rsp
0000000000008be7	movq	%rdi,%rbx
0000000000008bea	leaq	0x0000c26f(%rip),%rsi
0000000000008bf1	callq	0x00008bf6
0000000000008bf6	leaq	0x0000b173(%rip),%rax
0000000000008bfd	movq	%rax,(%rbx)
0000000000008c00	leaq	0x0000c259(%rip),%rdi
0000000000008c07	addq	$0x08,%rsp
0000000000008c0b	popq	%rbx
0000000000008c0c	leave
0000000000008c0d	jmp	0x00008c12
__ZN22AppleIntelHDGraphicsFBC1EPK11OSMetaClass:
0000000000008c12	pushq	%rbp
0000000000008c13	movq	%rsp,%rbp
0000000000008c16	pushq	%rbx
0000000000008c17	subq	$0x08,%rsp
0000000000008c1b	movq	%rdi,%rbx
0000000000008c1e	callq	0x00008c23
0000000000008c23	leaq	0x0000b146(%rip),%rax
0000000000008c2a	movq	%rax,(%rbx)
0000000000008c2d	addq	$0x08,%rsp
0000000000008c31	popq	%rbx
0000000000008c32	leave
0000000000008c33	ret
__ZN22AppleIntelHDGraphicsFBC2EPK11OSMetaClass:
0000000000008c34	pushq	%rbp
0000000000008c35	movq	%rsp,%rbp
0000000000008c38	pushq	%rbx
0000000000008c39	subq	$0x08,%rsp
0000000000008c3d	movq	%rdi,%rbx
0000000000008c40	callq	0x00008c45
0000000000008c45	leaq	0x0000b124(%rip),%rax
0000000000008c4c	movq	%rax,(%rbx)
0000000000008c4f	addq	$0x08,%rsp
0000000000008c53	popq	%rbx
0000000000008c54	leave
0000000000008c55	ret
__ZN22AppleIntelHDGraphicsFBD0Ev:
0000000000008c56	pushq	%rbp
0000000000008c57	movq	%rsp,%rbp
0000000000008c5a	pushq	%rbx
0000000000008c5b	subq	$0x08,%rsp
0000000000008c5f	movq	%rdi,%rbx
0000000000008c62	leaq	0x0000b107(%rip),%rax
0000000000008c69	movq	%rax,(%rdi)
0000000000008c6c	callq	0x00008c71
0000000000008c71	movl	$0x00000750,%esi
0000000000008c76	movq	%rbx,%rdi
0000000000008c79	addq	$0x08,%rsp
0000000000008c7d	popq	%rbx
0000000000008c7e	leave
0000000000008c7f	jmp	0x00008c84
__ZN22AppleIntelHDGraphicsFBD1Ev:
0000000000008c84	pushq	%rbp
0000000000008c85	movq	%rsp,%rbp
0000000000008c88	leaq	0x0000b0e1(%rip),%rax
0000000000008c8f	movq	%rax,(%rdi)
0000000000008c92	leave
0000000000008c93	jmp	0x00008c98
__ZN22AppleIntelHDGraphicsFBD2Ev:
0000000000008c98	pushq	%rbp
0000000000008c99	movq	%rsp,%rbp
0000000000008c9c	leaq	0x0000b0cd(%rip),%rax
0000000000008ca3	movq	%rax,(%rdi)
0000000000008ca6	leave
0000000000008ca7	jmp	0x00008cac
__ZN22AppleIntelHDGraphicsFB11hwPrintRegsEv:
0000000000008cac	pushq	%rbp
0000000000008cad	movq	%rsp,%rbp
0000000000008cb0	pushq	%rbx
0000000000008cb1	subq	$0x08,%rsp
0000000000008cb5	movq	%rdi,%rbx
0000000000008cb8	leaq	0x0000887c(%rip),%rdi
0000000000008cbf	xorl	%eax,%eax
0000000000008cc1	callq	0x00008cc6
0000000000008cc6	movq	0x00000098(%rbx),%rax
0000000000008ccd	movl	0x00002020(%rax),%esi
0000000000008cd3	leaq	0x00008879(%rip),%rdi
0000000000008cda	xorl	%eax,%eax
0000000000008cdc	callq	0x00008ce1
0000000000008ce1	movq	0x00000098(%rbx),%rax
0000000000008ce8	movl	0x000020a0(%rax),%esi
0000000000008cee	leaq	0x0000887a(%rip),%rdi
0000000000008cf5	xorl	%eax,%eax
0000000000008cf7	callq	0x00008cfc
0000000000008cfc	movq	0x00000098(%rbx),%rax
0000000000008d03	movl	0x000020a4(%rax),%esi
0000000000008d09	leaq	0x00008875(%rip),%rdi
0000000000008d10	xorl	%eax,%eax
0000000000008d12	callq	0x00008d17
0000000000008d17	movq	0x00000098(%rbx),%rax
0000000000008d1e	movl	0x000020a8(%rax),%esi
0000000000008d24	leaq	0x00008870(%rip),%rdi
0000000000008d2b	xorl	%eax,%eax
0000000000008d2d	callq	0x00008d32
0000000000008d32	movq	0x00000098(%rbx),%rax
0000000000008d39	movl	0x000e1100(%rax),%esi
0000000000008d3f	leaq	0x0000886b(%rip),%rdi
0000000000008d46	xorl	%eax,%eax
0000000000008d48	callq	0x00008d4d
0000000000008d4d	movq	0x00000098(%rbx),%rax
0000000000008d54	movl	0x000e1180(%rax),%esi
0000000000008d5a	leaq	0x00008867(%rip),%rdi
0000000000008d61	xorl	%eax,%eax
0000000000008d63	callq	0x00008d68
0000000000008d68	movq	0x00000098(%rbx),%rax
0000000000008d6f	movl	0x00041000(%rax),%esi
0000000000008d75	leaq	0x00008863(%rip),%rdi
0000000000008d7c	xorl	%eax,%eax
0000000000008d7e	callq	0x00008d83
0000000000008d83	movq	0x00000098(%rbx),%rax
0000000000008d8a	movl	0x000c7204(%rax),%esi
0000000000008d90	leaq	0x00008865(%rip),%rdi
0000000000008d97	xorl	%eax,%eax
0000000000008d99	callq	0x00008d9e
0000000000008d9e	movq	0x00000098(%rbx),%rax
0000000000008da5	movl	0x000c7200(%rax),%esi
0000000000008dab	leaq	0x00008867(%rip),%rdi
0000000000008db2	xorl	%eax,%eax
0000000000008db4	callq	0x00008db9
0000000000008db9	movq	0x00000098(%rbx),%rax
0000000000008dc0	movl	0x000c7208(%rax),%esi
0000000000008dc6	leaq	0x0000886b(%rip),%rdi
0000000000008dcd	xorl	%eax,%eax
0000000000008dcf	callq	0x00008dd4
0000000000008dd4	movq	0x00000098(%rbx),%rax
0000000000008ddb	movl	0x000c720c(%rax),%esi
0000000000008de1	leaq	0x00008870(%rip),%rdi
0000000000008de8	xorl	%eax,%eax
0000000000008dea	callq	0x00008def
0000000000008def	movq	0x00000098(%rbx),%rax
0000000000008df6	movl	0x000c7210(%rax),%esi
0000000000008dfc	leaq	0x00008875(%rip),%rdi
0000000000008e03	xorl	%eax,%eax
0000000000008e05	callq	0x00008e0a
0000000000008e0a	movq	0x00000098(%rbx),%rax
0000000000008e11	movl	0x00061000(%rax),%esi
0000000000008e17	leaq	0x00008877(%rip),%rdi
0000000000008e1e	xorl	%eax,%eax
0000000000008e20	callq	0x00008e25
0000000000008e25	movq	0x00000098(%rbx),%rax
0000000000008e2c	movl	0x00061004(%rax),%esi
0000000000008e32	leaq	0x00008877(%rip),%rdi
0000000000008e39	xorl	%eax,%eax
0000000000008e3b	callq	0x00008e40
0000000000008e40	movq	0x00000098(%rbx),%rax
0000000000008e47	movl	0x00061008(%rax),%esi
0000000000008e4d	leaq	0x00008877(%rip),%rdi
0000000000008e54	xorl	%eax,%eax
0000000000008e56	callq	0x00008e5b
0000000000008e5b	movq	0x00000098(%rbx),%rax
0000000000008e62	movl	0x0006100c(%rax),%esi
0000000000008e68	leaq	0x00008876(%rip),%rdi
0000000000008e6f	xorl	%eax,%eax
0000000000008e71	callq	0x00008e76
0000000000008e76	movq	0x00000098(%rbx),%rax
0000000000008e7d	movl	0x00061010(%rax),%esi
0000000000008e83	leaq	0x00008876(%rip),%rdi
0000000000008e8a	xorl	%eax,%eax
0000000000008e8c	callq	0x00008e91
0000000000008e91	movq	0x00000098(%rbx),%rax
0000000000008e98	movl	0x00061014(%rax),%esi
0000000000008e9e	leaq	0x00008876(%rip),%rdi
0000000000008ea5	xorl	%eax,%eax
0000000000008ea7	callq	0x00008eac
0000000000008eac	movq	0x00000098(%rbx),%rax
0000000000008eb3	movl	0x0006101c(%rax),%esi
0000000000008eb9	leaq	0x00008875(%rip),%rdi
0000000000008ec0	xorl	%eax,%eax
0000000000008ec2	callq	0x00008ec7
0000000000008ec7	movq	0x00000098(%rbx),%rax
0000000000008ece	movl	0x00071008(%rax),%esi
0000000000008ed4	leaq	0x00008875(%rip),%rdi
0000000000008edb	xorl	%eax,%eax
0000000000008edd	callq	0x00008ee2
0000000000008ee2	movq	0x00000098(%rbx),%rax
0000000000008ee9	movl	0x00071180(%rax),%esi
0000000000008eef	leaq	0x00008876(%rip),%rdi
0000000000008ef6	xorl	%eax,%eax
0000000000008ef8	callq	0x00008efd
0000000000008efd	movq	0x00000098(%rbx),%rax
0000000000008f04	movl	0x00071188(%rax),%esi
0000000000008f0a	leaq	0x00008876(%rip),%rdi
0000000000008f11	xorl	%eax,%eax
0000000000008f13	callq	0x00008f18
0000000000008f18	movq	0x00000098(%rbx),%rax
0000000000008f1f	movl	0x00071184(%rax),%esi
0000000000008f25	leaq	0x0000887c(%rip),%rdi
0000000000008f2c	xorl	%eax,%eax
0000000000008f2e	callq	0x00008f33
0000000000008f33	movq	0x00000098(%rbx),%rax
0000000000008f3a	movl	0x0007119c(%rax),%esi
0000000000008f40	leaq	0x00008881(%rip),%rdi
0000000000008f47	xorl	%eax,%eax
0000000000008f49	callq	0x00008f4e
0000000000008f4e	movq	0x00000098(%rbx),%rax
0000000000008f55	movl	0x000711a4(%rax),%esi
0000000000008f5b	leaq	0x00008881(%rip),%rdi
0000000000008f62	xorl	%eax,%eax
0000000000008f64	callq	0x00008f69
0000000000008f69	movq	0x00000098(%rbx),%rax
0000000000008f70	movl	0x000c6018(%rax),%esi
0000000000008f76	leaq	0x00008884(%rip),%rdi
0000000000008f7d	xorl	%eax,%eax
0000000000008f7f	callq	0x00008f84
0000000000008f84	movq	0x00000098(%rbx),%rax
0000000000008f8b	movl	0x000c6048(%rax),%esi
0000000000008f91	leaq	0x00008886(%rip),%rdi
0000000000008f98	xorl	%eax,%eax
0000000000008f9a	callq	0x00008f9f
0000000000008f9f	movq	0x00000098(%rbx),%rax
0000000000008fa6	movl	0x000c604c(%rax),%esi
0000000000008fac	leaq	0x00008882(%rip),%rdi
0000000000008fb3	xorl	%eax,%eax
0000000000008fb5	callq	0x00008fba
0000000000008fba	movq	0x00000098(%rbx),%rax
0000000000008fc1	movl	0x000700c0(%rax),%esi
0000000000008fc7	leaq	0x0000887e(%rip),%rdi
0000000000008fce	xorl	%eax,%eax
0000000000008fd0	callq	0x00008fd5
0000000000008fd5	movq	0x00000098(%rbx),%rax
0000000000008fdc	movl	0x000700c4(%rax),%esi
0000000000008fe2	leaq	0x0000887e(%rip),%rdi
0000000000008fe9	xorl	%eax,%eax
0000000000008feb	callq	0x00008ff0
0000000000008ff0	movq	0x00000098(%rbx),%rax
0000000000008ff7	movl	0x000700c8(%rax),%esi
0000000000008ffd	leaq	0x0000887e(%rip),%rdi
0000000000009004	xorl	%eax,%eax
0000000000009006	callq	0x0000900b
000000000000900b	movq	0x00000098(%rbx),%rax
0000000000009012	movl	0x00060000(%rax),%esi
0000000000009018	leaq	0x0000887d(%rip),%rdi
000000000000901f	xorl	%eax,%eax
0000000000009021	callq	0x00009026
0000000000009026	movq	0x00000098(%rbx),%rax
000000000000902d	movl	0x00060004(%rax),%esi
0000000000009033	leaq	0x0000887d(%rip),%rdi
000000000000903a	xorl	%eax,%eax
000000000000903c	callq	0x00009041
0000000000009041	movq	0x00000098(%rbx),%rax
0000000000009048	movl	0x00060008(%rax),%esi
000000000000904e	leaq	0x0000887d(%rip),%rdi
0000000000009055	xorl	%eax,%eax
0000000000009057	callq	0x0000905c
000000000000905c	movq	0x00000098(%rbx),%rax
0000000000009063	movl	0x0006000c(%rax),%esi
0000000000009069	leaq	0x0000887c(%rip),%rdi
0000000000009070	xorl	%eax,%eax
0000000000009072	callq	0x00009077
0000000000009077	movq	0x00000098(%rbx),%rax
000000000000907e	movl	0x00060010(%rax),%esi
0000000000009084	leaq	0x0000887c(%rip),%rdi
000000000000908b	xorl	%eax,%eax
000000000000908d	callq	0x00009092
0000000000009092	movq	0x00000098(%rbx),%rax
0000000000009099	movl	0x00060014(%rax),%esi
000000000000909f	leaq	0x0000887c(%rip),%rdi
00000000000090a6	xorl	%eax,%eax
00000000000090a8	callq	0x000090ad
00000000000090ad	movq	0x00000098(%rbx),%rax
00000000000090b4	movl	0x0006001c(%rax),%esi
00000000000090ba	leaq	0x0000887b(%rip),%rdi
00000000000090c1	xorl	%eax,%eax
00000000000090c3	callq	0x000090c8
00000000000090c8	movq	0x00000098(%rbx),%rax
00000000000090cf	movl	0x00070008(%rax),%esi
00000000000090d5	leaq	0x0000887b(%rip),%rdi
00000000000090dc	xorl	%eax,%eax
00000000000090de	callq	0x000090e3
00000000000090e3	movq	0x00000098(%rbx),%rax
00000000000090ea	movl	0x00070180(%rax),%esi
00000000000090f0	leaq	0x0000887c(%rip),%rdi
00000000000090f7	xorl	%eax,%eax
00000000000090f9	callq	0x000090fe
00000000000090fe	movq	0x00000098(%rbx),%rax
0000000000009105	movl	0x00070188(%rax),%esi
000000000000910b	leaq	0x0000887c(%rip),%rdi
0000000000009112	xorl	%eax,%eax
0000000000009114	callq	0x00009119
0000000000009119	movq	0x00000098(%rbx),%rax
0000000000009120	movl	0x00070184(%rax),%esi
0000000000009126	leaq	0x0000887e(%rip),%rdi
000000000000912d	xorl	%eax,%eax
000000000000912f	callq	0x00009134
0000000000009134	movq	0x00000098(%rbx),%rax
000000000000913b	movl	0x0007019c(%rax),%esi
0000000000009141	leaq	0x00008880(%rip),%rdi
0000000000009148	xorl	%eax,%eax
000000000000914a	callq	0x0000914f
000000000000914f	movq	0x00000098(%rbx),%rax
0000000000009156	movl	0x000701a4(%rax),%esi
000000000000915c	leaq	0x00008880(%rip),%rdi
0000000000009163	xorl	%eax,%eax
0000000000009165	callq	0x0000916a
000000000000916a	movq	0x00000098(%rbx),%rax
0000000000009171	movl	0x000c6014(%rax),%esi
0000000000009177	leaq	0x00008883(%rip),%rdi
000000000000917e	xorl	%eax,%eax
0000000000009180	callq	0x00009185
0000000000009185	movq	0x00000098(%rbx),%rax
000000000000918c	movl	0x000c6040(%rax),%esi
0000000000009192	leaq	0x00008885(%rip),%rdi
0000000000009199	xorl	%eax,%eax
000000000000919b	callq	0x000091a0
00000000000091a0	movq	0x00000098(%rbx),%rax
00000000000091a7	movl	0x000c6044(%rax),%esi
00000000000091ad	leaq	0x00008881(%rip),%rdi
00000000000091b4	xorl	%eax,%eax
00000000000091b6	callq	0x000091bb
00000000000091bb	movq	0x00000098(%rbx),%rax
00000000000091c2	movl	0x00070080(%rax),%esi
00000000000091c8	leaq	0x0000887d(%rip),%rdi
00000000000091cf	xorl	%eax,%eax
00000000000091d1	callq	0x000091d6
00000000000091d6	movq	0x00000098(%rbx),%rax
00000000000091dd	movl	0x00070084(%rax),%esi
00000000000091e3	leaq	0x0000887d(%rip),%rdi
00000000000091ea	xorl	%eax,%eax
00000000000091ec	callq	0x000091f1
00000000000091f1	movq	0x00000098(%rbx),%rax
00000000000091f8	movl	0x00070088(%rax),%esi
00000000000091fe	leaq	0x0000887d(%rip),%rdi
0000000000009205	xorl	%eax,%eax
0000000000009207	callq	0x0000920c
000000000000920c	movq	0x00000098(%rbx),%rax
0000000000009213	movl	0x00068000(%rax),%esi
0000000000009219	leaq	0x0000887c(%rip),%rdi
0000000000009220	xorl	%eax,%eax
0000000000009222	callq	0x00009227
0000000000009227	movq	0x00000098(%rbx),%rax
000000000000922e	movl	0x00068004(%rax),%esi
0000000000009234	leaq	0x0000887a(%rip),%rdi
000000000000923b	xorl	%eax,%eax
000000000000923d	callq	0x00009242
0000000000009242	leaq	0x00008885(%rip),%rdi
0000000000009249	xorl	%eax,%eax
000000000000924b	callq	0x00009250
0000000000009250	xorl	%eax,%eax
0000000000009252	addq	$0x08,%rsp
0000000000009256	popq	%rbx
0000000000009257	leave
0000000000009258	ret
0000000000009259	nop
__ZN22AppleIntelHDGraphicsFB17writefRegisters32Ejj:
000000000000925a	pushq	%rbp
000000000000925b	movq	%rsp,%rbp
000000000000925e	movl	%esi,%esi
0000000000009260	addq	0x00000098(%rdi),%rsi
0000000000009267	movl	%edx,(%rsi)
0000000000009269	leave
000000000000926a	ret
000000000000926b	nop
__ZN22AppleIntelHDGraphicsFB9MetaClassD0Ev:
000000000000926c	pushq	%rbp
000000000000926d	movq	%rsp,%rbp
0000000000009270	leaq	0x0000a9f9(%rip),%rax
0000000000009277	movq	%rax,(%rdi)
000000000000927a	leave
000000000000927b	jmp	0x00009280
__ZN22AppleIntelHDGraphicsFB9MetaClassD1Ev:
0000000000009280	pushq	%rbp
0000000000009281	movq	%rsp,%rbp
0000000000009284	leaq	0x0000a9e5(%rip),%rax
000000000000928b	movq	%rax,(%rdi)
000000000000928e	leave
000000000000928f	jmp	0x00009294
__ZN21AppleIntelFramebuffer9MetaClassD0Ev:
0000000000009294	pushq	%rbp
0000000000009295	movq	%rsp,%rbp
0000000000009298	leaq	0x00009db1(%rip),%rax
000000000000929f	movq	%rax,(%rdi)
00000000000092a2	leave
00000000000092a3	jmp	0x000092a8
__ZN21AppleIntelFramebuffer28getInformationForDisplayModeEiP24IODisplayModeInformation:
00000000000092a8	pushq	%rbp
00000000000092a9	movq	%rsp,%rbp
00000000000092ac	subq	$0x30,%rsp
00000000000092b0	movq	%rbx,0xe0(%rbp)
00000000000092b4	movq	%r12,0xe8(%rbp)
00000000000092b8	movq	%r13,0xf0(%rbp)
00000000000092bc	movq	%r14,0xf8(%rbp)
00000000000092c0	movq	%rdi,%r13
00000000000092c3	movl	%esi,%r12d
00000000000092c6	movq	%rdx,%rbx
00000000000092c9	movq	0x0000bb00(%rip),%r14
00000000000092d0	movl	(%r14),%edi
00000000000092d3	testl	%edi,%edi
00000000000092d5	je	0x000092f3
00000000000092d7	movslq	%esi,%rdx
00000000000092da	movl	0x000001d8(%r13),%esi
00000000000092e1	xorl	%r9d,%r9d
00000000000092e4	xorl	%r8d,%r8d
00000000000092e7	xorl	%ecx,%ecx
00000000000092e9	movl	$0x0612850d,%edi
00000000000092ee	callq	0x000092f3
00000000000092f3	leaq	0xd0(%rbp),%rcx
00000000000092f7	leaq	0xd8(%rbp),%rdx
00000000000092fb	movl	%r12d,%esi
00000000000092fe	movq	%r13,%rdi
0000000000009301	callq	0x100004e1a
0000000000009306	movl	%eax,%r12d
0000000000009309	testl	%eax,%eax
000000000000930b	je	0x00009327
000000000000930d	movl	(%r14),%esi
0000000000009310	testl	%esi,%esi
0000000000009312	je	0x000093a5
0000000000009318	movslq	%eax,%rsi
000000000000931b	xorl	%r9d,%r9d
000000000000931e	xorl	%r8d,%r8d
0000000000009321	xorl	%ecx,%ecx
0000000000009323	xorl	%edx,%edx
0000000000009325	jmp	0x0000939b
0000000000009327	movq	$0x00000000,(%rbx)
000000000000932e	movq	$0x00000000,0x08(%rbx)
0000000000009336	movq	$0x00000000,0x10(%rbx)
000000000000933e	movq	$0x00000000,0x18(%rbx)
0000000000009346	movl	$0x00000000,0x20(%rbx)
000000000000934d	movl	$0x00000000,0x0c(%rbx)
0000000000009354	movq	0xd0(%rbp),%rdx
0000000000009358	movl	0x18(%rdx),%eax
000000000000935b	testl	%eax,%eax
000000000000935d	je	0x0000936d
000000000000935f	movl	0x1c(%rdx),%ecx
0000000000009362	testl	%ecx,%ecx
0000000000009364	je	0x0000936d
0000000000009366	movl	%eax,(%rbx)
0000000000009368	movl	0x1c(%rdx),%eax
000000000000936b	jmp	0x00009375
000000000000936d	movl	0x40(%rdx),%eax
0000000000009370	movl	%eax,(%rbx)
0000000000009372	movl	0x50(%rdx),%eax
0000000000009375	movl	%eax,0x04(%rbx)
0000000000009378	movq	0xd8(%rbp),%rax
000000000000937c	movl	0x04(%rax),%edx
000000000000937f	movl	%edx,0x08(%rbx)
0000000000009382	movl	0x08(%rax),%eax
0000000000009385	movl	%eax,0x10(%rbx)
0000000000009388	movl	(%r14),%eax
000000000000938b	testl	%eax,%eax
000000000000938d	je	0x000093a5
000000000000938f	xorl	%r9d,%r9d
0000000000009392	xorl	%r8d,%r8d
0000000000009395	xorl	%ecx,%ecx
0000000000009397	xorl	%edx,%edx
0000000000009399	xorl	%esi,%esi
000000000000939b	movl	$0x0612850e,%edi
00000000000093a0	callq	0x000093a5
00000000000093a5	movl	%r12d,%eax
00000000000093a8	movq	0xe0(%rbp),%rbx
00000000000093ac	movq	0xe8(%rbp),%r12
00000000000093b0	movq	0xf0(%rbp),%r13
00000000000093b4	movq	0xf8(%rbp),%r14
00000000000093b8	leave
00000000000093b9	ret
__ZN21AppleIntelFramebuffer22validateDetailedTimingEPvy:
00000000000093ba	pushq	%rbp
00000000000093bb	movq	%rsp,%rbp
00000000000093be	subq	$0x20,%rsp
00000000000093c2	movq	%rbx,(%rsp)
00000000000093c6	movq	%r12,0x08(%rsp)
00000000000093cb	movq	%r13,0x10(%rsp)
00000000000093d0	movq	%r14,0x18(%rsp)
00000000000093d5	movq	%rdi,%r13
00000000000093d8	movq	%rsi,%rbx
00000000000093db	movq	%rdx,%r12
00000000000093de	movq	0x0000b9eb(%rip),%r14
00000000000093e5	movl	(%r14),%r10d
00000000000093e8	testl	%r10d,%r10d
00000000000093eb	je	0x00009409
00000000000093ed	movl	0x000001d8(%rdi),%esi
00000000000093f3	xorl	%r9d,%r9d
00000000000093f6	xorl	%r8d,%r8d
00000000000093f9	movq	%rdx,%rcx
00000000000093fc	movq	%rbx,%rdx
00000000000093ff	movl	$0x06128511,%edi
0000000000009404	callq	0x00009409
0000000000009409	cmpq	$0x000000cc,%r12
0000000000009410	jne	0x0000947c
0000000000009412	cmpl	$0x02,0x00000210(%r13)
000000000000941a	jne	0x00009453
000000000000941c	movl	0x00000220(%r13),%eax
0000000000009423	cmpl	$0x00838322,%eax
0000000000009428	jne	0x0000943a
000000000000942a	movq	$0x0000025800000320,%rax
0000000000009434	cmpq	%rax,0x44(%rbx)
0000000000009438	jmp	0x00009451
000000000000943a	cmpl	$0x5900d94d,%eax
000000000000943f	jne	0x00009453
0000000000009441	cmpl	$0x00000280,0x6c(%rbx)
0000000000009448	jne	0x00009453
000000000000944a	cmpl	$0x000001e0,0x7c(%rbx)
0000000000009451	je	0x000094a0
0000000000009453	movl	$0x00000000,0x0c(%rbx)
000000000000945a	movl	0x44(%rbx),%eax
000000000000945d	testl	%eax,%eax
000000000000945f	je	0x00009471
0000000000009461	movl	0x48(%rbx),%r9d
0000000000009465	testl	%r9d,%r9d
0000000000009468	je	0x00009471
000000000000946a	movl	%eax,(%rbx)
000000000000946c	movl	0x48(%rbx),%eax
000000000000946f	jmp	0x00009479
0000000000009471	movl	0x6c(%rbx),%eax
0000000000009474	movl	%eax,(%rbx)
0000000000009476	movl	0x7c(%rbx),%eax
0000000000009479	movl	%eax,0x04(%rbx)
000000000000947c	xorl	%eax,%eax
000000000000947e	movl	(%r14),%r8d
0000000000009481	testl	%r8d,%r8d
0000000000009484	je	0x000094a5
0000000000009486	xorl	%r9d,%r9d
0000000000009489	xorl	%r8d,%r8d
000000000000948c	xorl	%ecx,%ecx
000000000000948e	xorl	%edx,%edx
0000000000009490	xorl	%esi,%esi
0000000000009492	movl	$0x06128512,%edi
0000000000009497	callq	0x0000949c
000000000000949c	xorl	%eax,%eax
000000000000949e	jmp	0x000094a5
00000000000094a0	movl	$0xe00002c7,%eax
00000000000094a5	movq	(%rsp),%rbx
00000000000094a9	movq	0x08(%rsp),%r12
00000000000094ae	movq	0x10(%rsp),%r13
00000000000094b3	movq	0x18(%rsp),%r14
00000000000094b8	leave
00000000000094b9	ret
__ZN21AppleIntelFramebuffer19getPixelInformationEiiiP18IOPixelInformation:
00000000000094ba	pushq	%rbp
00000000000094bb	movq	%rsp,%rbp
00000000000094be	subq	$0x50,%rsp
00000000000094c2	movq	%rbx,0xd8(%rbp)
00000000000094c6	movq	%r12,0xe0(%rbp)
00000000000094ca	movq	%r13,0xe8(%rbp)
00000000000094ce	movq	%r14,0xf0(%rbp)
00000000000094d2	movq	%r15,0xf8(%rbp)
00000000000094d6	movq	%rdi,%r13
00000000000094d9	movl	%esi,%r14d
00000000000094dc	movl	%edx,0xbc(%rbp)
00000000000094df	movl	%ecx,%r12d
00000000000094e2	movq	%r8,%rbx
00000000000094e5	movq	0x0000b8e4(%rip),%r15
00000000000094ec	movl	(%r15),%r8d
00000000000094ef	testl	%r8d,%r8d
00000000000094f2	je	0x00009510
00000000000094f4	movslq	%edx,%rcx
00000000000094f7	movslq	%esi,%rdx
00000000000094fa	movl	0x000001d8(%rdi),%esi
0000000000009500	xorl	%r9d,%r9d
0000000000009503	movslq	%r12d,%r8
0000000000009506	movl	$0x06128509,%edi
000000000000950b	callq	0x00009510
0000000000009510	testl	%r12d,%r12d
0000000000009513	jne	0x000096aa
0000000000009519	leaq	0xc0(%rbp),%rcx
000000000000951d	leaq	0xc8(%rbp),%rdx
0000000000009521	movl	%r14d,%esi
0000000000009524	movq	%r13,%rdi
0000000000009527	callq	0x100004e1a
000000000000952c	movl	%eax,%r12d
000000000000952f	testl	%eax,%eax
0000000000009531	je	0x00009550
0000000000009533	movl	(%r15),%edi
0000000000009536	testl	%edi,%edi
0000000000009538	je	0x000096b4
000000000000953e	movslq	%eax,%rsi
0000000000009541	xorl	%r9d,%r9d
0000000000009544	xorl	%r8d,%r8d
0000000000009547	xorl	%ecx,%ecx
0000000000009549	xorl	%edx,%edx
000000000000954b	jmp	0x00009696
0000000000009550	movl	$0x000000ac,%edx
0000000000009555	xorl	%esi,%esi
0000000000009557	movq	%rbx,%rdi
000000000000955a	callq	0x0000955f
000000000000955f	movq	0x000001d0(%r13),%rax
0000000000009566	cmpb	$0x00,0x00000164(%rax)
000000000000956d	je	0x000095a8
000000000000956f	cmpb	$0x00,0x0000020d(%r13)
0000000000009577	je	0x000095a8
0000000000009579	movl	0x000004b4(%r13),%eax
0000000000009580	testl	%eax,%eax
0000000000009582	je	0x000095a8
0000000000009584	movl	0x000004b8(%r13),%esi
000000000000958b	testl	%esi,%esi
000000000000958d	je	0x000095a8
000000000000958f	movl	%eax,0x0000009c(%rbx)
0000000000009595	movl	0x000004b8(%r13),%eax
000000000000959c	movl	%eax,0x000000a0(%rbx)
00000000000095a2	movq	0xc0(%rbp),%rdx
00000000000095a6	jmp	0x000095d7
00000000000095a8	movq	0xc0(%rbp),%rdx
00000000000095ac	movl	0x18(%rdx),%eax
00000000000095af	testl	%eax,%eax
00000000000095b1	je	0x000095c5
00000000000095b3	movl	0x1c(%rdx),%ecx
00000000000095b6	testl	%ecx,%ecx
00000000000095b8	je	0x000095c5
00000000000095ba	movl	%eax,0x0000009c(%rbx)
00000000000095c0	movl	0x1c(%rdx),%eax
00000000000095c3	jmp	0x000095d1
00000000000095c5	movl	0x40(%rdx),%eax
00000000000095c8	movl	%eax,0x0000009c(%rbx)
00000000000095ce	movl	0x50(%rdx),%eax
00000000000095d1	movl	%eax,0x000000a0(%rbx)
00000000000095d7	movl	$0x00000000,0x04(%rbx)
00000000000095de	movl	0x14(%rdx),%eax
00000000000095e1	movl	%eax,0x00000098(%rbx)
00000000000095e7	movl	0xbc(%rbp),%r14d
00000000000095eb	testl	%r14d,%r14d
00000000000095ee	jne	0x000096aa
00000000000095f4	leaq	0x58(%rbx),%rdi
00000000000095f8	movl	$0x00000040,%edx
00000000000095fd	leaq	0x000084e4(%rip),%rsi
0000000000009604	callq	0x00009609
0000000000009609	movl	$0x00000002,0x0c(%rbx)
0000000000009610	movl	$0x00ff0000,0x18(%rbx)
0000000000009617	movl	$0x0000ff00,0x1c(%rbx)
000000000000961e	movl	$0x000000ff,0x20(%rbx)
0000000000009625	movl	$0x00000020,0x08(%rbx)
000000000000962c	movl	$0x00000003,0x10(%rbx)
0000000000009633	movl	$0x00000008,0x14(%rbx)
000000000000963a	movslq	0x000001d8(%r13),%rax
0000000000009641	imulq	$0x000000f0,%rax,%rax
0000000000009648	addq	0x000001d0(%r13),%rax
000000000000964f	movl	0x000001f0(%rax),%edx
0000000000009655	movl	%edx,%ecx
0000000000009657	movl	$0x00002000,%eax
000000000000965c	testl	%edx,%edx
000000000000965e	cmovneq	%rcx,%rax
0000000000009662	movl	%eax,(%rbx)
0000000000009664	movl	(%r15),%ebx
0000000000009667	testl	%ebx,%ebx
0000000000009669	je	0x000096b4
000000000000966b	jmp	0x0000968a
000000000000966d	xorl	%r9d,%r9d
0000000000009670	xorl	%r8d,%r8d
0000000000009673	xorl	%ecx,%ecx
0000000000009675	xorl	%edx,%edx
0000000000009677	movq	$0xe00002e6,%rsi
000000000000967e	movl	$0x0612850a,%edi
0000000000009683	callq	0x00009688
0000000000009688	jmp	0x000096a2
000000000000968a	xorl	%r9d,%r9d
000000000000968d	xorl	%r8d,%r8d
0000000000009690	xorl	%ecx,%ecx
0000000000009692	xorl	%edx,%edx
0000000000009694	xorl	%esi,%esi
0000000000009696	movl	$0x0612850a,%edi
000000000000969b	callq	0x000096a0
00000000000096a0	jmp	0x000096b4
00000000000096a2	movl	$0xe00002e6,%r12d
00000000000096a8	jmp	0x000096b4
00000000000096aa	movl	(%r15),%r11d
00000000000096ad	testl	%r11d,%r11d
00000000000096b0	je	0x000096a2
00000000000096b2	jmp	0x0000966d
00000000000096b4	movl	%r12d,%eax
00000000000096b7	movq	0xd8(%rbp),%rbx
00000000000096bb	movq	0xe0(%rbp),%r12
00000000000096bf	movq	0xe8(%rbp),%r13
00000000000096c3	movq	0xf0(%rbp),%r14
00000000000096c7	movq	0xf8(%rbp),%r15
00000000000096cb	leave
00000000000096cc	ret
00000000000096cd	nop
__ZN21AppleIntelFramebuffer14setCursorImageEPv:
00000000000096ce	pushq	%rbp
00000000000096cf	movq	%rsp,%rbp
00000000000096d2	subq	$0x000000d0,%rsp
00000000000096d9	movq	%rbx,0xe0(%rbp)
00000000000096dd	movq	%r12,0xe8(%rbp)
00000000000096e1	movq	%r13,0xf0(%rbp)
00000000000096e5	movq	%r14,0xf8(%rbp)
00000000000096e9	movq	%rdi,%r13
00000000000096ec	movq	%rsi,%r12
00000000000096ef	leaq	0xffffff30(%rbp),%rbx
00000000000096f6	movl	$0x00000068,%edx
00000000000096fb	xorl	%esi,%esi
00000000000096fd	movq	%rbx,%rdi
0000000000009700	callq	0x00009705
0000000000009705	leaq	0xa0(%rbp),%r14
0000000000009709	cld
000000000000970a	movl	$0x00000007,%ecx
000000000000970f	xorl	%eax,%eax
0000000000009711	movq	%r14,%rdi
0000000000009714	rep/stosq	%rax,(%edi)
0000000000009717	movw	$0x0001,0xffffff30(%rbp)
0000000000009720	movw	$0x0000,0xffffff32(%rbp)
0000000000009729	movl	$0x00000040,0xffffff34(%rbp)
0000000000009733	movl	$0x00000040,0xffffff38(%rbp)
000000000000973d	movl	$0x00000020,0xffffff3c(%rbp)
0000000000009747	movl	$0x00000000,0xffffff40(%rbp)
0000000000009751	movl	$0x00000000,0xffffff44(%rbp)
000000000000975b	movl	$0x00000000,0xffffff50(%rbp)
0000000000009765	movl	$0x00000004,0xffffff54(%rbp)
000000000000976f	movq	$0x00000000,0xffffff48(%rbp)
000000000000977a	movl	$0x00ffffff,0xffffff5c(%rbp)
0000000000009784	movw	$0x0001,0xa0(%rbp)
000000000000978a	movw	$0x0000,0xa2(%rbp)
0000000000009790	movq	$0x00000000,0xb0(%rbp)
0000000000009798	movq	0x00000200(%r13),%rax
000000000000979f	movq	%rax,0xb8(%rbp)
00000000000097a3	movq	0x00(%r13),%rax
00000000000097a7	movq	%r14,%rcx
00000000000097aa	movq	%rbx,%rdx
00000000000097ad	movq	%r12,%rsi
00000000000097b0	movq	%r13,%rdi
00000000000097b3	call	*0x00000a68(%rax)
00000000000097b9	movl	%eax,%esi
00000000000097bb	movl	0x000001e4(%r13),%r9d
00000000000097c2	testl	%r9d,%r9d
00000000000097c5	jne	0x000097e8
00000000000097c7	movq	0x000001d0(%r13),%rdx
00000000000097ce	cmpb	$0x00,0x00000164(%rdx)
00000000000097d5	je	0x000097e8
00000000000097d7	movl	0x000001d8(%r13),%eax
00000000000097de	xorl	%ecx,%ecx
00000000000097e0	cmpl	0x00000168(%rdx),%eax
00000000000097e6	jne	0x0000980a
00000000000097e8	movl	$0xe00002c7,%ecx
00000000000097ed	testb	%dh,%dh
00000000000097f0	je	0x0000980a
00000000000097f2	movl	0x000001d8(%r13),%esi
00000000000097f9	movq	0x000001d0(%r13),%rdi
0000000000009800	movq	%r14,%rdx
0000000000009803	callq	0x1000058cc
0000000000009808	movl	%eax,%ecx
000000000000980a	movl	%ecx,%eax
000000000000980c	movq	0xe0(%rbp),%rbx
0000000000009810	movq	0xe8(%rbp),%r12
0000000000009814	movq	0xf0(%rbp),%r13
0000000000009818	movq	0xf8(%rbp),%r14
000000000000981c	leave
000000000000981d	ret
__ZN21AppleIntelFramebuffer12getAttributeEjPm:
000000000000981e	pushq	%rbp
000000000000981f	movq	%rsp,%rbp
0000000000009822	subq	$0x30,%rsp
0000000000009826	movq	%rbx,0xd8(%rbp)
000000000000982a	movq	%r12,0xe0(%rbp)
000000000000982e	movq	%r13,0xe8(%rbp)
0000000000009832	movq	%r14,0xf0(%rbp)
0000000000009836	movq	%r15,0xf8(%rbp)
000000000000983a	movq	%rdi,%r13
000000000000983d	movl	%esi,%ebx
000000000000983f	movq	%rdx,%r12
0000000000009842	movq	0x0000b587(%rip),%r14
0000000000009849	movl	(%r14),%r15d
000000000000984c	testl	%r15d,%r15d
000000000000984f	je	0x0000986c
0000000000009851	movl	%esi,%edx
0000000000009853	movl	0x000001d8(%rdi),%esi
0000000000009859	xorl	%r9d,%r9d
000000000000985c	xorl	%r8d,%r8d
000000000000985f	movq	%r12,%rcx
0000000000009862	movl	$0x06128419,%edi
0000000000009867	callq	0x0000986c
000000000000986c	cmpl	$0x6d637673,%ebx
0000000000009872	je	0x000099e1
0000000000009878	ja	0x0000989f
000000000000987a	cmpl	$0x626b7376,%ebx
0000000000009880	je	0x00009980
0000000000009886	cmpl	$0x63727372,%ebx
000000000000988c	je	0x000098d1
000000000000988e	cmpl	$0x20646773,%ebx
0000000000009894	jne	0x000099c7
000000000000989a	jmp	0x000099a5
000000000000989f	cmpl	$0x6d726466,%ebx
00000000000098a5	je	0x00009976
00000000000098ab	ja	0x000098bb
00000000000098ad	cmpl	$0x6d697272,%ebx
00000000000098b3	jne	0x000099c7
00000000000098b9	jmp	0x00009915
00000000000098bb	cmpl	$0x76636c74,%ebx
00000000000098c1	je	0x000098d1
00000000000098c3	cmpl	$0x76727376,%ebx
00000000000098c9	jne	0x000099c7
00000000000098cf	jmp	0x000098db
00000000000098d1	movq	$0x00000001,(%r12)
00000000000098d9	jmp	0x00009903
00000000000098db	movl	0x000001d8(%r13),%ecx
00000000000098e2	movq	0x000001d0(%r13),%rax
00000000000098e9	movl	0x00000168(%rax),%edx
00000000000098ef	cmpb	$0x00,0x00000164(%rax)
00000000000098f6	je	0x0000990b
00000000000098f8	xorl	%eax,%eax
00000000000098fa	cmpl	%edx,%ecx
00000000000098fc	sete	%al
00000000000098ff	movq	%rax,(%r12)
0000000000009903	xorl	%r15d,%r15d
0000000000009906	jmp	0x000099e7
000000000000990b	movzbl	0x0000020d(%rbp),%eax
0000000000009913	jmp	0x000098ff
0000000000009915	cmpb	$0x00,0x0000020d(%r13)
000000000000991d	je	0x000099e1
0000000000009923	movq	0x000001d0(%r13),%rdx
000000000000992a	movl	0x000001d8(%r13),%ecx
0000000000009931	movl	%ecx,%eax
0000000000009933	movq	0x00000198(%rdx,%rax,8),%rax
000000000000993b	cmpb	$0x00,0x0000020d(%rax)
0000000000009942	je	0x000099e1
0000000000009948	movl	0x00000168(%rdx),%eax
000000000000994e	cmpb	$0x00,0x00000164(%rdx)
0000000000009955	je	0x000099e1
000000000000995b	movq	$0x40000000,(%r12)
0000000000009963	xorl	%r15d,%r15d
0000000000009966	cmpl	%eax,%ecx
0000000000009968	jne	0x000099e7
000000000000996a	movl	$0xc0000000,%r11d
0000000000009970	movq	%r11,(%r12)
0000000000009974	jmp	0x000099e7
0000000000009976	movq	$0x00000000,(%r12)
000000000000997e	jmp	0x00009903
0000000000009980	movq	0x000001d0(%r13),%rax
0000000000009987	cmpb	$0x00,0x00000180(%rax)
000000000000998e	je	0x000099e1
0000000000009990	testb	$0x03,0x00000210(%r13)
0000000000009998	je	0x000099e1
000000000000999a	movl	0x00000604(%rax),%eax
00000000000099a0	jmp	0x1000098ff
00000000000099a5	movq	0x000001d0(%r13),%rax
00000000000099ac	movq	0x00000098(%rax),%rax
00000000000099b3	addq	$0x000111f8,%eax
00000000000099b9	movzwl	(%rax),%eax
00000000000099bc	shrl	$0x03,%eax
00000000000099bf	andl	$0x1f,%eax
00000000000099c2	jmp	0x1000098ff
00000000000099c7	movq	%r12,%rdx
00000000000099ca	movl	%ebx,%esi
00000000000099cc	movq	%r13,%rdi
00000000000099cf	movq	0x0000b43a(%rip),%rax
00000000000099d6	call	*0x00000a40(%rax)
00000000000099dc	movl	%eax,%r15d
00000000000099df	jmp	0x000099e7
00000000000099e1	movl	$0xe00002c7,%r15d
00000000000099e7	movl	(%r14),%r10d
00000000000099ea	testl	%r10d,%r10d
00000000000099ed	je	0x00009a16
00000000000099ef	xorl	%eax,%eax
00000000000099f1	testq	%r12,%r12
00000000000099f4	je	0x000099fa
00000000000099f6	movq	(%r12),%rax
00000000000099fa	movslq	%r15d,%rcx
00000000000099fd	movl	%ebx,%edx
00000000000099ff	movl	0x000001d8(%r13),%esi
0000000000009a06	xorl	%r9d,%r9d
0000000000009a09	movq	%rax,%r8
0000000000009a0c	movl	$0x0612841a,%edi
0000000000009a11	callq	0x00009a16
0000000000009a16	movl	%r15d,%eax
0000000000009a19	movq	0xd8(%rbp),%rbx
0000000000009a1d	movq	0xe0(%rbp),%r12
0000000000009a21	movq	0xe8(%rbp),%r13
0000000000009a25	movq	0xf0(%rbp),%r14
0000000000009a29	movq	0xf8(%rbp),%r15
0000000000009a2d	leave
0000000000009a2e	ret
0000000000009a2f	nop
__ZN22AppleIntelHDGraphicsFB21hotplugTimerInterruptEP8OSObjectP18IOTimerEventSource:
0000000000009a30	pushq	%rbp
0000000000009a31	movq	%rsp,%rbp
0000000000009a34	subq	$0x10,%rsp
0000000000009a38	movq	%rbx,(%rsp)
0000000000009a3c	movq	%r12,0x08(%rsp)
0000000000009a41	movq	%rdi,%rbx
0000000000009a44	movq	0x0000b385(%rip),%r12
0000000000009a4b	movl	(%r12),%eax
0000000000009a4f	testl	%eax,%eax
0000000000009a51	je	0x00009a6e
0000000000009a53	movzbl	0x00000420(%rdi),%esi
0000000000009a5a	xorl	%r9d,%r9d
0000000000009a5d	xorl	%r8d,%r8d
0000000000009a60	xorl	%ecx,%ecx
0000000000009a62	xorl	%edx,%edx
0000000000009a64	movl	$0x0612843d,%edi
0000000000009a69	callq	0x00009a6e
0000000000009a6e	cmpb	$0x00,0x00000420(%rbx)
0000000000009a75	jne	0x00009a8d
0000000000009a77	movl	(%r12),%eax
0000000000009a7b	testl	%eax,%eax
0000000000009a7d	je	0x00009af2
0000000000009a7f	xorl	%r9d,%r9d
0000000000009a82	xorl	%r8d,%r8d
0000000000009a85	xorl	%ecx,%ecx
0000000000009a87	xorl	%edx,%edx
0000000000009a89	xorl	%esi,%esi
0000000000009a8b	jmp	0x00009ade
0000000000009a8d	xorl	%eax,%eax
0000000000009a8f	cmpl	$0x01,0x00000194(%rbx)
0000000000009a96	jle	0x00009a9f
0000000000009a98	movzbl	0x00000191(%rbx),%eax
0000000000009a9f	movl	%eax,%eax
0000000000009aa1	imulq	$0x000000f0,%rax,%rax
0000000000009aa8	addq	%rbx,%rax
0000000000009aab	movq	0x00000278(%rax),%rdx
0000000000009ab2	testq	%rdx,%rdx
0000000000009ab5	je	0x00009ac7
0000000000009ab7	movq	0x00000288(%rax),%rsi
0000000000009abe	movq	0x00000280(%rax),%rdi
0000000000009ac5	call	*%rdx
0000000000009ac7	movl	(%r12),%eax
0000000000009acb	testl	%eax,%eax
0000000000009acd	je	0x00009af2
0000000000009acf	xorl	%r9d,%r9d
0000000000009ad2	xorl	%r8d,%r8d
0000000000009ad5	xorl	%ecx,%ecx
0000000000009ad7	xorl	%edx,%edx
0000000000009ad9	movl	$0x00000001,%esi
0000000000009ade	movl	$0x0612843e,%edi
0000000000009ae3	movq	(%rsp),%rbx
0000000000009ae7	movq	0x08(%rsp),%r12
0000000000009aec	leave
0000000000009aed	jmp	0x00009af2
0000000000009af2	movq	(%rsp),%rbx
0000000000009af6	movq	0x08(%rsp),%r12
0000000000009afb	leave
0000000000009afc	ret
0000000000009afd	nop
__ZN21AppleIntelFramebuffer7messageEjP9IOServicePv:
0000000000009afe	pushq	%rbp
0000000000009aff	movq	%rsp,%rbp
0000000000009b02	movl	$0xe00002c7,%eax
0000000000009b07	cmpl	$0xe3ff8008,%esi
0000000000009b0d	jne	0x00009b4a
0000000000009b0f	cmpb	$0x00,0x0000020c(%rdi)
0000000000009b16	je	0x00009b48
0000000000009b18	movl	0x000001d8(%rdi),%eax
0000000000009b1e	imulq	$0x000000f0,%rax,%rax
0000000000009b25	addq	0x000001d0(%rdi),%rax
0000000000009b2c	movq	0x00000278(%rax),%rdx
0000000000009b33	testq	%rdx,%rdx
0000000000009b36	je	0x00009b48
0000000000009b38	movq	0x00000288(%rax),%rsi
0000000000009b3f	movq	0x00000280(%rax),%rdi
0000000000009b46	call	*%rdx
0000000000009b48	xorl	%eax,%eax
0000000000009b4a	leave
0000000000009b4b	ret
__ZN21AppleIntelFramebuffer23invokeUpstreamInterruptEPv:
0000000000009b4c	pushq	%rbp
0000000000009b4d	movq	%rsp,%rbp
0000000000009b50	movq	%rsi,%rax
0000000000009b53	movq	(%rsi),%rdx
0000000000009b56	testq	%rdx,%rdx
0000000000009b59	je	0x00009b6a
0000000000009b5b	movq	0x10(%rsi),%rsi
0000000000009b5f	movq	0x08(%rax),%rdi
0000000000009b63	movq	%rdx,%r11
0000000000009b66	leave
0000000000009b67	jmp	*%r11
0000000000009b6a	leave
0000000000009b6b	ret
__ZN21AppleIntelFramebuffer18setCLUTWithEntriesEP12IOColorEntryjjj:
0000000000009b6c	pushq	%rbp
0000000000009b6d	movq	%rsp,%rbp
0000000000009b70	subq	$0x00000400,%rsp
0000000000009b77	movl	%ecx,%r10d
0000000000009b7a	movl	$0xe00002e6,%eax
0000000000009b7f	cmpl	$0x02,0x000001e4(%rdi)
0000000000009b86	je	0x00009c1b
0000000000009b8c	xorl	%r9d,%r9d
0000000000009b8f	andl	$0x01,%r8d
0000000000009b93	jmp	0x00009bce
0000000000009b95	movl	%r9d,%eax
0000000000009b98	testl	%r8d,%r8d
0000000000009b9b	je	0x00009ba0
0000000000009b9d	movzwl	(%rsi),%eax
0000000000009ba0	cmpw	$0x00ff,%ax
0000000000009ba4	jg	0x00009bc7
0000000000009ba6	movswq	%ax,%rcx
0000000000009baa	movzbl	0x03(%rsi),%edx
0000000000009bae	shll	$0x10,%edx
0000000000009bb1	movzbl	0x05(%rsi),%eax
0000000000009bb5	shll	$0x08,%eax
0000000000009bb8	orl	%eax,%edx
0000000000009bba	movzbl	0x07(%rsi),%eax
0000000000009bbe	orl	%eax,%edx
0000000000009bc0	movl	%edx,0xfffffc00(%rbp,%rcx,4)
0000000000009bc7	incl	%r9d
0000000000009bca	addq	$0x08,%rsi
0000000000009bce	cmpl	%r10d,%r9d
0000000000009bd1	jne	0x00009b95
0000000000009bd3	movl	0x000001d8(%rdi),%r8d
0000000000009bda	movq	0x000001d0(%rdi),%rdi
0000000000009be1	leaq	0xfffffc00(%rbp),%rsi
0000000000009be8	xorl	%ecx,%ecx
0000000000009bea	movl	(%rsi),%edx
0000000000009bec	cmpl	$0x01,%r8d
0000000000009bf0	sbbl	%eax,%eax
0000000000009bf2	andl	$0xfffff800,%eax
0000000000009bf7	leal	0x0004a800(%rax,%rcx,4),%eax
0000000000009bfe	movl	%eax,%eax
0000000000009c00	addq	0x00000098(%rdi),%rax
0000000000009c07	movl	%edx,(%rax)
0000000000009c09	incq	%rcx
0000000000009c0c	addq	$0x04,%rsi
0000000000009c10	cmpq	$0x00000100,%rcx
0000000000009c17	jne	0x00009bea
0000000000009c19	xorl	%eax,%eax
0000000000009c1b	leave
0000000000009c1c	ret
0000000000009c1d	nop
__ZN22AppleIntelHDGraphicsFB16ProcessInterruptEv:
0000000000009c1e	pushq	%rbp
0000000000009c1f	movq	%rsp,%rbp
0000000000009c22	subq	$0x40,%rsp
0000000000009c26	movq	%rbx,0xd8(%rbp)
0000000000009c2a	movq	%r12,0xe0(%rbp)
0000000000009c2e	movq	%r13,0xe8(%rbp)
0000000000009c32	movq	%r14,0xf0(%rbp)
0000000000009c36	movq	%r15,0xf8(%rbp)
0000000000009c3a	movq	%rdi,%r12
0000000000009c3d	movq	0x00000098(%rdi),%rax
0000000000009c44	movl	0x000020a4(%rax),%r14d
0000000000009c4b	movl	0x0004400c(%rax),%edx
0000000000009c51	andl	$0x7fffffff,%edx
0000000000009c57	movl	%edx,0x0004400c(%rax)
0000000000009c5d	movq	0x00000098(%rdi),%rdx
0000000000009c64	movl	0x0004400c(%rdx),%eax
0000000000009c6a	movl	0x00044018(%rdx),%eax
0000000000009c70	movl	%eax,%ecx
0000000000009c72	andl	$0xfb,%ecx
0000000000009c75	movl	%ecx,0xc8(%rbp)
0000000000009c78	movl	0x00044008(%rdx),%r13d
0000000000009c7f	movl	0x000c4008(%rdx),%r15d
0000000000009c86	cmpb	$0x00,0x00000668(%rdi)
0000000000009c8d	je	0x00009cb8
0000000000009c8f	testb	$0x01,%al
0000000000009c91	je	0x00009cb8
0000000000009c93	leaq	0x00000620(%rdi),%rax
0000000000009c9a	movq	0x00000620(%rdi),%rcx
0000000000009ca1	testq	%rcx,%rcx
0000000000009ca4	je	0x00009cb8
0000000000009ca6	movq	0x10(%rax),%rsi
0000000000009caa	movq	0x08(%rax),%rdi
0000000000009cae	call	*%rcx
0000000000009cb0	movq	0x00000098(%r12),%rdx
0000000000009cb8	movl	%r13d,%ebx
0000000000009cbb	shrl	$0x07,%ebx
0000000000009cbe	andl	$0x01,%ebx
0000000000009cc1	movl	%ebx,%eax
0000000000009cc3	orl	$0x02,%eax
0000000000009cc6	testw	%r13d,%r13d
0000000000009cca	cmovsl	%eax,%ebx
0000000000009ccd	movw	$0x0000,0xce(%rbp)
0000000000009cd3	testl	$0x02000000,%r13d
0000000000009cda	je	0x00009cf9
0000000000009cdc	orb	$0x01,%bh
0000000000009cdf	movzwl	0x00011184(%rdx),%eax
0000000000009ce6	movw	%ax,0xce(%rbp)
0000000000009cea	movw	%ax,0x00011184(%rdx)
0000000000009cf1	movq	0x00000098(%r12),%rdx
0000000000009cf9	testl	$0x00180000,%r13d
0000000000009d00	je	0x00009d13
0000000000009d02	movl	%ebx,%eax
0000000000009d04	orl	$0x08,%eax
0000000000009d07	cmpb	$0x00,0x000004c1(%r12)
0000000000009d10	cmovel	%eax,%ebx
0000000000009d13	testl	$0x00002000,%r15d
0000000000009d1a	je	0x00009d2d
0000000000009d1c	movl	%ebx,%eax
0000000000009d1e	orl	$0x10,%eax
0000000000009d21	cmpb	$0x00,0x000004c1(%r12)
0000000000009d2a	cmovel	%eax,%ebx
0000000000009d2d	cmpb	$0x00,0x00000668(%r12)
0000000000009d36	je	0x00009d44
0000000000009d38	movl	%ebx,%eax
0000000000009d3a	orl	$0x20,%eax
0000000000009d3d	testb	$0x08,0xc8(%rbp)
0000000000009d41	cmovnel	%eax,%ebx
0000000000009d44	movl	0xc8(%rbp),%ecx
0000000000009d47	movl	%ecx,0x00044018(%rdx)
0000000000009d4d	movq	0x00000098(%r12),%rax
0000000000009d55	movl	%r13d,0x00044008(%rax)
0000000000009d5c	movq	0x00000098(%r12),%rax
0000000000009d64	movl	%r15d,0x000c4008(%rax)
0000000000009d6b	movq	0x00000098(%r12),%rax
0000000000009d73	andl	$0xffffefff,%r14d
0000000000009d7a	movl	%r14d,0x000020a4(%rax)
0000000000009d81	movq	0x00000098(%r12),%rdx
0000000000009d89	movl	0x0004400c(%rdx),%eax
0000000000009d8f	orl	$0x80000000,%eax
0000000000009d94	movl	%eax,0x0004400c(%rdx)
0000000000009d9a	testb	$0x01,%bl
0000000000009d9d	je	0x00009dda
0000000000009d9f	movq	0x00000198(%r12),%rdx
0000000000009da7	movq	0x000004c0(%rdx),%rax
0000000000009dae	incq	%rax
0000000000009db1	movq	%rax,0x000004c0(%rdx)
0000000000009db8	leaq	0x00000260(%r12),%rax
0000000000009dc0	movq	0x00000260(%r12),%rdx
0000000000009dc8	testq	%rdx,%rdx
0000000000009dcb	je	0x00009dd7
0000000000009dcd	movq	0x10(%rax),%rsi
0000000000009dd1	movq	0x08(%rax),%rdi
0000000000009dd5	call	*%rdx
0000000000009dd7	andl	$0xfe,%ebx
0000000000009dda	testb	$0x02,%bl
0000000000009ddd	je	0x00009e1a
0000000000009ddf	movq	0x000001a0(%r12),%rdx
0000000000009de7	movq	0x000004c0(%rdx),%rax
0000000000009dee	incq	%rax
0000000000009df1	movq	%rax,0x000004c0(%rdx)
0000000000009df8	leaq	0x00000350(%r12),%rax
0000000000009e00	movq	0x00000350(%r12),%rdx
0000000000009e08	testq	%rdx,%rdx
0000000000009e0b	je	0x00009e17
0000000000009e0d	movq	0x10(%rax),%rsi
0000000000009e11	movq	0x08(%rax),%rdi
0000000000009e15	call	*%rdx
0000000000009e17	andl	$0xfd,%ebx
0000000000009e1a	testb	$0x01,%bh
0000000000009e1d	je	0x00009e30
0000000000009e1f	testb	$0x10,0xce(%rbp)
0000000000009e23	je	0x00009e2d
0000000000009e25	movq	%r12,%rdi
0000000000009e28	callq	0x0000e8ac
0000000000009e2d	andb	$0xfe,%bh
0000000000009e30	testl	%ebx,%ebx
0000000000009e32	je	0x00009e43
0000000000009e34	leaq	0x00000424(%r12),%rsi
0000000000009e3c	movl	%ebx,%edi
0000000000009e3e	callq	0x00009e43
0000000000009e43	xorl	%eax,%eax
0000000000009e45	testl	%ebx,%ebx
0000000000009e47	setne	%al
0000000000009e4a	movq	0xd8(%rbp),%rbx
0000000000009e4e	movq	0xe0(%rbp),%r12
0000000000009e52	movq	0xe8(%rbp),%r13
0000000000009e56	movq	0xf0(%rbp),%r14
0000000000009e5a	movq	0xf8(%rbp),%r15
0000000000009e5e	leave
0000000000009e5f	ret
__ZN22AppleIntelHDGraphicsFB16InterruptHandlerEP8OSObjectP22IOInterruptEventSourcei:
0000000000009e60	pushq	%rbp
0000000000009e61	movq	%rsp,%rbp
0000000000009e64	pushq	%r15
0000000000009e66	pushq	%r14
0000000000009e68	pushq	%r13
0000000000009e6a	pushq	%r12
0000000000009e6c	pushq	%rbx
0000000000009e6d	subq	$0x38,%rsp
0000000000009e71	movq	%rdi,%r14
0000000000009e74	leaq	0x00000424(%rdi),%rax
0000000000009e7b	movq	%rax,0xc0(%rbp)
0000000000009e7f	leaq	0x00000650(%rdi),%rdx
0000000000009e86	movq	%rdx,0xb8(%rbp)
0000000000009e8a	cmpb	$0x00,0x0000042c(%r14)
0000000000009e92	jne	0x00009ead
0000000000009e94	movq	%r14,%rdi
0000000000009e97	callq	0x100009c1e
0000000000009e9c	testb	%al,%al
0000000000009e9e	je	0x0000a02b
0000000000009ea4	movl	0x00000424(%r14),%ebx
0000000000009eab	jmp	0x00009ec1
0000000000009ead	movl	0x00000424(%r14),%ebx
0000000000009eb4	movl	%ebx,%edi
0000000000009eb6	notl	%edi
0000000000009eb8	movq	0xc0(%rbp),%rsi
0000000000009ebc	callq	0x00009ec1
0000000000009ec1	cmpb	$0x00,0x00000420(%r14)
0000000000009ec9	je	0x0000a02b
0000000000009ecf	testl	%ebx,%ebx
0000000000009ed1	je	0x0000a02b
0000000000009ed7	andl	$0x20,%ebx
0000000000009eda	je	0x00009e8a
0000000000009edc	movq	0x00000650(%r14),%rax
0000000000009ee3	testq	%rax,%rax
0000000000009ee6	je	0x00009ef6
0000000000009ee8	movq	0xb8(%rbp),%rdx
0000000000009eec	movq	0x10(%rdx),%rsi
0000000000009ef0	movq	0x08(%rdx),%rdi
0000000000009ef4	call	*%rax
0000000000009ef6	movq	0x00000098(%r14),%rax
0000000000009efd	movl	0x000020b0(%rax),%r13d
0000000000009f04	movl	0x000020b8(%rax),%r15d
0000000000009f0b	movl	0x000020b4(%rax),%edx
0000000000009f11	movl	0x00044010(%rax),%r12d
0000000000009f18	movl	%r15d,%ebx
0000000000009f1b	orl	%r13d,%ebx
0000000000009f1e	jne	0x00009f2f
0000000000009f20	testb	$0x08,%r12b
0000000000009f24	je	0x100009e8a
0000000000009f2a	jmp	0x0000a007
0000000000009f2f	movl	$0x00000001,0x00000438(%r14)
0000000000009f3a	movl	%r12d,%r8d
0000000000009f3d	movl	%r15d,%ecx
0000000000009f40	movl	%r13d,%esi
0000000000009f43	leaq	0x00007bc6(%rip),%rdi
0000000000009f4a	xorl	%eax,%eax
0000000000009f4c	callq	0x00009f51
0000000000009f51	andl	$0x10,%ebx
0000000000009f54	je	0x00009fd3
0000000000009f56	movq	0x00000098(%r14),%rax
0000000000009f5d	movl	0x00002024(%rax),%edx
0000000000009f63	movl	%edx,0xc8(%rbp)
0000000000009f66	movl	0x00002020(%rax),%edx
0000000000009f6c	movl	%edx,0xcc(%rbp)
0000000000009f6f	movl	0x000020c4(%rax),%ebx
0000000000009f75	leaq	0x00007bc8(%rip),%rdi
0000000000009f7c	xorl	%eax,%eax
0000000000009f7e	callq	0x00009f83
0000000000009f83	movl	%ebx,%ecx
0000000000009f85	movl	0xcc(%rbp),%edx
0000000000009f88	movl	0xc8(%rbp),%esi
0000000000009f8b	leaq	0x00007bce(%rip),%rdi
0000000000009f92	xorl	%eax,%eax
0000000000009f94	callq	0x00009f99
0000000000009f99	movq	(%r14),%rax
0000000000009f9c	xorl	%esi,%esi
0000000000009f9e	movq	%r14,%rdi
0000000000009fa1	call	*0x00000388(%rax)
0000000000009fa7	movq	%rax,%rsi
0000000000009faa	movl	%ebx,0x08(%rsp)
0000000000009fae	movl	0xcc(%rbp),%eax
0000000000009fb1	movl	%eax,(%rsp)
0000000000009fb4	movl	0xc8(%rbp),%r9d
0000000000009fb8	movl	%r15d,%r8d
0000000000009fbb	movl	%r13d,%ecx
0000000000009fbe	leaq	0x00007bd6(%rip),%rdx
0000000000009fc5	leaq	0x00007bdc(%rip),%rdi
0000000000009fcc	xorl	%eax,%eax
0000000000009fce	callq	0x00009fd3
0000000000009fd3	movq	(%r14),%rax
0000000000009fd6	xorl	%esi,%esi
0000000000009fd8	movq	%r14,%rdi
0000000000009fdb	call	*0x00000388(%rax)
0000000000009fe1	movq	%rax,%rsi
0000000000009fe4	movl	%r12d,%r9d
0000000000009fe7	movl	%r15d,%r8d
0000000000009fea	movl	%r13d,%ecx
0000000000009fed	leaq	0x00007ba7(%rip),%rdx
0000000000009ff4	leaq	0x00007c05(%rip),%rdi
0000000000009ffb	xorl	%eax,%eax
0000000000009ffd	callq	0x0000a002
000000000000a002	jmp	0x100009e8a
000000000000a007	movl	$0x00000001,0x00000438(%r14)
000000000000a012	movl	%r12d,%r8d
000000000000a015	movl	%r15d,%ecx
000000000000a018	movl	%r13d,%esi
000000000000a01b	leaq	0x00007aee(%rip),%rdi
000000000000a022	xorl	%eax,%eax
000000000000a024	callq	0x0000a029
000000000000a029	jmp	0x00009fd3
000000000000a02b	addq	$0x38,%rsp
000000000000a02f	popq	%rbx
000000000000a030	popq	%r12
000000000000a032	popq	%r13
000000000000a034	popq	%r14
000000000000a036	popq	%r15
000000000000a038	leave
000000000000a039	ret
__ZN22AppleIntelHDGraphicsFB15InterruptFilterEP28IOFilterInterruptEventSource:
000000000000a03a	pushq	%rbp
000000000000a03b	movq	%rsp,%rbp
000000000000a03e	pushq	%rbx
000000000000a03f	subq	$0x08,%rsp
000000000000a043	movq	%rsi,%rbx
000000000000a046	cmpb	$0x00,0x00000420(%rdi)
000000000000a04d	je	0x0000a064
000000000000a04f	callq	0x100009c1e
000000000000a054	testb	%al,%al
000000000000a056	je	0x0000a064
000000000000a058	movq	(%rbx),%rax
000000000000a05b	movq	%rbx,%rdi
000000000000a05e	call	*0x00000238(%rax)
000000000000a064	xorl	%eax,%eax
000000000000a066	addq	$0x08,%rsp
000000000000a06a	popq	%rbx
000000000000a06b	leave
000000000000a06c	ret
000000000000a06d	nop
__ZN22AppleIntelHDGraphicsFB12initUpstreamEv:
000000000000a06e	pushq	%rbp
000000000000a06f	movq	%rsp,%rbp
000000000000a072	pushq	%rbx
000000000000a073	subq	$0x08,%rsp
000000000000a077	movq	%rdi,%rbx
000000000000a07a	movl	0x00000494(%rdi),%eax
000000000000a080	movl	0x00000498(%rdi),%esi
000000000000a086	movq	0x000004a8(%rdi),%rcx
000000000000a08d	movl	%eax,%edx
000000000000a08f	addq	%rcx,%rdx
000000000000a092	movl	$0x02000040,(%rdx)
000000000000a098	addl	$0x04,%eax
000000000000a09b	andl	%esi,%eax
000000000000a09d	movl	%eax,%edx
000000000000a09f	addq	%rcx,%rdx
000000000000a0a2	movl	$0x00000000,(%rdx)
000000000000a0a8	addl	$0x04,%eax
000000000000a0ab	andl	%esi,%eax
000000000000a0ad	movl	%eax,%edx
000000000000a0af	addq	%rcx,%rdx
000000000000a0b2	movl	$0x76010000,(%rdx)
000000000000a0b8	addl	$0x04,%eax
000000000000a0bb	andl	%esi,%eax
000000000000a0bd	movl	%eax,%edx
000000000000a0bf	addq	%rcx,%rdx
000000000000a0c2	movl	$0x00000000,(%rdx)
000000000000a0c8	addl	$0x04,%eax
000000000000a0cb	andl	%esi,%eax
000000000000a0cd	movl	%eax,%edx
000000000000a0cf	addq	%rcx,%rdx
000000000000a0d2	movl	$0x76010004,(%rdx)
000000000000a0d8	addl	$0x04,%eax
000000000000a0db	andl	%esi,%eax
000000000000a0dd	movl	%eax,%edx
000000000000a0df	addq	%rcx,%rdx
000000000000a0e2	movl	$0x60000000,(%rdx)
000000000000a0e8	addl	$0x04,%eax
000000000000a0eb	andl	%esi,%eax
000000000000a0ed	movl	%eax,%edx
000000000000a0ef	addq	%rcx,%rdx
000000000000a0f2	movl	$0x9c1200fd,(%rdx)
000000000000a0f8	addl	$0x04,%eax
000000000000a0fb	andl	%esi,%eax
000000000000a0fd	movl	%eax,%edx
000000000000a0ff	addq	%rcx,%rdx
000000000000a102	movl	$0x6f656181,(%rdx)
000000000000a108	addl	$0x04,%eax
000000000000a10b	andl	%esi,%eax
000000000000a10d	movl	%eax,%edx
000000000000a10f	addq	%rcx,%rdx
000000000000a112	movl	$0x21a337ac,(%rdx)
000000000000a118	addl	$0x04,%eax
000000000000a11b	andl	%esi,%eax
000000000000a11d	movl	%eax,%edx
000000000000a11f	addq	%rcx,%rdx
000000000000a122	movl	$0xa6a6d1d5,(%rdx)
000000000000a128	addl	$0x04,%eax
000000000000a12b	andl	%esi,%eax
000000000000a12d	movl	%eax,%edx
000000000000a12f	addq	%rcx,%rdx
000000000000a132	movl	$0x76010004,(%rdx)
000000000000a138	addl	$0x04,%eax
000000000000a13b	andl	%esi,%eax
000000000000a13d	movl	%eax,%edx
000000000000a13f	addq	%rcx,%rdx
000000000000a142	movl	$0x60000000,(%rdx)
000000000000a148	addl	$0x04,%eax
000000000000a14b	andl	%esi,%eax
000000000000a14d	movl	%eax,%edx
000000000000a14f	addq	%rcx,%rdx
000000000000a152	movl	$0xf11acef9,(%rdx)
000000000000a158	addl	$0x04,%eax
000000000000a15b	andl	%esi,%eax
000000000000a15d	movl	%eax,%edx
000000000000a15f	addq	%rcx,%rdx
000000000000a162	movl	$0x547712af,(%rdx)
000000000000a168	addl	$0x04,%eax
000000000000a16b	andl	%esi,%eax
000000000000a16d	movl	%eax,%edx
000000000000a16f	addq	%rcx,%rdx
000000000000a172	movl	$0xf062fa86,(%rdx)
000000000000a178	addl	$0x04,%eax
000000000000a17b	andl	%esi,%eax
000000000000a17d	movl	%eax,%edx
000000000000a17f	addq	%rcx,%rdx
000000000000a182	movl	$0x3f3f373e,(%rdx)
000000000000a188	addl	$0x04,%eax
000000000000a18b	andl	%esi,%eax
000000000000a18d	movl	%eax,%edx
000000000000a18f	addq	%rcx,%rdx
000000000000a192	movl	$0x02000000,(%rdx)
000000000000a198	addl	$0x04,%eax
000000000000a19b	andl	%esi,%eax
000000000000a19d	movl	%eax,%edx
000000000000a19f	addq	%rcx,%rdx
000000000000a1a2	movl	$0x00000000,(%rdx)
000000000000a1a8	addl	$0x04,%eax
000000000000a1ab	andl	%esi,%eax
000000000000a1ad	movl	%eax,0x00000494(%rdi)
000000000000a1b3	subl	$0x48,0x00000490(%rdi)
000000000000a1ba	movq	0x00000098(%rdi),%rdx
000000000000a1c1	movl	%eax,0x00004030(%rdx)
000000000000a1c7	xorl	%ecx,%ecx
000000000000a1c9	movq	0x00000098(%rbx),%rsi
000000000000a1d0	movl	0x00004034(%rsi),%edx
000000000000a1d6	movl	0x00004030(%rsi),%eax
000000000000a1dc	andl	$0x0001fffc,%edx
000000000000a1e2	andl	$0x0001fff8,%eax
000000000000a1e7	cmpl	%eax,%edx
000000000000a1e9	je	0x0000a201
000000000000a1eb	incl	%ecx
000000000000a1ed	cmpl	$0x00010000,%ecx
000000000000a1f3	jne	0x0000a1d0
000000000000a1f5	movl	$0x00000064,%edi
000000000000a1fa	callq	0x0000a1ff
000000000000a1ff	jmp	0x0000a1c7
000000000000a201	movl	$0x00000064,%edi
000000000000a206	callq	0x0000a20b
000000000000a20b	xorl	%eax,%eax
000000000000a20d	addq	$0x08,%rsp
000000000000a211	popq	%rbx
000000000000a212	leave
000000000000a213	ret
000000000000a214	nop
000000000000a215	nop
__GLOBAL__D__ZN22AppleIntelHDGraphicsFB10gMetaClassE:
000000000000a216	pushq	%rbp
000000000000a217	movq	%rsp,%rbp
000000000000a21a	movl	$0x0000ffff,%esi
000000000000a21f	xorl	%edi,%edi
000000000000a221	leave
000000000000a222	jmp	0x100001324
000000000000a227	nop
__ZN22AppleIntelHDGraphicsFB16hwRegsNeedUpdateEiPK29IODetailedTimingInformationV2PNS_11ClockParamsEPNS_10CRTCParamsEj:
000000000000a228	pushq	%rbp
000000000000a229	movq	%rsp,%rbp
000000000000a22c	pushq	%r15
000000000000a22e	pushq	%r14
000000000000a230	pushq	%r13
000000000000a232	pushq	%r12
000000000000a234	pushq	%rbx
000000000000a235	subq	$0x000001a8,%rsp
000000000000a23c	movq	%rdi,%r15
000000000000a23f	movl	%esi,%r13d
000000000000a242	movq	%rdx,%r12
000000000000a245	movq	%rcx,%rbx
000000000000a248	movq	%r8,%r14
000000000000a24b	movl	%r9d,0xfffffe54(%rbp)
000000000000a252	leaq	0xfffffe60(%rbp),%rax
000000000000a259	movq	%rax,0xfffffe38(%rbp)
000000000000a260	movl	$0x000000f0,%edx
000000000000a265	movq	%r8,%rsi
000000000000a268	movq	%rax,%rdi
000000000000a26b	callq	0x0000a270
000000000000a270	leaq	0xffffff50(%rbp),%rax
000000000000a277	movq	%rax,0xfffffe40(%rbp)
000000000000a27e	leaq	0x00000388(%r15),%rax
000000000000a285	movq	%rax,0xfffffe48(%rbp)
000000000000a28c	movl	$0x00000080,%edx
000000000000a291	movq	%rax,%rsi
000000000000a294	movq	0xfffffe40(%rbp),%rdi
000000000000a29b	callq	0x0000a2a0
000000000000a2a0	movl	0xffffff54(%rbp),%eax
000000000000a2a6	movl	%eax,0xfffffe5c(%rbp)
000000000000a2ac	movl	0xffffff50(%rbp),%eax
000000000000a2b2	movl	%eax,0xfffffe58(%rbp)
000000000000a2b8	movq	0xfffffe38(%rbp),%rcx
000000000000a2bf	movq	%r12,%rdx
000000000000a2c2	movl	%r13d,%esi
000000000000a2c5	movq	%r15,%rdi
000000000000a2c8	callq	0x1000025bc
000000000000a2cd	movl	$0x00000000,0xfffffed4(%rbp)
000000000000a2d7	movl	$0x00001000,0xffffff00(%rbp)
000000000000a2e1	movl	$0x00000000,0xfffffed8(%rbp)
000000000000a2eb	movl	$0x00000000,0xfffffedc(%rbp)
000000000000a2f5	movl	$0x00000000,0xfffffee0(%rbp)
000000000000a2ff	movl	0x10(%rbx),%edx
000000000000a302	subl	$0x02,%edx
000000000000a305	shll	$0x10,%edx
000000000000a308	movl	0x08(%rbx),%eax
000000000000a30b	subl	$0x02,%eax
000000000000a30e	shll	$0x08,%eax
000000000000a311	orl	%eax,%edx
000000000000a313	movl	0x0c(%rbx),%eax
000000000000a316	subl	$0x02,%eax
000000000000a319	orl	%eax,%edx
000000000000a31b	movl	%edx,0xfffffe7c(%rbp)
000000000000a321	movzbl	0x00000190(%rdi),%eax
000000000000a329	movl	$0x09000000,%esi
000000000000a32e	cmpl	%eax,%r13d
000000000000a331	movl	$0x04000000,%eax
000000000000a336	cmovnel	%eax,%esi
000000000000a339	movl	(%rbx),%ecx
000000000000a33b	decl	%ecx
000000000000a33d	movl	$0x00000001,%edx
000000000000a342	shll	%cl,%edx
000000000000a344	movl	%edx,%eax
000000000000a346	shll	$0x10,%eax
000000000000a349	orl	%edx,%eax
000000000000a34b	orl	%esi,%eax
000000000000a34d	orb	$0x60,%ah
000000000000a350	movl	%eax,0xfffffe78(%rbp)
000000000000a356	movl	$0x78000000,0xfffffee4(%rbp)
000000000000a360	movl	$0x00000000,0xfffffee8(%rbp)
000000000000a36a	movl	$0x00007800,0xfffffeec(%rbp)
000000000000a374	movl	$0x00000000,0xfffffef0(%rbp)
000000000000a37e	movl	$0x00000000,0xfffffef4(%rbp)
000000000000a388	movl	$0x78000000,0xfffffef8(%rbp)
000000000000a392	movl	$0x00000000,0xfffffefc(%rbp)
000000000000a39c	movl	$0x00000000,0xfffffea0(%rbp)
000000000000a3a6	movl	$0x00000000,0xfffffea4(%rbp)
000000000000a3b0	cmpb	$0x01,0x000004c0(%r15)
000000000000a3b8	sbbl	%edx,%edx
000000000000a3ba	andl	$0xc0000000,%edx
000000000000a3c0	subl	$0x27ffbc00,%edx
000000000000a3c6	movl	%edx,0xfffffe9c(%rbp)
000000000000a3cc	cmpl	$0x01,0xfffffe54(%rbp)
000000000000a3d3	je	0x0000a3e0
000000000000a3d5	cmpl	$0x03,0xfffffe54(%rbp)
000000000000a3dc	jne	0x0000a400
000000000000a3de	jmp	0x0000a3ec
000000000000a3e0	orl	$0x80800000,0xfffffe58(%rbp)
000000000000a3ea	jmp	0x0000a400
000000000000a3ec	orl	$0x8030033c,0xfffffe5c(%rbp)
000000000000a3f6	andl	$0xfff3ffff,0xfffffe5c(%rbp)
000000000000a400	movl	0xfffffe60(%rbp),%eax
000000000000a406	cmpl	(%r14),%eax
000000000000a409	jne	0x0000a4d5
000000000000a40f	movl	0xfffffe6c(%rbp),%eax
000000000000a415	cmpl	0x0c(%r14),%eax
000000000000a419	jne	0x0000a4d5
000000000000a41f	movl	0xfffffe64(%rbp),%eax
000000000000a425	cmpl	0x04(%r14),%eax
000000000000a429	jne	0x0000a4d5
000000000000a42f	movl	0xfffffe70(%rbp),%eax
000000000000a435	cmpl	0x10(%r14),%eax
000000000000a439	jne	0x0000a4d5
000000000000a43f	movl	0xfffffe68(%rbp),%eax
000000000000a445	cmpl	0x08(%r14),%eax
000000000000a449	jne	0x0000a4d5
000000000000a44f	movl	0xfffffe74(%rbp),%eax
000000000000a455	cmpl	0x14(%r14),%eax
000000000000a459	jne	0x0000a4d5
000000000000a45b	movl	0xfffffed4(%rbp),%eax
000000000000a461	cmpl	0x74(%r14),%eax
000000000000a465	jne	0x0000a4d5
000000000000a467	movl	0xffffff00(%rbp),%eax
000000000000a46d	cmpl	0x000000a0(%r14),%eax
000000000000a474	jne	0x0000a4d5
000000000000a476	movq	0x78(%r14),%rax
000000000000a47a	cmpq	%rax,0xfffffed8(%rbp)
000000000000a481	jne	0x0000a4d5
000000000000a483	movl	0xfffffee0(%rbp),%eax
000000000000a489	cmpl	0x00000080(%r14),%eax
000000000000a490	jne	0x0000a4d5
000000000000a492	movq	0x40(%r14),%rax
000000000000a496	cmpq	%rax,0xfffffea0(%rbp)
000000000000a49d	jne	0x0000a4d5
000000000000a49f	cmpl	0x3c(%r14),%edx
000000000000a4a3	jne	0x0000a4d5
000000000000a4a5	jmp	0x0000a5ac
000000000000a4aa	cmpl	$0xa0c0298e,0x00000390(%r15)
000000000000a4b5	jne	0x0000a4d5
000000000000a4b7	movl	0xfffffe58(%rbp),%eax
000000000000a4bd	cmpl	%eax,0x00000388(%r15)
000000000000a4c4	jmp	0x0000a4d3
000000000000a4c6	movl	0xfffffe5c(%rbp),%eax
000000000000a4cc	cmpl	%eax,0x0000038c(%r15)
000000000000a4d3	je	0x0000a52d
000000000000a4d5	movl	$0x000000f0,%edx
000000000000a4da	movq	0xfffffe38(%rbp),%rsi
000000000000a4e1	movq	%r14,%rdi
000000000000a4e4	callq	0x0000a4e9
000000000000a4e9	movl	0xfffffe5c(%rbp),%eax
000000000000a4ef	movl	%eax,0xffffff54(%rbp)
000000000000a4f5	movl	0xfffffe58(%rbp),%eax
000000000000a4fb	movl	%eax,0xffffff50(%rbp)
000000000000a501	movl	$0xa0c0298e,0xffffff58(%rbp)
000000000000a50b	movl	$0x00000080,%edx
000000000000a510	movq	0xfffffe40(%rbp),%rsi
000000000000a517	movq	0xfffffe48(%rbp),%rdi
000000000000a51e	callq	0x0000a523
000000000000a523	movl	$0x00000001,%eax
000000000000a528	jmp	0x0000a5cb
000000000000a52d	movq	0xfffffe38(%rbp),%rsi
000000000000a534	movq	%r15,%rdi
000000000000a537	callq	0x10000250c
000000000000a53c	movq	0x00000098(%r15),%rdx
000000000000a543	addq	$0x0006001c,%rdx
000000000000a54a	movl	0xfffffe84(%rbp),%eax
000000000000a550	movl	%eax,(%rdx)
000000000000a552	movq	0x00000098(%r15),%rdx
000000000000a559	addq	$0x00068070,%rdx
000000000000a560	movl	0xfffffe90(%rbp),%eax
000000000000a566	movl	%eax,(%rdx)
000000000000a568	movq	0x00000098(%r15),%rdx
000000000000a56f	addq	$0x00068080,%rdx
000000000000a576	movl	0xfffffe98(%rbp),%eax
000000000000a57c	movl	%eax,(%rdx)
000000000000a57e	movq	0x00000098(%r15),%rdx
000000000000a585	addq	$0x00068074,%rdx
000000000000a58c	movl	0xfffffe94(%rbp),%eax
000000000000a592	movl	%eax,(%rdx)
000000000000a594	movl	$0x000000f0,%edx
000000000000a599	movq	0xfffffe38(%rbp),%rsi
000000000000a5a0	movq	%r14,%rdi
000000000000a5a3	callq	0x0000a5a8
000000000000a5a8	xorl	%eax,%eax
000000000000a5aa	jmp	0x0000a5cb
000000000000a5ac	cmpl	$0x01,0xfffffe54(%rbp)
000000000000a5b3	je	0x10000a4aa
000000000000a5b9	cmpl	$0x03,0xfffffe54(%rbp)
000000000000a5c0	jne	0x10000a52d
000000000000a5c6	jmp	0x10000a4c6
000000000000a5cb	addq	$0x000001a8,%rsp
000000000000a5d2	popq	%rbx
000000000000a5d3	popq	%r12
000000000000a5d5	popq	%r13
000000000000a5d7	popq	%r14
000000000000a5d9	popq	%r15
000000000000a5db	leave
000000000000a5dc	ret
000000000000a5dd	nop
__ZN22AppleIntelHDGraphicsFB21hwCalculateWatermarksEv:
000000000000a5de	pushq	%rbp
000000000000a5df	movq	%rsp,%rbp
000000000000a5e2	subq	$0x50,%rsp
000000000000a5e6	movq	%rbx,0xd8(%rbp)
000000000000a5ea	movq	%r12,0xe0(%rbp)
000000000000a5ee	movq	%r13,0xe8(%rbp)
000000000000a5f2	movq	%r14,0xf0(%rbp)
000000000000a5f6	movq	%r15,0xf8(%rbp)
000000000000a5fa	movq	%rdi,%r15
000000000000a5fd	cmpb	$0x00,0x00000720(%rdi)
000000000000a604	je	0x0000a934
000000000000a60a	movq	0x00000290(%rdi),%rbx
000000000000a611	movl	%ebx,0xb4(%rbp)
000000000000a614	testl	%ebx,%ebx
000000000000a616	je	0x0000a934
000000000000a61c	movq	0x00000098(%rdi),%rax
000000000000a623	addq	$0x00060000,%eax
000000000000a629	movl	(%rax),%eax
000000000000a62b	movzwl	%ax,%edx
000000000000a62e	incl	%edx
000000000000a630	movl	%edx,0xb8(%rbp)
000000000000a633	shrl	$0x10,%eax
000000000000a636	incl	%eax
000000000000a638	movl	%eax,0xcc(%rbp)
000000000000a63b	movl	%ebx,%eax
000000000000a63d	shlq	$0x02,%rax
000000000000a641	movq	%rax,0xc0(%rbp)
000000000000a645	imulq	$0x00000514,%rax,%rdx
000000000000a64c	shrq	$0x09,%rdx
000000000000a650	movq	$0x0044b82fa09b5a53,%rax
000000000000a65a	mulq	%rdx
000000000000a65d	shrq	$0x11,%rdx
000000000000a661	leal	0x02(%rdx),%r13d
000000000000a665	movl	$0x00000514,%r8d
000000000000a66b	movl	$0x00000004,%ecx
000000000000a670	movl	%ebx,%edx
000000000000a672	movl	$0x00000001,%esi
000000000000a677	movl	0xcc(%rbp),%edi
000000000000a67a	callq	0x100002d12
000000000000a67f	movl	%eax,%r12d
000000000000a682	cmpl	%eax,%r13d
000000000000a685	jae	0x0000a8d8
000000000000a68b	movl	$0x00000514,%r8d
000000000000a691	movl	$0x00000004,%ecx
000000000000a696	movl	%ebx,%edx
000000000000a698	movl	$0x00000100,%esi
000000000000a69d	movl	0xcc(%rbp),%edi
000000000000a6a0	callq	0x100002d12
000000000000a6a5	movl	%eax,%r8d
000000000000a6a8	movl	%r13d,%esi
000000000000a6ab	movl	%r13d,%edi
000000000000a6ae	imulq	$0x000002bc,0xc0(%rbp),%rdx
000000000000a6b6	shrq	$0x09,%rdx
000000000000a6ba	movq	$0x0044b82fa09b5a53,%r12
000000000000a6c4	movq	%rdx,%rax
000000000000a6c7	mulq	%r12
000000000000a6ca	shrq	$0x11,%rdx
000000000000a6ce	addl	$0x02,%edx
000000000000a6d1	movl	$0x0000001f,%ecx
000000000000a6d6	cmpl	$0x1f,%r8d
000000000000a6da	cmovbel	%r8d,%ecx
000000000000a6de	movl	$0x0000007f,%eax
000000000000a6e3	cmpl	$0x7f,%edx
000000000000a6e6	cmovbel	%edx,%eax
000000000000a6e9	shll	$0x10,%eax
000000000000a6ec	orl	%eax,%ecx
000000000000a6ee	movl	$0x0000003f,%edx
000000000000a6f3	cmpl	$0x3f,%esi
000000000000a6f6	movl	%edx,%eax
000000000000a6f8	cmovbel	%esi,%eax
000000000000a6fb	shll	$0x08,%eax
000000000000a6fe	orl	%ecx,%eax
000000000000a700	movl	%eax,0x000003f4(%r15)
000000000000a707	cmpl	$0x3f,%edi
000000000000a70a	cmovbel	%edi,%edx
000000000000a70d	shll	$0x08,%edx
000000000000a710	orl	%edx,%ecx
000000000000a712	movl	%ecx,0x000003f8(%r15)
000000000000a719	imulq	$0x00001194,0xc0(%rbp),%rdx
000000000000a721	shrq	$0x09,%rdx
000000000000a725	movq	%rdx,%rax
000000000000a728	mulq	%r12
000000000000a72b	shrq	$0x11,%rdx
000000000000a72f	leal	0x02(%rdx),%r14d
000000000000a733	movl	$0x00001194,%r8d
000000000000a739	movl	$0x00000004,%ecx
000000000000a73e	movl	0xb4(%rbp),%edx
000000000000a741	movl	0xb8(%rbp),%esi
000000000000a744	movl	0xcc(%rbp),%edi
000000000000a747	callq	0x100002d12
000000000000a74c	cmpl	%eax,%r14d
000000000000a74f	cmoval	%eax,%r14d
000000000000a753	movq	0x00000098(%r15),%rax
000000000000a75a	addq	$0x00070188,%eax
000000000000a760	movl	(%rax),%ebx
000000000000a762	movl	0x000006fc(%r15),%edx
000000000000a769	testl	%edx,%edx
000000000000a76b	je	0x0000a777
000000000000a76d	movl	%ebx,%eax
000000000000a76f	movl	%edx,%ecx
000000000000a771	xorl	%edx,%edx
000000000000a773	divl	%ecx
000000000000a775	movl	%eax,%ebx
000000000000a777	testl	%ebx,%ebx
000000000000a779	movl	$0x00002000,%eax
000000000000a77e	cmovel	%eax,%ebx
000000000000a781	movl	%r14d,%eax
000000000000a784	shll	$0x06,%eax
000000000000a787	xorl	%edx,%edx
000000000000a789	divl	%ebx
000000000000a78b	leal	0x01(%rax),%r13d
000000000000a78f	movl	$0x00001194,%r8d
000000000000a795	movl	$0x00000004,%ecx
000000000000a79a	movl	0xb4(%rbp),%edx
000000000000a79d	movl	$0x00000100,%esi
000000000000a7a2	movl	0xcc(%rbp),%edi
000000000000a7a5	callq	0x100002d12
000000000000a7aa	movl	%eax,0xbc(%rbp)
000000000000a7ad	imulq	$0x00004268,0xc0(%rbp),%rdx
000000000000a7b5	shrq	$0x09,%rdx
000000000000a7b9	movq	%rdx,%rax
000000000000a7bc	mulq	%r12
000000000000a7bf	shrq	$0x11,%rdx
000000000000a7c3	leal	0x02(%rdx),%r12d
000000000000a7c7	movl	$0x00004268,%r8d
000000000000a7cd	movl	$0x00000004,%ecx
000000000000a7d2	movl	0xb4(%rbp),%edx
000000000000a7d5	movl	0xb8(%rbp),%esi
000000000000a7d8	movl	0xcc(%rbp),%edi
000000000000a7db	callq	0x100002d12
000000000000a7e0	cmpl	%eax,%r12d
000000000000a7e3	cmoval	%eax,%r12d
000000000000a7e7	movl	%r12d,%eax
000000000000a7ea	shll	$0x06,%eax
000000000000a7ed	xorl	%edx,%edx
000000000000a7ef	divl	%ebx
000000000000a7f1	leal	0x01(%rax),%ebx
000000000000a7f4	movl	$0x00004268,%r8d
000000000000a7fa	movl	$0x00000004,%ecx
000000000000a7ff	movl	0xb4(%rbp),%edx
000000000000a802	movl	$0x00000100,%esi
000000000000a807	movl	0xcc(%rbp),%edi
000000000000a80a	callq	0x100002d12
000000000000a80f	movl	%eax,%esi
000000000000a811	movl	0x00000404(%r15),%eax
000000000000a818	movl	%eax,%edx
000000000000a81a	andl	$0x3f,%edx
000000000000a81d	movl	%eax,%ecx
000000000000a81f	shrl	$0x08,%ecx
000000000000a822	andl	$0x3f,%ecx
000000000000a825	movl	$0x00000001,%eax
000000000000a82a	cmpl	$0x0f,%r13d
000000000000a82e	jbe	0x0000a838
000000000000a830	movl	$0x0000000f,%r13d
000000000000a836	xorl	%eax,%eax
000000000000a838	cmpl	$0x000001ff,%r14d
000000000000a83f	jbe	0x0000a849
000000000000a841	movl	$0x000001ff,%r14d
000000000000a847	xorl	%eax,%eax
000000000000a849	cmpl	$0x3f,0xbc(%rbp)
000000000000a84d	jbe	0x0000a858
000000000000a84f	xorl	%eax,%eax
000000000000a851	movl	$0x0000003f,0xbc(%rbp)
000000000000a858	movl	$0x00000001,%edi
000000000000a85d	cmpl	$0x0f,%ebx
000000000000a860	jbe	0x0000a869
000000000000a862	movl	$0x0000000f,%ebx
000000000000a867	xorl	%edi,%edi
000000000000a869	cmpl	$0x000001ff,%r12d
000000000000a870	jbe	0x0000a87a
000000000000a872	xorl	%edi,%edi
000000000000a874	movl	$0x000001ff,%r12d
000000000000a87a	cmpl	$0x3f,%esi
000000000000a87d	jbe	0x0000a886
000000000000a87f	movl	$0x0000003f,%esi
000000000000a884	xorl	%edi,%edi
000000000000a886	testb	%al,%al
000000000000a888	je	0x0000a900
000000000000a88a	shll	$0x18,%edx
000000000000a88d	orl	$0x80000000,%edx
000000000000a893	shll	$0x14,%r13d
000000000000a897	orl	%r13d,%edx
000000000000a89a	shll	$0x08,%r14d
000000000000a89e	orl	%r14d,%edx
000000000000a8a1	orl	0xbc(%rbp),%edx
000000000000a8a4	movl	%edx,0x000003fc(%r15)
000000000000a8ab	movl	%ebx,%eax
000000000000a8ad	shll	$0x14,%eax
000000000000a8b0	shll	$0x18,%ecx
000000000000a8b3	orl	%ecx,%eax
000000000000a8b5	shll	$0x08,%r12d
000000000000a8b9	orl	%r12d,%eax
000000000000a8bc	orl	%esi,%eax
000000000000a8be	movl	%eax,0x00000400(%r15)
000000000000a8c5	testb	%bh,%bh
000000000000a8c8	je	0x0000a934
000000000000a8ca	orl	$0x80000000,%eax
000000000000a8cf	movl	%eax,0x00000400(%r15)
000000000000a8d6	jmp	0x0000a934
000000000000a8d8	movl	$0x00000514,%r8d
000000000000a8de	movl	$0x00000004,%ecx
000000000000a8e3	movl	%ebx,%edx
000000000000a8e5	movl	$0x00000100,%esi
000000000000a8ea	movl	0xcc(%rbp),%edi
000000000000a8ed	callq	0x100002d12
000000000000a8f2	movl	%eax,%r8d
000000000000a8f5	movl	%r12d,%edi
000000000000a8f8	movl	%r12d,%esi
000000000000a8fb	jmp	0x10000a6ae
000000000000a900	shll	$0x14,%r13d
000000000000a904	shll	$0x18,%edx
000000000000a907	orl	%edx,%r13d
000000000000a90a	shll	$0x08,%r14d
000000000000a90e	orl	%r14d,%r13d
000000000000a911	orl	0xbc(%rbp),%r13d
000000000000a915	movl	%r13d,0x000003fc(%r15)
000000000000a91c	shll	$0x14,%ebx
000000000000a91f	shll	$0x18,%ecx
000000000000a922	orl	%ecx,%ebx
000000000000a924	shll	$0x08,%r12d
000000000000a928	orl	%r12d,%ebx
000000000000a92b	orl	%esi,%ebx
000000000000a92d	movl	%ebx,0x00000400(%r15)
000000000000a934	movq	0xd8(%rbp),%rbx
000000000000a938	movq	0xe0(%rbp),%r12
000000000000a93c	movq	0xe8(%rbp),%r13
000000000000a940	movq	0xf0(%rbp),%r14
000000000000a944	movq	0xf8(%rbp),%r15
000000000000a948	leave
000000000000a949	ret
__ZN22AppleIntelHDGraphicsFB5startEP9IOService:
000000000000a94a	pushq	%rbp
000000000000a94b	movq	%rsp,%rbp
000000000000a94e	pushq	%r15
000000000000a950	pushq	%r14
000000000000a952	pushq	%r13
000000000000a954	pushq	%r12
000000000000a956	pushq	%rbx
000000000000a957	subq	$0x000001f8,%rsp
000000000000a95e	movq	%rdi,%r12
000000000000a961	movq	%rsi,%r14
000000000000a964	movq	0x0000a4ad(%rip),%rax
000000000000a96b	movq	(%rax),%rdx
000000000000a96e	movq	%rdx,0xc8(%rbp)
000000000000a972	xorl	%edx,%edx
000000000000a974	movq	%rsi,0x00000088(%r12)
000000000000a97c	movq	(%rsi),%rax
000000000000a97f	movq	%rsi,%rdi
000000000000a982	call	*0x000008f8(%rax)
000000000000a988	testb	%al,%al
000000000000a98a	je	0x0000a9b1
000000000000a98c	movq	(%r12),%rax
000000000000a990	xorl	%esi,%esi
000000000000a992	movq	%r12,%rdi
000000000000a995	call	*0x00000388(%rax)
000000000000a99b	movq	%rax,%rsi
000000000000a99e	leaq	0x00007293(%rip),%rdi
000000000000a9a5	xorl	%eax,%eax
000000000000a9a7	callq	0x0000a9ac
000000000000a9ac	jmp	0x0000b88d
000000000000a9b1	movq	%r12,0x0000a240(%rip)
000000000000a9b8	movq	0x00000088(%r12),%rdi
000000000000a9c0	movq	(%rdi),%rax
000000000000a9c3	xorl	%esi,%esi
000000000000a9c5	call	*0x00000880(%rax)
000000000000a9cb	movl	%eax,0x00000130(%r12)
000000000000a9d3	movq	0x00000088(%r12),%rdi
000000000000a9db	movq	(%rdi),%rax
000000000000a9de	movl	$0x00000008,%esi
000000000000a9e3	call	*0x00000890(%rax)
000000000000a9e9	movzbl	%al,%eax
000000000000a9ec	movl	%eax,0x00000134(%r12)
000000000000a9f4	movq	0x00000088(%r12),%rdi
000000000000a9fc	movq	(%rdi),%rax
000000000000a9ff	movl	$0x0000002c,%esi
000000000000aa04	call	*0x00000880(%rax)
000000000000aa0a	movl	%eax,0x00000138(%r12)
000000000000aa12	movb	$0x00,0x000004c1(%r12)
000000000000aa1b	movb	$0x00,0x00000193(%r12)
000000000000aa24	movq	0x00000088(%r12),%rdi
000000000000aa2c	movq	(%rdi),%rax
000000000000aa2f	movq	0x0000a3ea(%rip),%rbx
000000000000aa36	movq	(%rbx),%rsi
000000000000aa39	call	*0x000002a8(%rax)
000000000000aa3f	testq	%rax,%rax
000000000000aa42	jne	0x0000aa7e
000000000000aa44	movl	$0x00000012,%esi
000000000000aa49	leaq	0x0000720f(%rip),%rdi
000000000000aa50	callq	0x0000aa55
000000000000aa55	movq	%rax,%r13
000000000000aa58	testq	%rax,%rax
000000000000aa5b	je	0x0000aa7e
000000000000aa5d	movq	0x00000088(%r12),%rdi
000000000000aa65	movq	(%rdi),%rax
000000000000aa68	movq	(%rbx),%rsi
000000000000aa6b	movq	%r13,%rdx
000000000000aa6e	call	*0x00000258(%rax)
000000000000aa74	movq	0x00(%r13),%rax
000000000000aa78	movq	%r13,%rdi
000000000000aa7b	call	*0x28(%rax)
000000000000aa7e	movq	%r14,%rsi
000000000000aa81	movq	%r12,%rdi
000000000000aa84	movq	0x0000a34d(%rip),%rax
000000000000aa8b	call	*0x000005d0(%rax)
000000000000aa91	testb	%al,%al
000000000000aa93	je	0x0000b88d
000000000000aa99	movq	$0x00000000,0x08(%rsp)
000000000000aaa2	movq	$0x00000000,(%rsp)
000000000000aaaa	movl	$0x00000001,%r9d
000000000000aab0	xorl	%r8d,%r8d
000000000000aab3	movl	$0x00000040,%ecx
000000000000aab8	xorl	%edx,%edx
000000000000aaba	movl	$0x00000040,%esi
000000000000aabf	movq	0x0000a362(%rip),%rdi
000000000000aac6	callq	0x0000aacb
000000000000aacb	movq	%rax,0x00000178(%r12)
000000000000aad3	testq	%rax,%rax
000000000000aad6	je	0x0000b88d
000000000000aadc	movq	0x00000088(%r12),%rdi
000000000000aae4	movq	(%rdi),%rax
000000000000aae7	movl	$0x00000001,%esi
000000000000aaec	call	*0x000008c8(%rax)
000000000000aaf2	movq	0x00000088(%r12),%rdi
000000000000aafa	movq	(%rdi),%rax
000000000000aafd	xorl	%edx,%edx
000000000000aaff	movl	$0x00000010,%esi
000000000000ab04	call	*0x00000908(%rax)
000000000000ab0a	movq	%rax,%r13
000000000000ab0d	leaq	0x00007164(%rip),%rdi
000000000000ab14	testq	%rax,%rax
000000000000ab17	je	0x0000b886
000000000000ab1d	movq	%rax,0x00000090(%r12)
000000000000ab25	movq	(%rax),%rax
000000000000ab28	movq	%r13,%rdi
000000000000ab2b	call	*0x00000118(%rax)
000000000000ab31	movq	%rax,0x00000098(%r12)
000000000000ab39	movq	%r12,%rdi
000000000000ab3c	callq	0x10000803c
000000000000ab41	movq	%r12,%rdi
000000000000ab44	callq	0x100004a44
000000000000ab49	movq	0x00000088(%r12),%rdi
000000000000ab51	movq	(%rdi),%rax
000000000000ab54	movl	$0x00000018,%esi
000000000000ab59	call	*0x00000900(%rax)
000000000000ab5f	movq	%rax,%rbx
000000000000ab62	leaq	0x00007137(%rip),%rdi
000000000000ab69	testq	%rax,%rax
000000000000ab6c	je	0x0000b886
000000000000ab72	movq	(%rax),%rax
000000000000ab75	movq	%rbx,%rdi
000000000000ab78	call	*0x20(%rax)
000000000000ab7b	movq	%rbx,0x000000a0(%r12)
000000000000ab83	movq	0x00000098(%r12),%rcx
000000000000ab8b	movl	0x00002020(%rcx),%esi
000000000000ab91	movl	%esi,%edi
000000000000ab93	andl	$0x0e,%edi
000000000000ab96	movl	%edi,%eax
000000000000ab98	shrl	%eax
000000000000ab9a	cmpl	$0x05,%eax
000000000000ab9d	ja	0x0000ac12
000000000000ab9f	movl	%eax,%eax
000000000000aba1	leaq	0x0000000c(%rip),%rdx
000000000000aba8	movslq	(%rdx,%rax,4),%rax
000000000000abac	addq	%rdx,%rax
000000000000abaf	jmp	*%rax
000000000000abb1	nopl	(%rax)
000000000000abb4	popq	%rsi
000000000000abb5	addb	%al,(%rax)
000000000000abb7	addb	%bl,(%rax)
000000000000abb9	addb	%al,(%rax)
000000000000abbb	addb	%ah,(%rsi)
000000000000abbd	addb	%al,(%rax)
000000000000abbf	addb	%dh,(%rax,%rax)
000000000000abc2	addb	%al,(%rax)
000000000000abc4	addb	%al,(%rax)
000000000000abc7	addb	%dl,0x00(%rax)
000000000000abca	addb	%al,(%rax)
000000000000abcc	movl	$0x00040000,0x0000013c(%r12)
000000000000abd8	jmp	0x0000ac1e
000000000000abda	movl	$0x00020000,0x0000013c(%r12)
000000000000abe6	jmp	0x0000ac1e
000000000000abe8	movl	$0x00100000,0x0000013c(%r12)
000000000000abf4	jmp	0x0000ac1e
000000000000abf6	movl	$0x00200000,0x0000013c(%r12)
000000000000ac02	jmp	0x0000ac1e
000000000000ac04	movl	$0x00180000,0x0000013c(%r12)
000000000000ac10	jmp	0x0000ac1e
000000000000ac12	movl	$0x00080000,0x0000013c(%r12)
000000000000ac1e	andl	$0xf1,%esi
000000000000ac21	je	0x0000ac29
000000000000ac23	movl	%edi,0x00002020(%rcx)
000000000000ac29	movq	0x00(%r13),%rax
000000000000ac2d	movq	%r13,%rdi
000000000000ac30	call	*0x00000118(%rax)
000000000000ac36	addq	$0x00200000,%eax
000000000000ac3c	movq	%rax,0x000000c8(%r12)
000000000000ac44	movq	%r12,%rdi
000000000000ac47	callq	0x100007ee6
000000000000ac4c	movq	0x0000a1b5(%rip),%r13
000000000000ac53	movq	0x00(%r13),%rdx
000000000000ac57	movq	0x0000a1d2(%rip),%rbx
000000000000ac5e	movq	(%rbx),%rdi
000000000000ac61	movq	%rdx,%rcx
000000000000ac64	movl	$0x00000010,%esi
000000000000ac69	callq	0x0000ac6e
000000000000ac6e	movq	%rax,%rdx
000000000000ac71	movq	%rax,0x000000d8(%r12)
000000000000ac79	testq	%rax,%rax
000000000000ac7c	je	0x0000b88d
000000000000ac82	movq	(%rax),%rax
000000000000ac85	movq	%rdx,%rdi
000000000000ac88	call	*0x000002e0(%rax)
000000000000ac8e	movq	%rax,0x000000e8(%r12)
000000000000ac96	movq	0x000000d8(%r12),%rdi
000000000000ac9e	movq	(%rdi),%rax
000000000000aca1	xorl	%ecx,%ecx
000000000000aca3	xorl	%edx,%edx
000000000000aca5	xorl	%esi,%esi
000000000000aca7	call	*0x00000138(%rax)
000000000000acad	movq	%rax,0x000000f0(%r12)
000000000000acb5	xorl	%ecx,%ecx
000000000000acb7	testq	%rax,%rax
000000000000acba	jne	0x0000acd7
000000000000acbc	jmp	0x0000b88d
000000000000acc1	leaq	0x00000000(,%rdx,4),%rax
000000000000acc9	addq	0x000000e8(%r12),%rax
000000000000acd1	movl	$0xdeefceeb,(%rax)
000000000000acd7	movl	%ecx,%edx
000000000000acd9	incq	%rcx
000000000000acdc	movq	0x00(%r13),%rax
000000000000ace0	shrq	$0x02,%rax
000000000000ace4	cmpq	%rax,%rdx
000000000000ace7	jb	0x0000acc1
000000000000ace9	movq	0x000000f0(%r12),%rax
000000000000acf1	movl	%eax,%edx
000000000000acf3	andl	$0xfffff000,%edx
000000000000acf9	orl	$0x01,%edx
000000000000acfc	shrq	$0x1c,%rax
000000000000ad00	andl	$0x000000f0,%eax
000000000000ad05	orl	%eax,%edx
000000000000ad07	movl	%edx,0x000000f8(%r12)
000000000000ad0f	movl	$0x12000000,0xfffffebc(%rbp)
000000000000ad19	movq	(%r12),%rax
000000000000ad1d	leaq	0xfffffebc(%rbp),%rdx
000000000000ad24	movl	$0x00000004,%ecx
000000000000ad29	leaq	0x00006f98(%rip),%rsi
000000000000ad30	movq	%r12,%rdi
000000000000ad33	call	*0x00000288(%rax)
000000000000ad39	movl	$0x00000001,0x0000066c(%r12)
000000000000ad45	movq	(%r12),%rax
000000000000ad49	leaq	0x0000066c(%r12),%rdx
000000000000ad51	movl	$0x00000004,%ecx
000000000000ad56	leaq	0x00006f7a(%rip),%rsi
000000000000ad5d	movq	%r12,%rdi
000000000000ad60	call	*0x00000288(%rax)
000000000000ad66	cmpb	$0x00,0x00000729(%r12)
000000000000ad6f	jne	0x0000ad80
000000000000ad71	cmpb	$0x00,0x0000072a(%r12)
000000000000ad7a	je	0x0000ae48
000000000000ad80	movq	0x00(%r13),%rdx
000000000000ad84	movq	(%rbx),%rdi
000000000000ad87	movq	%rdx,%rcx
000000000000ad8a	movl	$0x00000010,%esi
000000000000ad8f	callq	0x0000ad94
000000000000ad94	movq	%rax,0x00000100(%r12)
000000000000ad9c	testq	%rax,%rax
000000000000ad9f	jne	0x0000adc2
000000000000ada1	leaq	0x00007338(%rip),%rsi
000000000000ada8	leaq	0x00006f31(%rip),%rdi
000000000000adaf	callq	0x0000adb4
000000000000adb4	leaq	0x00006f4d(%rip),%rdi
000000000000adbb	xorl	%eax,%eax
000000000000adbd	callq	0x0000adc2
000000000000adc2	movq	0x00000100(%r12),%rdi
000000000000adca	movq	(%rdi),%rax
000000000000adcd	call	*0x000002e0(%rax)
000000000000add3	movq	%rax,%r15
000000000000add6	movq	0x00000100(%r12),%rdi
000000000000adde	movq	(%rdi),%rax
000000000000ade1	xorl	%ecx,%ecx
000000000000ade3	xorl	%edx,%edx
000000000000ade5	xorl	%esi,%esi
000000000000ade7	call	*0x00000138(%rax)
000000000000aded	movq	%rax,%rbx
000000000000adf0	testq	%rax,%rax
000000000000adf3	jne	0x0000ae03
000000000000adf5	leaq	0x00006fac(%rip),%rdi
000000000000adfc	xorl	%eax,%eax
000000000000adfe	callq	0x0000ae03
000000000000ae03	movq	0x00(%r13),%rdx
000000000000ae07	xorl	%esi,%esi
000000000000ae09	movq	%r15,%rdi
000000000000ae0c	callq	0x0000ae11
000000000000ae11	movl	%ebx,%edx
000000000000ae13	andl	$0xfffff000,%edx
000000000000ae19	orl	$0x01,%edx
000000000000ae1c	shrq	$0x1c,%rbx
000000000000ae20	movl	%ebx,%eax
000000000000ae22	andl	$0x000000f0,%eax
000000000000ae27	orl	%eax,%edx
000000000000ae29	movl	$0x80000000,%eax
000000000000ae2e	subq	0x00(%r13),%rax
000000000000ae32	movq	%rax,0x00000108(%r12)
000000000000ae3a	shrq	$0x0a,%rax
000000000000ae3e	addq	0x000000c8(%r12),%rax
000000000000ae46	movl	%edx,(%rax)
000000000000ae48	movl	0x00000600(%r12),%eax
000000000000ae50	movb	%al,0x00000192(%r12)
000000000000ae58	movl	0x00000194(%r12),%edx
000000000000ae60	movl	%edx,%eax
000000000000ae62	shll	$0x19,%eax
000000000000ae65	cdqe
000000000000ae67	movq	%rax,0x000000a8(%r12)
000000000000ae6f	movzbl	0x0000018c(%rsp),%eax
000000000000ae78	movb	%al,0x00000190(%r12)
000000000000ae80	movzbl	0x0000018d(%rsp),%eax
000000000000ae89	movb	%al,0x00000191(%r12)
000000000000ae91	incb	%al
000000000000ae93	jne	0x0000aea6
000000000000ae95	movzbl	0x0000018e(%rsp),%eax
000000000000ae9e	movb	%al,0x00000191(%r12)
000000000000aea6	decl	%edx
000000000000aea8	jg	0x0000aece
000000000000aeaa	movq	0x00000098(%r12),%rax
000000000000aeb2	movl	$0x00000000,0x0000300c(%rax)
000000000000aebc	movq	0x00000098(%r12),%rax
000000000000aec4	movl	$0x00000000,0x00003008(%rax)
000000000000aece	movq	%r12,%rdi
000000000000aed1	callq	0x100006da8
000000000000aed6	leaq	0x00006f6b(%rip),%rdi
000000000000aedd	testl	%eax,%eax
000000000000aedf	jne	0x0000b886
000000000000aee5	movq	0x000000a8(%r12),%rsi
000000000000aeed	movq	0x000000a0(%r12),%rdi
000000000000aef5	movl	$0x00100000,%edx
000000000000aefa	callq	0x0000aeff
000000000000aeff	movq	%rax,%rdx
000000000000af02	movq	%rax,0x000000b0(%r12)
000000000000af0a	leaq	0x00006f5f(%rip),%rdi
000000000000af11	testq	%rax,%rax
000000000000af14	je	0x0000b886
000000000000af1a	movq	(%rax),%rax
000000000000af1d	xorl	%esi,%esi
000000000000af1f	movq	%rdx,%rdi
000000000000af22	call	*0x00000200(%rax)
000000000000af28	movq	%rax,%rdx
000000000000af2b	movq	%rax,0x000000b8(%r12)
000000000000af33	leaq	0x00006f56(%rip),%rdi
000000000000af3a	testq	%rax,%rax
000000000000af3d	je	0x0000b886
000000000000af43	movq	(%rax),%rax
000000000000af46	movq	%rdx,%rdi
000000000000af49	call	*0x00000118(%rax)
000000000000af4f	movq	%rax,0x000000c0(%r12)
000000000000af57	xorl	%ebx,%ebx
000000000000af59	jmp	0x0000af6a
000000000000af5b	movq	%r14,%rdx
000000000000af5e	movl	%ebx,%esi
000000000000af60	movq	%r12,%rdi
000000000000af63	callq	0x100004804
000000000000af68	incl	%ebx
000000000000af6a	cmpl	0x00000194(%r12),%ebx
000000000000af72	jl	0x0000af5b
000000000000af74	movzwl	0x000003b8(%rsp),%eax
000000000000af7d	orl	$0xabcd0000,%eax
000000000000af82	movl	%eax,0x000003b8(%r12)
000000000000af8a	movq	0x00000098(%r12),%rdx
000000000000af92	movl	%eax,0x000c7204(%rdx)
000000000000af98	movl	0x000003ac(%r12),%eax
000000000000afa0	movl	%eax,0x00000394(%r12)
000000000000afa8	movl	0x000003b0(%r12),%eax
000000000000afb0	movl	%eax,0x00000398(%r12)
000000000000afb8	movl	0x000003b4(%r12),%eax
000000000000afc0	movl	%eax,0x0000039c(%r12)
000000000000afc8	movl	$0x00000001,%esi
000000000000afcd	movq	%r12,%rdi
000000000000afd0	callq	0x1000046c2
000000000000afd5	movl	$0x00000000,0x000003a0(%r12)
000000000000afe1	movl	$0x00000000,0x000003a4(%r12)
000000000000afed	movl	0x0000039c(%r12),%eax
000000000000aff5	andq	$0xffffff00,%eax
000000000000affb	movl	%eax,0x000003a8(%r12)
000000000000b003	leaq	0x00006ea3(%rip),%rdi
000000000000b00a	callq	0x0000b00f
000000000000b00f	movq	%rax,0x00000738(%r12)
000000000000b017	leaq	0x00006ea2(%rip),%rdi
000000000000b01e	callq	0x0000b023
000000000000b023	movq	%rax,0x00000740(%r12)
000000000000b02b	leaq	0x00006ea1(%rip),%rdi
000000000000b032	callq	0x0000b037
000000000000b037	movq	%rax,0x00000748(%r12)
000000000000b03f	movq	(%r12),%rax
000000000000b043	movq	%r12,%rdi
000000000000b046	call	*0x00000688(%rax)
000000000000b04c	movq	%rax,0x00000410(%r12)
000000000000b054	leaq	0xffff8da3(%rip),%rsi
000000000000b05b	movq	%r12,%rdi
000000000000b05e	callq	0x0000b063
000000000000b063	movq	%rax,%rdx
000000000000b066	movq	%rax,0x00009e5b(%rip)
000000000000b06d	testq	%rax,%rax
000000000000b070	je	0x0000b086
000000000000b072	movq	0x00000410(%r12),%rdi
000000000000b07a	movq	(%rdi),%rax
000000000000b07d	movq	%rdx,%rsi
000000000000b080	call	*0x00000140(%rax)
000000000000b086	xorl	%ecx,%ecx
000000000000b088	xorl	%edx,%edx
000000000000b08a	leaq	0x0000431d(%rip),%rsi
000000000000b091	movq	%r12,%rdi
000000000000b094	callq	0x0000b099
000000000000b099	movq	%rax,%rdx
000000000000b09c	movq	%rax,0x000000e0(%r12)
000000000000b0a4	testq	%rax,%rax
000000000000b0a7	je	0x0000b0bd
000000000000b0a9	movq	0x00000410(%r12),%rdi
000000000000b0b1	movq	(%rdi),%rax
000000000000b0b4	movq	%rdx,%rsi
000000000000b0b7	call	*0x00000140(%rax)
000000000000b0bd	movl	$0x00000000,0xfffffeb8(%rbp)
000000000000b0c7	movl	$0x00000000,0xfffffeb4(%rbp)
000000000000b0d1	movq	0x00009d08(%rip),%rax
000000000000b0d8	movq	(%rax),%r13
000000000000b0db	xorl	%ebx,%ebx
000000000000b0dd	leaq	0xffffff40(%rbp),%rcx
000000000000b0e4	movq	%rcx,0xfffffe00(%rbp)
000000000000b0eb	movq	(%r14),%rax
000000000000b0ee	leaq	0x00006def(%rip),%rsi
000000000000b0f5	movq	%r14,%rdi
000000000000b0f8	call	*0x000002b8(%rax)
000000000000b0fe	movq	%rax,%rdi
000000000000b101	movq	%r13,%rsi
000000000000b104	callq	0x0000b109
000000000000b109	movq	%rax,%rcx
000000000000b10c	testq	%rax,%rax
000000000000b10f	je	0x0000b138
000000000000b111	movq	(%rax),%rax
000000000000b114	movl	$0x00000001,%edx
000000000000b119	movl	%ebx,%esi
000000000000b11b	movq	%rcx,%rdi
000000000000b11e	call	*0x00000180(%rax)
000000000000b124	testq	%rax,%rax
000000000000b127	je	0x0000b138
000000000000b129	movzbl	(%rax),%eax
000000000000b12c	movq	0xfffffe00(%rbp),%rdx
000000000000b133	movb	%al,(%rbx,%rdx)
000000000000b136	jmp	0x0000b143
000000000000b138	movq	0xfffffe00(%rbp),%rcx
000000000000b13f	movb	$0xff,(%rbx,%rcx)
000000000000b143	incq	%rbx
000000000000b146	cmpq	$0x00000080,%rbx
000000000000b14d	jne	0x0000b0eb
000000000000b14f	andq	$0xffffff00,%rbx
000000000000b156	leaq	0xfffffec0(%rbp),%r15
000000000000b15d	movq	(%r14),%rax
000000000000b160	leaq	0x00006d89(%rip),%rsi
000000000000b167	movq	%r14,%rdi
000000000000b16a	call	*0x000002b8(%rax)
000000000000b170	movq	%rax,%rdi
000000000000b173	movq	%r13,%rsi
000000000000b176	callq	0x0000b17b
000000000000b17b	movq	%rax,%rcx
000000000000b17e	testq	%rax,%rax
000000000000b181	je	0x0000b1a4
000000000000b183	movq	(%rax),%rax
000000000000b186	movl	$0x00000001,%edx
000000000000b18b	movl	%ebx,%esi
000000000000b18d	movq	%rcx,%rdi
000000000000b190	call	*0x00000180(%rax)
000000000000b196	testq	%rax,%rax
000000000000b199	je	0x0000b1a4
000000000000b19b	movzbl	(%rax),%eax
000000000000b19e	movb	%al,(%rbx,%r15)
000000000000b1a2	jmp	0x0000b1a9
000000000000b1a4	movb	$0xff,(%rbx,%r15)
000000000000b1a9	incq	%rbx
000000000000b1ac	cmpq	$0x00000080,%rbx
000000000000b1b3	jne	0x0000b15d
000000000000b1b5	movq	(%r14),%rax
000000000000b1b8	leaq	0x000060ac(%rip),%rsi
000000000000b1bf	movq	%r14,%rdi
000000000000b1c2	call	*0x000002b8(%rax)
000000000000b1c8	movq	%rax,%rdi
000000000000b1cb	movq	%r13,%rsi
000000000000b1ce	callq	0x0000b1d3
000000000000b1d3	movq	%rax,%rcx
000000000000b1d6	testq	%rax,%rax
000000000000b1d9	je	0x0000b1f3
000000000000b1db	movq	(%rax),%rax
000000000000b1de	movl	$0x00000100,%edx
000000000000b1e3	xorl	%esi,%esi
000000000000b1e5	movq	%rcx,%rdi
000000000000b1e8	call	*0x00000180(%rax)
000000000000b1ee	testq	%rax,%rax
000000000000b1f1	jne	0x0000b221
000000000000b1f3	leaq	0x000004c8(%r12),%rdi
000000000000b1fb	movl	$0x00000100,%edx
000000000000b200	xorl	%esi,%esi
000000000000b202	callq	0x0000b207
000000000000b207	movl	$0x00000000,0x000004c8(%r12)
000000000000b213	movl	$0x00000001,0x000004cc(%r12)
000000000000b21f	jmp	0x0000b236
000000000000b221	leaq	0x000004c8(%r12),%rdi
000000000000b229	movl	$0x00000100,%edx
000000000000b22e	movq	%rax,%rsi
000000000000b231	callq	0x0000b236
000000000000b236	movq	(%r14),%rax
000000000000b239	leaq	0x00006cbc(%rip),%rsi
000000000000b240	movq	%r14,%rdi
000000000000b243	call	*0x000002b8(%rax)
000000000000b249	movq	%rax,%rdi
000000000000b24c	movq	%r13,%rsi
000000000000b24f	callq	0x0000b254
000000000000b254	movq	%rax,0xfffffe08(%rbp)
000000000000b25b	testq	%rax,%rax
000000000000b25e	je	0x0000b277
000000000000b260	movq	%rax,%rdx
000000000000b263	movq	(%rax),%rax
000000000000b266	movq	%rdx,%rdi
000000000000b269	call	*0x00000178(%rax)
000000000000b26f	movl	(%rax),%eax
000000000000b271	movl	%eax,0xfffffeb8(%rbp)
000000000000b277	movq	(%r14),%rax
000000000000b27a	leaq	0x00006c90(%rip),%rsi
000000000000b281	movq	%r14,%rdi
000000000000b284	call	*0x000002b8(%rax)
000000000000b28a	movq	%rax,%rdi
000000000000b28d	movq	%r13,%rsi
000000000000b290	callq	0x0000b295
000000000000b295	movq	%rax,0xfffffe10(%rbp)
000000000000b29c	testq	%rax,%rax
000000000000b29f	je	0x0000b2b8
000000000000b2a1	movq	%rax,%rcx
000000000000b2a4	movq	(%rax),%rax
000000000000b2a7	movq	%rcx,%rdi
000000000000b2aa	call	*0x00000178(%rax)
000000000000b2b0	movl	(%rax),%eax
000000000000b2b2	movl	%eax,0xfffffeb4(%rbp)
000000000000b2b8	movl	$0x00000000,0x00000408(%r12)
000000000000b2c4	movq	(%r14),%rax
000000000000b2c7	leaq	0x00006c58(%rip),%rsi
000000000000b2ce	movq	%r14,%rdi
000000000000b2d1	call	*0x000002b8(%rax)
000000000000b2d7	movq	%rax,%rdi
000000000000b2da	movq	%r13,%rsi
000000000000b2dd	callq	0x0000b2e2
000000000000b2e2	movq	%rax,%rcx
000000000000b2e5	testq	%rax,%rax
000000000000b2e8	je	0x0000b30c
000000000000b2ea	movq	(%rax),%rax
000000000000b2ed	movl	$0x00000004,%edx
000000000000b2f2	xorl	%esi,%esi
000000000000b2f4	movq	%rcx,%rdi
000000000000b2f7	call	*0x00000180(%rax)
000000000000b2fd	testq	%rax,%rax
000000000000b300	je	0x0000b30c
000000000000b302	movl	(%rax),%eax
000000000000b304	movl	%eax,0x00000408(%r12)
000000000000b30c	movq	$0x00000000,0x000006b8(%r12)
000000000000b318	leaq	0x00006c21(%rip),%rdi
000000000000b31f	callq	0x0000b324
000000000000b324	movq	%rax,0x000006c0(%r12)
000000000000b32c	leaq	0x00006c11(%rip),%rdi
000000000000b333	callq	0x0000b338
000000000000b338	movq	%rax,0x000006c8(%r12)
000000000000b340	movq	0x00009af1(%rip),%rax
000000000000b347	movq	(%rax),%rax
000000000000b34a	movq	%rax,0xfffffe18(%rbp)
000000000000b351	xorl	%r15d,%r15d
000000000000b354	leaq	0xfffffeb4(%rbp),%rax
000000000000b35b	movq	%rax,0xfffffdf8(%rbp)
000000000000b362	leaq	0xfffffeb8(%rbp),%rdx
000000000000b369	movq	%rdx,0xfffffdf0(%rbp)
000000000000b370	jmp	0x0000b5b8
000000000000b375	movl	$0x00000500,%edi
000000000000b37a	callq	0x0000b37f
000000000000b37f	movq	%rax,%rbx
000000000000b382	testq	%rax,%rax
000000000000b385	je	0x0000b87f
000000000000b38b	movq	%rax,%rdi
000000000000b38e	callq	0x1000089b4
000000000000b393	movq	(%rbx),%rax
000000000000b396	xorl	%esi,%esi
000000000000b398	movq	%rbx,%rdi
000000000000b39b	call	*0x00000248(%rax)
000000000000b3a1	movslq	%r13d,%rax
000000000000b3a4	movq	%rbx,0x00000198(%r12,%rax,8)
000000000000b3ac	movl	%r13d,%edx
000000000000b3af	notl	%edx
000000000000b3b1	addl	0x00000194(%r12),%edx
000000000000b3b9	movl	%edx,0x000001d8(%rbx)
000000000000b3bf	movb	$0x00,0x00000470(%rbx)
000000000000b3c6	movl	$0x00000000,0x00000474(%rbx)
000000000000b3d0	movl	$0x00000000,0x00000478(%rbx)
000000000000b3da	movl	$0x00000000,0x0000047c(%rbx)
000000000000b3e4	movq	$0x00000000,0x00000488(%rbx)
000000000000b3ef	movl	$0x00000000,0x000003e8(%rbx)
000000000000b3f9	movzbl	0x0000018f(%rsp),%eax
000000000000b402	cmpl	%eax,%edx
000000000000b404	sete	%al
000000000000b407	movb	%al,0x00000490(%rbx)
000000000000b40d	testb	%al,%al
000000000000b40f	je	0x0000b42e
000000000000b411	movq	(%rbx),%rax
000000000000b414	movq	0xfffffe18(%rbp),%rcx
000000000000b41b	movq	(%rcx),%rdx
000000000000b41e	leaq	0x000060d7(%rip),%rsi
000000000000b425	movq	%rbx,%rdi
000000000000b428	call	*0x00000268(%rax)
000000000000b42e	movb	$0x01,0x00000490(%rbx)
000000000000b435	movl	0x000005d8(%r12),%eax
000000000000b43d	movl	%eax,0x00000494(%rbx)
000000000000b443	movl	$0x00000000,0x00000498(%rbx)
000000000000b44d	movl	0x000001d8(%rbx),%eax
000000000000b453	testl	%eax,%eax
000000000000b455	jne	0x0000b473
000000000000b457	cmpq	$0x00,0xfffffe08(%rbp)
000000000000b45f	je	0x0000b557
000000000000b465	movl	$0x00000004,%esi
000000000000b46a	movq	0xfffffdf0(%rbp),%rdi
000000000000b471	jmp	0x0000b492
000000000000b473	cmpl	$0x01,%eax
000000000000b476	jne	0x0000b4b3
000000000000b478	cmpq	$0x00,0xfffffe10(%rbp)
000000000000b480	je	0x0000b557
000000000000b486	movl	$0x00000004,%esi
000000000000b48b	movq	0xfffffdf8(%rbp),%rdi
000000000000b492	callq	0x0000b497
000000000000b497	movq	(%rbx),%rcx
000000000000b49a	movq	%rax,%rdx
000000000000b49d	leaq	0x00006aaf(%rip),%rsi
000000000000b4a4	movq	%rbx,%rdi
000000000000b4a7	call	*0x00000268(%rcx)
000000000000b4ad	movl	0x000001d8(%rbx),%eax
000000000000b4b3	cmpl	$0x000000ff,%eax
000000000000b4b8	jne	0x0000b557
000000000000b4be	movl	$0x00000000,0x00000478(%rbx)
000000000000b4c8	movl	$0x00000000,0x0000047c(%rbx)
000000000000b4d2	movl	$0x00000000,0x000003e8(%rbx)
000000000000b4dc	leaq	0x000003ec(%rbx),%rsi
000000000000b4e3	movl	$0x00000080,%edx
000000000000b4e8	movq	0xfffffe00(%rbp),%rdi
000000000000b4ef	callq	0x0000b4f4
000000000000b4f4	movl	$0x00000000,0x0000046c(%rbx)
000000000000b4fe	movl	$0x00000000,0x00000474(%rbx)
000000000000b508	movl	$0x00000000,0x00000480(%rbx)
000000000000b512	movzbl	0xffffff49(%rbp),%eax
000000000000b519	shll	$0x08,%eax
000000000000b51c	movzbl	0xffffff48(%rbp),%edx
000000000000b523	orl	%edx,%eax
000000000000b525	cmpl	%eax,0x000004d0(%r12)
000000000000b52d	jne	0x0000b557
000000000000b52f	movzbl	0xffffff4b(%rbp),%eax
000000000000b536	shll	$0x08,%eax
000000000000b539	movzbl	0xffffff4a(%rbp),%edx
000000000000b540	orl	%edx,%eax
000000000000b542	cmpl	%eax,0x000004d4(%r12)
000000000000b54a	jne	0x0000b557
000000000000b54c	movq	$0x00000000,0x00000488(%rbx)
000000000000b557	movq	(%rbx),%rax
000000000000b55a	movl	$0x00000040,%ecx
000000000000b55f	movq	%r12,%rdx
000000000000b562	leaq	0x000069fd(%rip),%rsi
000000000000b569	movq	%rbx,%rdi
000000000000b56c	call	*0x00000280(%rax)
000000000000b572	movq	(%rbx),%rax
000000000000b575	movl	$0x00000020,%ecx
000000000000b57a	movq	%r15,%rdx
000000000000b57d	leaq	0x000069f2(%rip),%rsi
000000000000b584	movq	%rbx,%rdi
000000000000b587	call	*0x00000280(%rax)
000000000000b58d	movq	(%rbx),%rax
000000000000b590	movq	0x00000088(%r12),%rsi
000000000000b598	movq	%rbx,%rdi
000000000000b59b	call	*0x00000670(%rax)
000000000000b5a1	movq	(%rbx),%rax
000000000000b5a4	movq	0x00000088(%r12),%rsi
000000000000b5ac	movq	%rbx,%rdi
000000000000b5af	call	*0x000005c0(%rax)
000000000000b5b5	incq	%r15
000000000000b5b8	movl	%r15d,%r13d
000000000000b5bb	cmpl	%r15d,0x00000194(%r12)
000000000000b5c3	jg	0x10000b375
000000000000b5c9	movq	%r12,%rdi
000000000000b5cc	callq	0x10000a5de
000000000000b5d1	callq	0x0000b5d6
000000000000b5d6	movq	%rax,0x00000418(%r12)
000000000000b5de	movb	$0x00,0x0000042c(%r12)
000000000000b5e7	xorl	%ebx,%ebx
000000000000b5e9	leaq	0xfffffeb0(%rbp),%r15
000000000000b5f0	movl	%ebx,%r13d
000000000000b5f3	movl	$0x00000000,0xfffffeb0(%rbp)
000000000000b5fd	movq	(%r14),%rax
000000000000b600	movq	%r15,%rdx
000000000000b603	movl	%ebx,%esi
000000000000b605	movq	%r14,%rdi
000000000000b608	call	*0x00000708(%rax)
000000000000b60e	testl	%eax,%eax
000000000000b610	je	0x0000b616
000000000000b612	xorl	%ecx,%ecx
000000000000b614	jmp	0x0000b625
000000000000b616	incq	%rbx
000000000000b619	testb	$0x01,0xfffffeb2(%rbp)
000000000000b620	je	0x0000b5f0
000000000000b622	movl	%r13d,%ecx
000000000000b625	cmpb	$0x00,0x0000042c(%r12)
000000000000b62e	je	0x0000b6cf
000000000000b634	leaq	0xffffe9ff(%rip),%rdx
000000000000b63b	movq	%rdx,0xfffffea0(%rbp)
000000000000b642	movq	$0x00000000,0xfffffea8(%rbp)
000000000000b64d	movq	%rdx,0xfffffe90(%rbp)
000000000000b654	movq	$0x00000000,0xfffffe98(%rbp)
000000000000b65f	movq	%rdx,0xfffffe40(%rbp)
000000000000b666	testb	$0x01,%dl
000000000000b669	je	0x0000b679
000000000000b66b	leaq	0xffffe9c7(%rip),%rax
000000000000b672	addq	(%r12),%rax
000000000000b676	movq	(%rax),%rdx
000000000000b679	leaq	0xffffe7e0(%rip),%rsi
000000000000b680	movq	%rsi,0xfffffe80(%rbp)
000000000000b687	movq	$0x00000000,0xfffffe88(%rbp)
000000000000b692	movq	%rsi,0xfffffe70(%rbp)
000000000000b699	movq	$0x00000000,0xfffffe78(%rbp)
000000000000b6a4	movq	%rsi,0xfffffe30(%rbp)
000000000000b6ab	testb	$0x01,%dh
000000000000b6af	je	0x0000b6bf
000000000000b6b1	leaq	0xffffe7a7(%rip),%rax
000000000000b6b8	addq	(%r12),%rax
000000000000b6bc	movq	(%rax),%rsi
000000000000b6bf	movl	%ecx,%r8d
000000000000b6c2	movq	%r14,%rcx
000000000000b6c5	movq	%r12,%rdi
000000000000b6c8	callq	0x0000b6cd
000000000000b6cd	jmp	0x0000b720
000000000000b6cf	leaq	0xffffe78a(%rip),%rsi
000000000000b6d6	movq	%rsi,0xfffffe60(%rbp)
000000000000b6dd	movq	$0x00000000,0xfffffe68(%rbp)
000000000000b6e8	movq	%rsi,0xfffffe50(%rbp)
000000000000b6ef	movq	$0x00000000,0xfffffe58(%rbp)
000000000000b6fa	movq	%rsi,0xfffffe20(%rbp)
000000000000b701	testb	$0x01,%dh
000000000000b705	je	0x0000b715
000000000000b707	leaq	0xffffe751(%rip),%rax
000000000000b70e	addq	(%r12),%rax
000000000000b712	movq	(%rax),%rsi
000000000000b715	movq	%r14,%rdx
000000000000b718	movq	%r12,%rdi
000000000000b71b	callq	0x0000b720
000000000000b720	movq	%rax,0x00000430(%r12)
000000000000b728	movq	0x00000430(%r12),%rdx
000000000000b730	testq	%rdx,%rdx
000000000000b733	je	0x0000b774
000000000000b735	movq	0x00000418(%r12),%rdi
000000000000b73d	testq	%rdi,%rdi
000000000000b740	je	0x0000b75a
000000000000b742	movq	(%rdi),%rax
000000000000b745	movq	%rdx,%rsi
000000000000b748	call	*0x00000140(%rax)
000000000000b74e	testl	%eax,%eax
000000000000b750	je	0x0000b7af
000000000000b752	movq	0x00000430(%r12),%rdx
000000000000b75a	testq	%rdx,%rdx
000000000000b75d	je	0x0000b774
000000000000b75f	movq	(%rdx),%rax
000000000000b762	movq	%rdx,%rdi
000000000000b765	call	*0x28(%rax)
000000000000b768	movq	$0x00000000,0x00000430(%r12)
000000000000b774	movq	0x00000418(%r12),%rdi
000000000000b77c	testq	%rdi,%rdi
000000000000b77f	je	0x0000b793
000000000000b781	movq	(%rdi),%rax
000000000000b784	call	*0x28(%rax)
000000000000b787	movq	$0x00000000,0x00000418(%r12)
000000000000b793	leaq	0x000067f6(%rip),%rdi
000000000000b79a	xorl	%eax,%eax
000000000000b79c	callq	0x0000b7a1
000000000000b7a1	leaq	0x000067e8(%rip),%rdi
000000000000b7a8	xorl	%eax,%eax
000000000000b7aa	callq	0x0000b7af
000000000000b7af	movq	0x00000430(%r12),%rdi
000000000000b7b7	movq	(%rdi),%rax
000000000000b7ba	call	*0x00000150(%rax)
000000000000b7c0	movq	0x00000418(%r12),%rdi
000000000000b7c8	movq	(%rdi),%rax
000000000000b7cb	call	*0x00000160(%rax)
000000000000b7d1	movq	%r12,%rdi
000000000000b7d4	callq	0x100007cbe
000000000000b7d9	movq	%r12,%rdi
000000000000b7dc	callq	0x10000180c
000000000000b7e1	movq	%r14,%rsi
000000000000b7e4	movq	%r12,%rdi
000000000000b7e7	callq	0x0000f920
000000000000b7ec	movb	$0x00,0x000006f1(%r12)
000000000000b7f5	movl	$0x00000000,0x000006f4(%r12)
000000000000b801	movl	$0x00000000,0x000006f8(%r12)
000000000000b80d	movq	%r12,%rdi
000000000000b810	callq	0x100004996
000000000000b815	movq	$0x00000000,0x00000710(%r12)
000000000000b821	movq	$0x00000000,0x00000718(%r12)
000000000000b82d	movl	$0x00000000,0x00000618(%r12)
000000000000b839	movl	$0x00000000,0x00000438(%r12)
000000000000b845	leaq	0x00000678(%r12),%rax
000000000000b84d	movq	%rax,0x00000698(%r12)
000000000000b855	movq	(%r12),%rax
000000000000b859	xorl	%esi,%esi
000000000000b85b	movq	%r12,%rdi
000000000000b85e	call	*0x000005b0(%rax)
000000000000b864	leaq	0x0000674a(%rip),%rdi
000000000000b86b	callq	0x0000b870
000000000000b870	movq	%rax,0x00000730(%r12)
000000000000b878	movl	$0x00000001,%eax
000000000000b87d	jmp	0x0000b88f
000000000000b87f	leaq	0x0000673a(%rip),%rdi
000000000000b886	xorl	%eax,%eax
000000000000b888	callq	0x0000b88d
000000000000b88d	xorl	%eax,%eax
000000000000b88f	movq	0x00009582(%rip),%rdx
000000000000b896	movq	0xc8(%rbp),%rcx
000000000000b89a	xorq	(%rdx),%rcx
000000000000b89d	je	0x0000b8a4
000000000000b89f	callq	0x0000b8a4
000000000000b8a4	addq	$0x000001f8,%rsp
000000000000b8ab	popq	%rbx
000000000000b8ac	popq	%r12
000000000000b8ae	popq	%r13
000000000000b8b0	popq	%r14
000000000000b8b2	popq	%r15
000000000000b8b4	leave
000000000000b8b5	ret
__ZN22AppleIntelHDGraphicsFB18SetFDITransTimingsEPK29IODetailedTimingInformationV2j:
000000000000b8b6	pushq	%rbp
000000000000b8b7	movq	%rsp,%rbp
000000000000b8ba	movl	%edx,%r9d
000000000000b8bd	movq	0x00000698(%rdi),%rcx
000000000000b8c4	movq	0x28(%rsi),%rax
000000000000b8c8	movl	%eax,(%rcx)
000000000000b8ca	movq	0x00000698(%rdi),%rax
000000000000b8d1	movl	$0x1017df80,0x04(%rax)
000000000000b8d8	movq	0x00000698(%rdi),%rax
000000000000b8df	movl	$0x00080000,0x08(%rax)
000000000000b8e6	movq	0x00000698(%rdi),%rax
000000000000b8ed	movl	$0x00800000,0x0c(%rax)
000000000000b8f4	movq	0x00000698(%rdi),%rax
000000000000b8fb	movl	$0x00000040,0x10(%rax)
000000000000b902	movq	0x00000698(%rdi),%r8
000000000000b909	movq	0x28(%rsi),%rcx
000000000000b90d	shlq	$0x05,%rcx
000000000000b911	movq	$0xfe843e9eb1289af3,%rax
000000000000b91b	mulq	%rcx
000000000000b91e	movq	%rdx,%rsi
000000000000b921	shrq	$0x1f,%rsi
000000000000b925	movl	%esi,%eax
000000000000b927	movl	%esi,%ecx
000000000000b929	cmpq	%rsi,%rcx
000000000000b92c	adcl	$0x00,%eax
000000000000b92f	movb	%al,0x14(%r8)
000000000000b933	movq	0x00000698(%rdi),%rax
000000000000b93a	movb	$0x02,0x15(%rax)
000000000000b93e	movq	0x00000698(%rdi),%rax
000000000000b945	movb	$0x00,0x16(%rax)
000000000000b949	movq	0x00000698(%rdi),%rax
000000000000b950	movb	$0x00,0x17(%rax)
000000000000b954	movq	0x00000698(%rdi),%rax
000000000000b95b	movb	%r9b,0x19(%rax)
000000000000b95f	movq	0x00000698(%rdi),%rcx
000000000000b966	cmpb	$0x08,0x14(%rcx)
000000000000b96a	ja	0x0000b9bc
000000000000b96c	movzbl	0x14(%rcx),%eax
000000000000b970	leaq	0x00000009(%rip),%rdx
000000000000b977	movslq	(%rdx,%rax,4),%rax
000000000000b97b	addq	%rdx,%rax
000000000000b97e	jmp	*%rax
000000000000b980	cmpb	$0x00,%al
000000000000b982	addb	%al,(%rax)
000000000000b984	andb	$0x00,%al
000000000000b986	addb	%al,(%rax)
000000000000b988	subb	(%rax),%al
000000000000b98a	addb	%al,(%rax)
000000000000b98c	xorb	%al,(%rax)
000000000000b98e	addb	%al,(%rax)
000000000000b990	cmpb	$0x00,%al
000000000000b992	addb	%al,(%rax)
000000000000b994	cmpb	$0x00,%al
000000000000b996	addb	%al,(%rax)
000000000000b998	cmpb	$0x00,%al
000000000000b99a	addb	%al,(%rax)
000000000000b99c	cmpb	$0x00,%al
000000000000b99e	addb	%al,(%rax)
000000000000b9a0	addb	%al,%ss:(%rax)
000000000000b9a3	addb	%al,%dh
000000000000b9a5	sbbb	%al,(%r8)
000000000000b9a8	jmp	0x0000b9c0
000000000000b9aa	movb	$0x01,0x18(%rcx)
000000000000b9ae	jmp	0x0000b9c0
000000000000b9b0	movb	$0x02,0x18(%rcx)
000000000000b9b4	jmp	0x0000b9c0
000000000000b9b6	movb	$0x04,0x18(%rcx)
000000000000b9ba	jmp	0x0000b9c0
000000000000b9bc	movb	$0x03,0x18(%rcx)
000000000000b9c0	leave
000000000000b9c1	ret
__ZN22AppleIntelHDGraphicsFB14LightUpDisplayEiPK29IODetailedTimingInformationV2PNS_11ClockParamsEPNS_10CRTCParamsE:
000000000000b9c2	pushq	%rbp
000000000000b9c3	movq	%rsp,%rbp
000000000000b9c6	pushq	%r15
000000000000b9c8	pushq	%r14
000000000000b9ca	pushq	%r13
000000000000b9cc	pushq	%r12
000000000000b9ce	pushq	%rbx
000000000000b9cf	subq	$0x18,%rsp
000000000000b9d3	movq	%rdi,%rbx
000000000000b9d6	movl	%esi,%r15d
000000000000b9d9	movq	%rdx,0xc8(%rbp)
000000000000b9dd	movq	%r8,%r12
000000000000b9e0	movl	0x00000194(%rdi),%eax
000000000000b9e6	xorl	%edx,%edx
000000000000b9e8	cmpl	%eax,%esi
000000000000b9ea	jae	0x0000b9f8
000000000000b9ec	subl	%esi,%eax
000000000000b9ee	decl	%eax
000000000000b9f0	movq	0x00000198(%rdi,%rax,8),%rdx
000000000000b9f8	movl	0x00000210(%rdx),%r14d
000000000000b9ff	movq	0x00000098(%rbx),%rax
000000000000ba06	movl	$0x00000000,0x000f0018(%rax)
000000000000ba10	cmpl	$0x03,%r14d
000000000000ba14	jne	0x0000ba59
000000000000ba16	movl	0x000003b8(%rbx),%edx
000000000000ba1c	andl	$0xfe,%edx
000000000000ba1f	movl	%edx,0x000003b8(%rbx)
000000000000ba25	movq	0x00000098(%rbx),%rax
000000000000ba2c	movl	%edx,0x000c7204(%rax)
000000000000ba32	xorl	%r13d,%r13d
000000000000ba35	movq	0x00000098(%rbx),%rdx
000000000000ba3c	movl	0x000c7200(%rdx),%eax
000000000000ba42	testl	%eax,%eax
000000000000ba44	je	0x0000ba60
000000000000ba46	movl	$0x0000000a,%edi
000000000000ba4b	callq	0x0000ba50
000000000000ba50	incl	%r13d
000000000000ba53	cmpl	$0x14,%r13d
000000000000ba57	jne	0x0000ba35
000000000000ba59	movq	0x00000098(%rbx),%rdx
000000000000ba60	movl	0x000000a0(%r12),%eax
000000000000ba68	movl	%eax,0x000c6200(%rdx)
000000000000ba6e	movl	$0x00000006,%edi
000000000000ba73	callq	0x0000ba78
000000000000ba78	movq	%r12,%rsi
000000000000ba7b	movq	%rbx,%rdi
000000000000ba7e	callq	0x10000250c
000000000000ba83	movl	0x30(%r12),%edx
000000000000ba88	movq	0x00000098(%rbx),%rax
000000000000ba8f	movl	%edx,0x00068070(%rax)
000000000000ba95	movl	0x38(%r12),%edx
000000000000ba9a	movq	0x00000098(%rbx),%rax
000000000000baa1	movl	%edx,0x00068080(%rax)
000000000000baa7	movl	0x34(%r12),%edx
000000000000baac	movq	0x00000098(%rbx),%rax
000000000000bab3	movl	%edx,0x00068074(%rax)
000000000000bab9	movl	(%r12),%edx
000000000000babd	movq	0x00000098(%rbx),%rax
000000000000bac4	movl	%edx,0x00060000(%rax)
000000000000baca	movl	0x04(%r12),%edx
000000000000bacf	movq	0x00000098(%rbx),%rax
000000000000bad6	movl	%edx,0x00060004(%rax)
000000000000badc	movl	0x08(%r12),%edx
000000000000bae1	movq	0x00000098(%rbx),%rax
000000000000bae8	movl	%edx,0x00060008(%rax)
000000000000baee	movl	0x0c(%r12),%edx
000000000000baf3	movq	0x00000098(%rbx),%rax
000000000000bafa	movl	%edx,0x0006000c(%rax)
000000000000bb00	movl	0x10(%r12),%edx
000000000000bb05	movq	0x00000098(%rbx),%rax
000000000000bb0c	movl	%edx,0x00060010(%rax)
000000000000bb12	movl	0x14(%r12),%edx
000000000000bb17	movq	0x00000098(%rbx),%rax
000000000000bb1e	movl	%edx,0x00060014(%rax)
000000000000bb24	movl	0x24(%r12),%edx
000000000000bb29	movq	0x00000098(%rbx),%rax
000000000000bb30	movl	%edx,0x0006001c(%rax)
000000000000bb36	movl	0x74(%r12),%edx
000000000000bb3b	movq	0x00000098(%rbx),%rax
000000000000bb42	movl	%edx,0x00060028(%rax)
000000000000bb48	movl	0x78(%r12),%edx
000000000000bb4d	movq	0x00000098(%rbx),%rax
000000000000bb54	movl	%edx,0x00060050(%rax)
000000000000bb5a	movl	0x7c(%r12),%edx
000000000000bb5f	movq	0x00000098(%rbx),%rax
000000000000bb66	movl	%edx,0x00060054(%rax)
000000000000bb6c	movl	0x00000080(%r12),%edx
000000000000bb74	movq	0x00000098(%rbx),%rax
000000000000bb7b	movl	%edx,0x00060058(%rax)
000000000000bb81	movl	0x1c(%r12),%edx
000000000000bb86	movq	0x00000098(%rbx),%rax
000000000000bb8d	movl	%edx,0x000c6040(%rax)
000000000000bb93	movl	0x1c(%r12),%edx
000000000000bb98	movq	0x00000098(%rbx),%rax
000000000000bb9f	movl	%edx,0x000c6044(%rax)
000000000000bba5	movl	0x18(%r12),%edx
000000000000bbaa	movq	0x00000098(%rbx),%rax
000000000000bbb1	movl	%edx,0x000c6014(%rax)
000000000000bbb7	cmpl	$0x03,%r14d
000000000000bbbb	jne	0x0000bdb9
000000000000bbc1	movl	$0x00000012,%edx
000000000000bbc6	movq	0xc8(%rbp),%rsi
000000000000bbca	movq	%rbx,%rdi
000000000000bbcd	callq	0x10000b8b6
000000000000bbd2	movl	$0x00000001,%esi
000000000000bbd7	movq	%rbx,%rdi
000000000000bbda	callq	0x100002368
000000000000bbdf	movl	0x28(%r12),%edx
000000000000bbe4	orl	$0x80000050,%edx
000000000000bbea	movl	%edx,0x28(%r12)
000000000000bbef	movq	0x00000098(%rbx),%rax
000000000000bbf6	movl	%edx,0x00070008(%rax)
000000000000bbfc	movl	0x3c(%r12),%edx
000000000000bc01	movq	0x00000098(%rbx),%rax
000000000000bc08	movl	%edx,0x00070180(%rax)
000000000000bc0e	movl	0x000003f0(%rbx),%eax
000000000000bc14	movl	%eax,%edx
000000000000bc16	orb	$0x20,%dh
000000000000bc19	movl	%edx,0x000003f0(%rbx)
000000000000bc1f	cmpl	%edx,%eax
000000000000bc21	je	0x0000bc30
000000000000bc23	movq	0x00000098(%rbx),%rax
000000000000bc2a	movl	%edx,0x00045000(%rax)
000000000000bc30	movl	0x40(%r12),%edx
000000000000bc35	movq	0x00000098(%rbx),%rax
000000000000bc3c	movl	%edx,0x00070184(%rax)
000000000000bc42	movl	0x48(%r12),%edx
000000000000bc47	movq	0x00000098(%rbx),%rax
000000000000bc4e	movl	%edx,0x00070188(%rax)
000000000000bc54	movl	0x44(%r12),%edx
000000000000bc59	movq	0x00000098(%rbx),%rax
000000000000bc60	movl	%edx,0x000701a4(%rax)
000000000000bc66	movl	0x4c(%r12),%edx
000000000000bc6b	movq	0x00000098(%rbx),%rax
000000000000bc72	movl	%edx,0x0007019c(%rax)
000000000000bc78	movl	0x00000390(%rbx),%edx
000000000000bc7e	movq	0x00000098(%rbx),%rax
000000000000bc85	movl	%edx,0x00041000(%rax)
000000000000bc8b	movq	%r12,%rdx
000000000000bc8e	movl	%r15d,%esi
000000000000bc91	movq	%rbx,%rdi
000000000000bc94	callq	0x10000621a
000000000000bc99	movl	0x18(%r12),%edx
000000000000bc9e	orl	$0x80000000,%edx
000000000000bca4	movl	%edx,0x18(%r12)
000000000000bca9	movq	0x00000098(%rbx),%rax
000000000000bcb0	movl	%edx,0x000c6014(%rax)
000000000000bcb6	movl	$0x0000000b,%edi
000000000000bcbb	callq	0x0000bcc0
000000000000bcc0	movl	(%r12),%edx
000000000000bcc4	movq	0x00000098(%rbx),%rax
000000000000bccb	movl	%edx,0x000e0000(%rax)
000000000000bcd1	movl	0x04(%r12),%edx
000000000000bcd6	movq	0x00000098(%rbx),%rax
000000000000bcdd	movl	%edx,0x000e0004(%rax)
000000000000bce3	movl	0x08(%r12),%edx
000000000000bce8	movq	0x00000098(%rbx),%rax
000000000000bcef	movl	%edx,0x000e0008(%rax)
000000000000bcf5	movl	0x0c(%r12),%edx
000000000000bcfa	movq	0x00000098(%rbx),%rax
000000000000bd01	movl	%edx,0x000e000c(%rax)
000000000000bd07	movl	0x10(%r12),%edx
000000000000bd0c	movq	0x00000098(%rbx),%rax
000000000000bd13	movl	%edx,0x000e0010(%rax)
000000000000bd19	movl	0x14(%r12),%edx
000000000000bd1e	movq	0x00000098(%rbx),%rax
000000000000bd25	movl	%edx,0x000e0014(%rax)
000000000000bd2b	movl	0x70(%r12),%edx
000000000000bd30	orl	$0x80000000,%edx
000000000000bd36	movl	%edx,0x70(%r12)
000000000000bd3b	cmpl	$0x03,%r14d
000000000000bd3f	jne	0x0000bd58
000000000000bd41	orl	$0x40,%edx
000000000000bd44	movl	%edx,0x70(%r12)
000000000000bd49	movq	0x00000098(%rbx),%rax
000000000000bd50	movl	%edx,0x000f0008(%rax)
000000000000bd56	jmp	0x0000bd88
000000000000bd58	movq	0x00000098(%rbx),%rax
000000000000bd5f	movl	%edx,0x000f0008(%rax)
000000000000bd65	cmpl	$0x01,%r14d
000000000000bd69	je	0x0000bd73
000000000000bd6b	cmpl	$0x03,%r14d
000000000000bd6f	jne	0x0000bde8
000000000000bd71	jmp	0x0000bd88
000000000000bd73	movl	0x00000388(%rbx),%edx
000000000000bd79	movq	0x00000098(%rbx),%rax
000000000000bd80	movl	%edx,0x000e1100(%rax)
000000000000bd86	jmp	0x0000bde8
000000000000bd88	movl	0x0000038c(%rbx),%edx
000000000000bd8e	movq	0x00000098(%rbx),%rax
000000000000bd95	movl	%edx,0x000e1180(%rax)
000000000000bd9b	movl	0x000003b8(%rbx),%edx
000000000000bda1	orl	$0x01,%edx
000000000000bda4	movl	%edx,0x000003b8(%rbx)
000000000000bdaa	movq	0x00000098(%rbx),%rax
000000000000bdb1	movl	%edx,0x000c7204(%rax)
000000000000bdb7	jmp	0x0000bde8
000000000000bdb9	movl	$0x00000018,%edx
000000000000bdbe	movq	0xc8(%rbp),%rsi
000000000000bdc2	movq	%rbx,%rdi
000000000000bdc5	callq	0x10000b8b6
000000000000bdca	movl	$0x00000001,%esi
000000000000bdcf	movq	%rbx,%rdi
000000000000bdd2	callq	0x100002368
000000000000bdd7	movl	0x28(%r12),%eax
000000000000bddc	orl	$0x80000000,%eax
000000000000bde1	movl	%eax,%edx
000000000000bde3	jmp	0x10000bbea
000000000000bde8	xorl	%eax,%eax
000000000000bdea	addq	$0x18,%rsp
000000000000bdee	popq	%rbx
000000000000bdef	popq	%r12
000000000000bdf1	popq	%r13
000000000000bdf3	popq	%r14
000000000000bdf5	popq	%r15
000000000000bdf7	leave
000000000000bdf8	ret
000000000000bdf9	nop
__ZN22AppleIntelHDGraphicsFB9hwSetCRTCEiPK29IODetailedTimingInformationV2i20IODisplayTimingRange:
000000000000bdfa	pushq	%rbp
000000000000bdfb	movq	%rsp,%rbp
000000000000bdfe	subq	$0x70,%rsp
000000000000be02	movq	%rbx,0xd8(%rbp)
000000000000be06	movq	%r12,0xe0(%rbp)
000000000000be0a	movq	%r13,0xe8(%rbp)
000000000000be0e	movq	%r14,0xf0(%rbp)
000000000000be12	movq	%r15,0xf8(%rbp)
000000000000be16	movq	%rdi,%rbx
000000000000be19	movl	%esi,%r13d
000000000000be1c	movq	%rdx,%r15
000000000000be1f	movslq	%esi,%r14
000000000000be22	movq	0x00008fa7(%rip),%rax
000000000000be29	movl	(%rax),%esi
000000000000be2b	testl	%esi,%esi
000000000000be2d	je	0x0000be69
000000000000be2f	movq	0x28(%rdx),%rcx
000000000000be33	shrq	$0x03,%rcx
000000000000be37	movq	$0x20c49ba5e353f7cf,%r8
000000000000be41	movq	%r8,%rax
000000000000be44	mulq	%rcx
000000000000be47	movq	%rdx,%rsi
000000000000be4a	shrq	$0x04,%rsi
000000000000be4e	movl	0x50(%r15),%ecx
000000000000be52	movl	0x40(%r15),%edx
000000000000be56	xorl	%r9d,%r9d
000000000000be59	movl	%esi,%r8d
000000000000be5c	movq	%r14,%rsi
000000000000be5f	movl	$0x06128415,%edi
000000000000be64	callq	0x0000be69
000000000000be69	movq	0x00000198(%rbx,%r14,8),%rdi
000000000000be71	xorl	%esi,%esi
000000000000be73	callq	0x100008310
000000000000be78	movl	0x00000194(%rbx),%eax
000000000000be7e	cmpl	%eax,%r13d
000000000000be81	jae	0x0000c0db
000000000000be87	subl	%r13d,%eax
000000000000be8a	decl	%eax
000000000000be8c	movq	0x00000198(%rbx,%rax,8),%rax
000000000000be94	movzbl	0x00000470(%rax),%edx
000000000000be9b	movl	0x00000210(%rax),%eax
000000000000bea1	movl	%eax,0x98(%rbp)
000000000000bea4	testb	%dl,%dl
000000000000bea6	je	0x0000bedb
000000000000bea8	movl	%r13d,%esi
000000000000beab	movq	%rbx,%rdi
000000000000beae	callq	0x100006e98
000000000000beb3	xorl	%esi,%esi
000000000000beb5	movq	%rbx,%rdi
000000000000beb8	callq	0x100006c02
000000000000bebd	movq	0x00000198(%rbx,%r14,8),%rdi
000000000000bec5	movl	$0x00000001,%esi
000000000000beca	callq	0x100008310
000000000000becf	movl	$0x00000000,0x9c(%rbp)
000000000000bed6	jmp	0x0000c0ea
000000000000bedb	movq	0x28(%r15),%rdx
000000000000bedf	testq	%rdx,%rdx
000000000000bee2	je	0x0000c0b1
000000000000bee8	leaq	0xa0(%rbp),%rcx
000000000000beec	movl	%r13d,%esi
000000000000beef	movq	%rbx,%rdi
000000000000bef2	callq	0x100003228
000000000000bef7	testb	%al,%al
000000000000bef9	jne	0x0000c0b1
000000000000beff	movq	0x00008eca(%rip),%rax
000000000000bf06	movl	(%rax),%ecx
000000000000bf08	testl	%ecx,%ecx
000000000000bf0a	je	0x0000bf28
000000000000bf0c	xorl	%r9d,%r9d
000000000000bf0f	xorl	%r8d,%r8d
000000000000bf12	xorl	%ecx,%ecx
000000000000bf14	movq	$0xe00002c2,%rdx
000000000000bf1b	movq	%r14,%rsi
000000000000bf1e	movl	$0x06128416,%edi
000000000000bf23	callq	0x0000bf28
000000000000bf28	movq	0x00000198(%rbx,%r14,8),%rdi
000000000000bf30	movl	$0x00000001,%esi
000000000000bf35	callq	0x100008310
000000000000bf3a	movl	$0xe00002c2,0x9c(%rbp)
000000000000bf41	jmp	0x0000c0ea
000000000000bf46	movl	$0x00002000,%edx
000000000000bf4b	imulq	$0x000000f0,%r14,%r12
000000000000bf52	movl	%edx,0x000001f0(%rbx,%r12)
000000000000bf5a	movl	%r13d,%esi
000000000000bf5d	movq	%rbx,%rdi
000000000000bf60	callq	0x100006e98
000000000000bf65	movl	%eax,0x9c(%rbp)
000000000000bf68	testl	%eax,%eax
000000000000bf6a	je	0x0000bf8d
000000000000bf6c	movq	0x00008e5d(%rip),%rdx
000000000000bf73	movl	(%rdx),%edx
000000000000bf75	testl	%edx,%edx
000000000000bf77	je	0x0000c09d
000000000000bf7d	movslq	%eax,%rdx
000000000000bf80	xorl	%r9d,%r9d
000000000000bf83	xorl	%r8d,%r8d
000000000000bf86	xorl	%ecx,%ecx
000000000000bf88	jmp	0x0000c090
000000000000bf8d	leaq	0x000001a8(%rbx,%r12),%r12
000000000000bf95	leaq	0xa0(%rbp),%rax
000000000000bf99	movq	%rax,0x90(%rbp)
000000000000bf9d	movl	0x98(%rbp),%r9d
000000000000bfa1	movq	%r12,%r8
000000000000bfa4	movq	%rax,%rcx
000000000000bfa7	movq	%r15,%rdx
000000000000bfaa	movl	%r13d,%esi
000000000000bfad	movq	%rbx,%rdi
000000000000bfb0	callq	0x10000a228
000000000000bfb5	testb	%al,%al
000000000000bfb7	je	0x0000bffb
000000000000bfb9	movl	%r13d,%esi
000000000000bfbc	movq	%rbx,%rdi
000000000000bfbf	callq	0x100006976
000000000000bfc4	movq	%r12,%r8
000000000000bfc7	movq	0x90(%rbp),%rcx
000000000000bfcb	movq	%r15,%rdx
000000000000bfce	movl	%r13d,%esi
000000000000bfd1	movq	%rbx,%rdi
000000000000bfd4	callq	0x10000b9c2
000000000000bfd9	movl	%eax,%r12d
000000000000bfdc	testl	%eax,%eax
000000000000bfde	je	0x0000bffb
000000000000bfe0	movq	0x00000198(%rbx,%r14,8),%rdi
000000000000bfe8	movl	$0x00000001,%esi
000000000000bfed	callq	0x100008310
000000000000bff2	movl	%r12d,0x9c(%rbp)
000000000000bff6	jmp	0x0000c0ea
000000000000bffb	testl	%r13d,%r13d
000000000000bffe	je	0x0000c033
000000000000c000	imulq	$0x000000f0,%r14,%rax
000000000000c007	leaq	0x00000200(%rbx,%rax),%rcx
000000000000c00f	movl	0x08(%rcx),%edx
000000000000c012	movq	0x00000098(%rbx),%rax
000000000000c019	addq	$0x0000300c,%eax
000000000000c01f	movl	%edx,(%rax)
000000000000c021	movl	0x0c(%rcx),%edx
000000000000c024	movq	0x00000098(%rbx),%rax
000000000000c02b	addq	$0x00003008,%eax
000000000000c031	jmp	0x0000c05b
000000000000c033	movl	0x00000208(%rbx),%edx
000000000000c039	movq	0x00000098(%rbx),%rax
000000000000c040	addq	$0x00003004,%eax
000000000000c046	movl	%edx,(%rax)
000000000000c048	movl	0x0000020c(%rbx),%edx
000000000000c04e	movq	0x00000098(%rbx),%rax
000000000000c055	addq	$0x00003000,%eax
000000000000c05b	movl	%edx,(%rax)
000000000000c05d	movl	$0x00000032,%edi
000000000000c062	callq	0x0000c067
000000000000c067	xorl	%esi,%esi
000000000000c069	movq	%rbx,%rdi
000000000000c06c	callq	0x100006c02
000000000000c071	movq	%rbx,%rdi
000000000000c074	callq	0x10000a5de
000000000000c079	movq	0x00008d50(%rip),%rdx
000000000000c080	movl	(%rdx),%eax
000000000000c082	testl	%eax,%eax
000000000000c084	je	0x0000c09d
000000000000c086	xorl	%r9d,%r9d
000000000000c089	xorl	%r8d,%r8d
000000000000c08c	xorl	%ecx,%ecx
000000000000c08e	xorl	%edx,%edx
000000000000c090	movq	%r14,%rsi
000000000000c093	movl	$0x06128416,%edi
000000000000c098	callq	0x0000c09d
000000000000c09d	movq	0x00000198(%rbx,%r14,8),%rdi
000000000000c0a5	movl	$0x00000001,%esi
000000000000c0aa	callq	0x100008310
000000000000c0af	jmp	0x0000c0ea
000000000000c0b1	imulq	$0x000000f0,%r14,%rax
000000000000c0b8	addq	%rbx,%rax
000000000000c0bb	movq	0xc0(%rbp),%rdx
000000000000c0bf	movq	%rdx,0x00000290(%rax)
000000000000c0c6	movl	0x000001f0(%rax),%eax
000000000000c0cc	movl	%eax,%edx
000000000000c0ce	testl	%eax,%eax
000000000000c0d0	jne	0x10000bf4b
000000000000c0d6	jmp	0x10000bf46
000000000000c0db	movzbl	0x00000470,%edx
000000000000c0e3	xorl	%eax,%eax
000000000000c0e5	jmp	0x10000be9b
000000000000c0ea	movl	0x9c(%rbp),%eax
000000000000c0ed	movq	0xd8(%rbp),%rbx
000000000000c0f1	movq	0xe0(%rbp),%r12
000000000000c0f5	movq	0xe8(%rbp),%r13
000000000000c0f9	movq	0xf0(%rbp),%r14
000000000000c0fd	movq	0xf8(%rbp),%r15
000000000000c101	leave
000000000000c102	ret
000000000000c103	nop
__ZN22AppleIntelHDGraphicsFB15hwSetPowerStateEjjjPK29IODetailedTimingInformationV2i20IODisplayTimingRange:
000000000000c104	pushq	%rbp
000000000000c105	movq	%rsp,%rbp
000000000000c108	pushq	%r15
000000000000c10a	pushq	%r14
000000000000c10c	pushq	%r13
000000000000c10e	pushq	%r12
000000000000c110	pushq	%rbx
000000000000c111	subq	$0x00000108,%rsp
000000000000c118	movq	%rdi,%r12
000000000000c11b	movl	%esi,%ebx
000000000000c11d	movl	%edx,%r15d
000000000000c120	movl	%ecx,%r13d
000000000000c123	movq	%r8,%r14
000000000000c126	movl	%r9d,0xcc(%rbp)
000000000000c12a	movq	0x00008c9f(%rip),%rax
000000000000c131	movl	(%rax),%r9d
000000000000c134	testl	%r9d,%r9d
000000000000c137	je	0x0000c14d
000000000000c139	movl	%edx,%ecx
000000000000c13b	movl	%esi,%edx
000000000000c13d	movl	%r13d,%esi
000000000000c140	xorl	%r9d,%r9d
000000000000c143	movl	$0x0612848d,%edi
000000000000c148	callq	0x0000c14d
000000000000c14d	testl	%ebx,%ebx
000000000000c14f	jne	0x0000c3e1
000000000000c155	movq	0x00000098(%r12),%rdx
000000000000c15d	movl	0x00002020(%rdx),%eax
000000000000c163	cmpl	0x000003c4(%r12),%eax
000000000000c16b	je	0x0000c1a9
000000000000c16d	movq	$0x00000000,0x00002170(%rdx)
000000000000c178	movl	0x000003c4(%r12),%eax
000000000000c180	movq	0x00000098(%r12),%rdx
000000000000c188	movl	%eax,0x00002020(%rdx)
000000000000c18e	movq	0x00000098(%r12),%rax
000000000000c196	movq	$0x00000000,0x00002170(%rax)
000000000000c1a1	movq	0x00000098(%r12),%rdx
000000000000c1a9	movl	0x000003f0(%r12),%eax
000000000000c1b1	movl	%eax,0x00045000(%rdx)
000000000000c1b7	movl	0x000003b8(%r12),%edx
000000000000c1bf	xorw	%dx,%dx
000000000000c1c2	movl	%edx,0x000003b8(%r12)
000000000000c1ca	movq	0x00000098(%r12),%rcx
000000000000c1d2	movl	0x000c7204(%rcx),%eax
000000000000c1d8	andl	$0x0000ffff,%eax
000000000000c1dd	orl	%edx,%eax
000000000000c1df	movl	%eax,0x000003b8(%r12)
000000000000c1e7	movl	%eax,0x000c7204(%rcx)
000000000000c1ed	movl	0x00000158(%r12),%esi
000000000000c1f5	movq	%r12,%rdi
000000000000c1f8	callq	0x1000046c2
000000000000c1fd	movq	0x000000d0(%r12),%rdi
000000000000c205	testq	%rdi,%rdi
000000000000c208	je	0x0000c25f
000000000000c20a	movl	0x0000013c(%r12),%esi
000000000000c212	xorl	%ecx,%ecx
000000000000c214	movl	%esi,%r8d
000000000000c217	testl	%esi,%esi
000000000000c219	jne	0x0000c240
000000000000c21b	jmp	0x0000c25f
000000000000c21d	movq	%rcx,%rax
000000000000c220	andq	$0xfc,%rax
000000000000c224	movl	(%rdi,%rax),%edx
000000000000c227	movq	%rcx,%rax
000000000000c22a	addq	0x000000c8(%r12),%rax
000000000000c232	movl	%edx,(%rax)
000000000000c234	addq	$0x04,%rcx
000000000000c238	movq	0x000000d0(%r12),%rdi
000000000000c240	cmpq	%r8,%rcx
000000000000c243	jb	0x0000c21d
000000000000c245	shrl	$0x02,%esi
000000000000c248	movl	%esi,%esi
000000000000c24a	shlq	$0x02,%rsi
000000000000c24e	callq	0x0000c253
000000000000c253	movq	$0x00000000,0x000000d0(%r12)
000000000000c25f	movl	%r13d,%edi
000000000000c262	imulq	$0x000000f0,%rdi,%rax
000000000000c269	addq	%r12,%rax
000000000000c26c	cmpq	$0x00,0x00000250(%rax)
000000000000c274	je	0x0000c2dc
000000000000c276	xorl	%ecx,%ecx
000000000000c278	movq	%rax,%rsi
000000000000c27b	leaq	0x00000000(,%rcx,4),%rax
000000000000c283	addq	0x00000250(%rsi),%rax
000000000000c28a	movl	(%rax),%edx
000000000000c28c	cmpl	$0x01,%r13d
000000000000c290	sbbl	%eax,%eax
000000000000c292	andl	$0xfffff800,%eax
000000000000c297	leal	0x0004a800(%rax,%rcx,4),%eax
000000000000c29e	movl	%eax,%eax
000000000000c2a0	addq	0x00000098(%r12),%rax
000000000000c2a8	movl	%edx,(%rax)
000000000000c2aa	incq	%rcx
000000000000c2ad	cmpq	$0x00000100,%rcx
000000000000c2b4	jne	0x0000c27b
000000000000c2b6	imulq	$0x000000f0,%rdi,%rbx
000000000000c2bd	addq	%r12,%rbx
000000000000c2c0	movq	0x00000250(%rbx),%rdi
000000000000c2c7	movl	$0x00000400,%esi
000000000000c2cc	callq	0x0000c2d1
000000000000c2d1	movq	$0x00000000,0x00000250(%rbx)
000000000000c2dc	movq	%r12,%rdi
000000000000c2df	callq	0x0000e890
000000000000c2e4	cmpb	$0x00,0x00000729(%r12)
000000000000c2ed	je	0x0000c2f7
000000000000c2ef	movq	%r12,%rdi
000000000000c2f2	callq	0x0000e8d4
000000000000c2f7	movl	0x000006b0(%r12),%r8d
000000000000c2ff	testl	%r8d,%r8d
000000000000c302	je	0x0000c30c
000000000000c304	movq	%r12,%rdi
000000000000c307	callq	0x0000f280
000000000000c30c	movq	%r12,%rdi
000000000000c30f	callq	0x100006952
000000000000c314	testq	%r14,%r14
000000000000c317	je	0x0000c33b
000000000000c319	movl	$0x000000f0,%edx
000000000000c31e	leaq	0x10(%rbp),%rsi
000000000000c322	movq	%rsp,%rdi
000000000000c325	callq	0x0000c32a
000000000000c32a	movl	0xcc(%rbp),%ecx
000000000000c32d	movq	%r14,%rdx
000000000000c330	movl	%r13d,%esi
000000000000c333	movq	%r12,%rdi
000000000000c336	callq	0x10000bdfa
000000000000c33b	movq	%r12,%rdi
000000000000c33e	callq	0x100006928
000000000000c343	movq	%r12,%rdi
000000000000c346	callq	0x100003054
000000000000c34b	movl	0x00000194(%r12),%eax
000000000000c353	xorl	%edi,%edi
000000000000c355	cmpl	%eax,%r13d
000000000000c358	jae	0x0000c367
000000000000c35a	subl	%r13d,%eax
000000000000c35d	decl	%eax
000000000000c35f	movq	0x00000198(%r12,%rax,8),%rdi
000000000000c367	movl	$0x00000001,%esi
000000000000c36c	callq	0x100008310
000000000000c371	movq	%r12,%rdi
000000000000c374	callq	0x100007cbe
000000000000c379	movq	%r12,%rdi
000000000000c37c	callq	0x10000180c
000000000000c381	movl	$0x00000000,0x00000618(%r12)
000000000000c38d	movl	0x00000194(%r12),%eax
000000000000c395	cmpl	$0x01,%eax
000000000000c398	jg	0x0000c3c6
000000000000c39a	movq	0x00000098(%r12),%rax
000000000000c3a2	movl	$0x00000000,0x0000300c(%rax)
000000000000c3ac	movq	0x00000098(%r12),%rax
000000000000c3b4	movl	$0x00000000,0x00003008(%rax)
000000000000c3be	movl	0x00000194(%r12),%eax
000000000000c3c6	xorl	%edx,%edx
000000000000c3c8	cmpl	%eax,%r13d
000000000000c3cb	jae	0x0000c3da
000000000000c3cd	subl	%r13d,%eax
000000000000c3d0	decl	%eax
000000000000c3d2	movq	0x00000198(%r12,%rax,8),%rdx
000000000000c3da	movb	$0x01,0x000004bc(%rdx)
000000000000c3e1	testq	%r14,%r14
000000000000c3e4	je	0x0000c48f
000000000000c3ea	movl	0x00000194(%r12),%edx
000000000000c3f2	xorl	%eax,%eax
000000000000c3f4	cmpl	%edx,%r13d
000000000000c3f7	jae	0x0000c408
000000000000c3f9	movl	%edx,%eax
000000000000c3fb	subl	%r13d,%eax
000000000000c3fe	decl	%eax
000000000000c400	movq	0x00000198(%r12,%rax,8),%rax
000000000000c408	movl	0x00000210(%rax),%eax
000000000000c40e	cmpl	$0x01,%eax
000000000000c411	je	0x0000c455
000000000000c413	cmpl	$0x03,%eax
000000000000c416	jne	0x0000c48f
000000000000c418	xorl	%eax,%eax
000000000000c41a	cmpl	%edx,%r13d
000000000000c41d	jae	0x0000c42d
000000000000c41f	subl	%r13d,%edx
000000000000c422	leal	0xff(%rdx),%eax
000000000000c425	movq	0x00000198(%r12,%rax,8),%rax
000000000000c42d	cmpb	$0x00,0x0000020d(%rax)
000000000000c434	je	0x0000c48f
000000000000c436	movl	%r13d,%eax
000000000000c439	imulq	$0x000000f0,%rax,%rax
000000000000c440	leaq	0x000001a8(%r12,%rax),%rsi
000000000000c448	movl	%r15d,%edx
000000000000c44b	movq	%r12,%rdi
000000000000c44e	callq	0x10000377e
000000000000c453	jmp	0x0000c48f
000000000000c455	cmpl	$0x02,%r15d
000000000000c459	jne	0x0000c476
000000000000c45b	movl	0x00000388(%r12),%edx
000000000000c463	movq	0x00000098(%r12),%rax
000000000000c46b	movl	%edx,0x000e1100(%rax)
000000000000c471	jmp	0x0000c58c
000000000000c476	movl	0x00000388(%r12),%edx
000000000000c47e	orb	$0x0c,%dh
000000000000c481	movq	0x00000098(%r12),%rax
000000000000c489	movl	%edx,0x000e1100(%rax)
000000000000c48f	testl	%r15d,%r15d
000000000000c492	jne	0x0000c58c
000000000000c498	movl	0x00000194(%r12),%eax
000000000000c4a0	xorl	%edi,%edi
000000000000c4a2	cmpl	%eax,%r13d
000000000000c4a5	jae	0x0000c4b4
000000000000c4a7	subl	%r13d,%eax
000000000000c4aa	decl	%eax
000000000000c4ac	movq	0x00000198(%r12,%rax,8),%rdi
000000000000c4b4	xorl	%esi,%esi
000000000000c4b6	callq	0x100008310
000000000000c4bb	movq	%r12,%rdi
000000000000c4be	callq	0x100002f9a
000000000000c4c3	movl	$0x00000400,%edi
000000000000c4c8	callq	0x0000c4cd
000000000000c4cd	movl	%r13d,%edi
000000000000c4d0	imulq	$0x000000f0,%rdi,%rdx
000000000000c4d7	addq	%r12,%rdx
000000000000c4da	movq	%rax,0x00000250(%rdx)
000000000000c4e1	testq	%rax,%rax
000000000000c4e4	je	0x0000c526
000000000000c4e6	xorl	%ecx,%ecx
000000000000c4e8	movq	%rdx,%rsi
000000000000c4eb	cmpl	$0x01,%r13d
000000000000c4ef	sbbl	%eax,%eax
000000000000c4f1	andl	$0xfffff800,%eax
000000000000c4f6	leal	0x0004a800(%rax,%rcx,4),%eax
000000000000c4fd	movl	%eax,%eax
000000000000c4ff	addq	0x00000098(%r12),%rax
000000000000c507	movl	(%rax),%edx
000000000000c509	leaq	0x00000000(,%rcx,4),%rax
000000000000c511	addq	0x00000250(%rsi),%rax
000000000000c518	movl	%edx,(%rax)
000000000000c51a	incq	%rcx
000000000000c51d	cmpq	$0x00000100,%rcx
000000000000c524	jne	0x0000c4eb
000000000000c526	movq	%r12,%rdi
000000000000c529	callq	0x0000f150
000000000000c52e	cmpq	$0x00,0x000000d0(%r12)
000000000000c537	jne	0x0000c58c
000000000000c539	movl	0x0000013c(%r12),%ebx
000000000000c541	movl	%ebx,%edi
000000000000c543	shrl	$0x02,%edi
000000000000c546	movl	%edi,%edi
000000000000c548	shlq	$0x02,%rdi
000000000000c54c	callq	0x0000c551
000000000000c551	movq	%rax,0x000000d0(%r12)
000000000000c559	xorl	%ecx,%ecx
000000000000c55b	movq	%rbx,%rsi
000000000000c55e	testq	%rax,%rax
000000000000c561	jne	0x0000c587
000000000000c563	jmp	0x0000c58c
000000000000c565	movq	%rcx,%rax
000000000000c568	andq	$0xfc,%rax
000000000000c56c	addq	0x000000d0(%r12),%rax
000000000000c574	movq	%rcx,%rdx
000000000000c577	addq	0x000000c8(%r12),%rdx
000000000000c57f	movl	(%rdx),%edx
000000000000c581	movl	%edx,(%rax)
000000000000c583	addq	$0x04,%rcx
000000000000c587	cmpq	%rsi,%rcx
000000000000c58a	jb	0x0000c565
000000000000c58c	movq	0x0000883d(%rip),%rax
000000000000c593	movl	(%rax),%edi
000000000000c595	testl	%edi,%edi
000000000000c597	je	0x0000c5af
000000000000c599	xorl	%r9d,%r9d
000000000000c59c	xorl	%r8d,%r8d
000000000000c59f	xorl	%ecx,%ecx
000000000000c5a1	xorl	%edx,%edx
000000000000c5a3	xorl	%esi,%esi
000000000000c5a5	movl	$0x0612848e,%edi
000000000000c5aa	callq	0x0000c5af
000000000000c5af	xorl	%eax,%eax
000000000000c5b1	addq	$0x00000108,%rsp
000000000000c5b8	popq	%rbx
000000000000c5b9	popq	%r12
000000000000c5bb	popq	%r13
000000000000c5bd	popq	%r14
000000000000c5bf	popq	%r15
000000000000c5c1	leave
000000000000c5c2	ret
000000000000c5c3	nop
__ZN21AppleIntelFramebuffer12timerHandlerEv:
000000000000c5c4	pushq	%rbp
000000000000c5c5	movq	%rsp,%rbp
000000000000c5c8	subq	$0x20,%rsp
000000000000c5cc	movq	%rbx,0xe8(%rbp)
000000000000c5d0	movq	%r12,0xf0(%rbp)
000000000000c5d4	movq	%r13,0xf8(%rbp)
000000000000c5d8	movq	0x000004c0(%rdi),%rax
000000000000c5df	movq	%rax,%rdx
000000000000c5e2	subq	0x000004c8(%rdi),%rdx
000000000000c5e9	movq	%rax,0x000004c8(%rdi)
000000000000c5f0	testq	%rdx,%rdx
000000000000c5f3	jne	0x0000c645
000000000000c5f5	cmpl	$0x01,0x000001d8(%rdi)
000000000000c5fc	sbbq	%rdx,%rdx
000000000000c5ff	andq	$0xfc,%rdx
000000000000c603	cmpl	$0x01,0x000001d8(%rdi)
000000000000c60a	sbbl	%ecx,%ecx
000000000000c60c	incl	%ecx
000000000000c60e	movq	0x000001d0(%rdi),%rax
000000000000c615	movq	0x00000098(%rax),%rsi
000000000000c61c	leaq	0x000c6018(%rsi,%rdx),%rax
000000000000c624	movl	(%rax),%eax
000000000000c626	movl	0x0004400c(%rsi),%r13d
000000000000c62d	testl	%eax,%eax
000000000000c62f	jns	0x0000c645
000000000000c631	cmpl	$0x01,%ecx
000000000000c634	sbbl	%eax,%eax
000000000000c636	andl	$0xffff8080,%eax
000000000000c63b	addl	$0x00008000,%eax
000000000000c640	testl	%r13d,%eax
000000000000c643	jne	0x0000c64e
000000000000c645	movb	$0x00,0x000004d0(%rdi)
000000000000c64c	jmp	0x0000c69e
000000000000c64e	cmpb	$0x00,0x000004d0(%rdi)
000000000000c655	jne	0x0000c660
000000000000c657	movb	$0x01,0x000004d0(%rdi)
000000000000c65e	jmp	0x0000c69e
000000000000c660	movl	0x00044000(%rsi),%r12d
000000000000c667	movl	0x00044004(%rsi),%ebx
000000000000c66d	movq	(%rdi),%rax
000000000000c670	xorl	%esi,%esi
000000000000c672	call	*0x00000388(%rax)
000000000000c678	movq	%rax,%rsi
000000000000c67b	movl	%r13d,%r8d
000000000000c67e	movl	%ebx,%ecx
000000000000c680	movl	%r12d,%edx
000000000000c683	leaq	0x00005966(%rip),%rdi
000000000000c68a	xorl	%eax,%eax
000000000000c68c	movq	0xe8(%rbp),%rbx
000000000000c690	movq	0xf0(%rbp),%r12
000000000000c694	movq	0xf8(%rbp),%r13
000000000000c698	leave
000000000000c699	jmp	0x0000c69e
000000000000c69e	movq	0xe8(%rbp),%rbx
000000000000c6a2	movq	0xf0(%rbp),%r12
000000000000c6a6	movq	0xf8(%rbp),%r13
000000000000c6aa	leave
000000000000c6ab	ret
__ZN21AppleIntelFramebuffer13timerCallbackEPv:
000000000000c6ac	pushq	%rbp
000000000000c6ad	movq	%rsp,%rbp
000000000000c6b0	pushq	%rbx
000000000000c6b1	subq	$0x08,%rsp
000000000000c6b5	leaq	0x000087e4(%rip),%rsi
000000000000c6bc	callq	0x0000c6c1
000000000000c6c1	movq	%rax,%rbx
000000000000c6c4	testq	%rax,%rax
000000000000c6c7	je	0x0000c6df
000000000000c6c9	movq	%rax,%rdi
000000000000c6cc	callq	0x10000c5c4
000000000000c6d1	movq	%rbx,%rdi
000000000000c6d4	addq	$0x08,%rsp
000000000000c6d8	popq	%rbx
000000000000c6d9	leave
000000000000c6da	jmp	0x1000082a6
000000000000c6df	addq	$0x08,%rsp
000000000000c6e3	popq	%rbx
000000000000c6e4	leave
000000000000c6e5	ret
__ZN21AppleIntelFramebuffer12setAttributeEjm:
000000000000c6e6	pushq	%rbp
000000000000c6e7	movq	%rsp,%rbp
000000000000c6ea	subq	$0x30,%rsp
000000000000c6ee	movq	%rbx,0xd8(%rbp)
000000000000c6f2	movq	%r12,0xe0(%rbp)
000000000000c6f6	movq	%r13,0xe8(%rbp)
000000000000c6fa	movq	%r14,0xf0(%rbp)
000000000000c6fe	movq	%r15,0xf8(%rbp)
000000000000c702	movq	%rdi,%r13
000000000000c705	movl	%esi,%r12d
000000000000c708	movq	%rdx,%rbx
000000000000c70b	movq	0x000086be(%rip),%r15
000000000000c712	movl	(%r15),%r14d
000000000000c715	testl	%r14d,%r14d
000000000000c718	je	0x0000c735
000000000000c71a	movl	%esi,%edx
000000000000c71c	movl	0x000001d8(%rdi),%esi
000000000000c722	xorl	%r9d,%r9d
000000000000c725	xorl	%r8d,%r8d
000000000000c728	movq	%rbx,%rcx
000000000000c72b	movl	$0x0612841d,%edi
000000000000c730	callq	0x0000c735
000000000000c735	cmpl	$0x20707570,%r12d
000000000000c73c	je	0x0000c8c8
000000000000c742	ja	0x0000c791
000000000000c744	cmpl	$0x2070646e,%r12d
000000000000c74b	je	0x0000c8d7
000000000000c751	ja	0x0000c772
000000000000c753	cmpl	$0x00726672,%r12d
000000000000c75a	je	0x0000c986
000000000000c760	cmpl	$0x20646773,%r12d
000000000000c767	jne	0x0000c96b
000000000000c76d	jmp	0x0000c7f3
000000000000c772	cmpl	$0x20706474,%r12d
000000000000c779	je	0x0000c8b9
000000000000c77f	cmpl	$0x2070656e,%r12d
000000000000c786	jne	0x0000c96b
000000000000c78c	jmp	0x0000c8eb
000000000000c791	cmpl	$0x6d637673,%r12d
000000000000c798	je	0x0000c986
000000000000c79e	ja	0x0000c7bf
000000000000c7a0	cmpl	$0x20707574,%r12d
000000000000c7a7	je	0x0000c8aa
000000000000c7ad	cmpl	$0x626b7376,%r12d
000000000000c7b4	jne	0x0000c96b
000000000000c7ba	jmp	0x0000c900
000000000000c7bf	cmpl	$0x706f7772,%r12d
000000000000c7c6	je	0x0000c7e4
000000000000c7c8	cmpl	$0x73707772,%r12d
000000000000c7cf	je	0x0000c878
000000000000c7d5	cmpl	$0x6d697272,%r12d
000000000000c7dc	jne	0x0000c96b
000000000000c7e2	jmp	0x0000c806
000000000000c7e4	movl	%ebx,%esi
000000000000c7e6	movq	%r13,%rdi
000000000000c7e9	callq	0x0000f3b8
000000000000c7ee	jmp	0x0000c8f9
000000000000c7f3	movq	0x000001d0(%r13),%rdi
000000000000c7fa	movl	%ebx,%esi
000000000000c7fc	callq	0x0000f6e8
000000000000c801	jmp	0x0000c8f9
000000000000c806	movl	0x000001d8(%r13),%eax
000000000000c80d	movq	0x000001d0(%r13),%r14
000000000000c814	movl	(%rbx),%ebx
000000000000c816	testl	%ebx,%ebx
000000000000c818	setne	%bl
000000000000c81b	movl	(%r15),%r11d
000000000000c81e	testl	%r11d,%r11d
000000000000c821	je	0x0000c840
000000000000c823	movzbl	0x00000164(%rsi),%ecx
000000000000c82b	movzbl	%bl,%edx
000000000000c82e	movl	%eax,%esi
000000000000c830	xorl	%r9d,%r9d
000000000000c833	xorl	%r8d,%r8d
000000000000c836	movl	$0x061284dc,%edi
000000000000c83b	callq	0x0000c840
000000000000c840	cmpb	%bl,0x00000164(%r14)
000000000000c847	je	0x0000c85b
000000000000c849	movb	%bl,0x00000164(%r14)
000000000000c850	movl	$0x00000000,0x00000168(%r14)
000000000000c85b	movq	0x00(%r13),%rax
000000000000c85f	movl	0x000001e0(%r13),%edx
000000000000c866	movl	0x000001dc(%r13),%esi
000000000000c86d	movq	%r13,%rdi
000000000000c870	call	*0x000009f8(%rax)
000000000000c876	jmp	0x0000c8e4
000000000000c878	movl	$0xe0000250,%eax
000000000000c87d	cmpq	%rax,%rbx
000000000000c880	je	0x0000c88d
000000000000c882	addq	$0x000000c0,%eax
000000000000c888	cmpq	%rax,%rbx
000000000000c88b	jne	0x0000c897
000000000000c88d	xorl	%esi,%esi
000000000000c88f	movq	%r13,%rdi
000000000000c892	callq	0x100008310
000000000000c897	movq	0x000001d0(%r13),%rdi
000000000000c89e	movl	$0x00000001,%esi
000000000000c8a3	callq	0x100006c02
000000000000c8a8	jmp	0x0000c8e4
000000000000c8aa	movq	0x000001d0(%r13),%rax
000000000000c8b1	movl	%ebx,0x000006a0(%rax)
000000000000c8b7	jmp	0x0000c8e4
000000000000c8b9	movq	0x000001d0(%r13),%rax
000000000000c8c0	movl	%ebx,0x000006a4(%rax)
000000000000c8c6	jmp	0x0000c8e4
000000000000c8c8	movq	0x000001d0(%r13),%rax
000000000000c8cf	movl	%ebx,0x000006a8(%rax)
000000000000c8d5	jmp	0x0000c8e4
000000000000c8d7	movq	0x000001d0(%r13),%rax
000000000000c8de	movl	%ebx,0x000006ac(%rax)
000000000000c8e4	xorl	%ebx,%ebx
000000000000c8e6	jmp	0x0000c98b
000000000000c8eb	movq	0x000001d0(%r13),%rdi
000000000000c8f2	movl	%ebx,%esi
000000000000c8f4	callq	0x0000f8be
000000000000c8f9	movl	%eax,%ebx
000000000000c8fb	jmp	0x0000c98b
000000000000c900	movq	0x000001d0(%r13),%rdi
000000000000c907	cmpb	$0x00,0x00000180(%rdi)
000000000000c90e	je	0x0000c986
000000000000c910	testb	$0x03,0x00000210(%r13)
000000000000c918	je	0x0000c986
000000000000c91a	movl	0x00000604(%rdi),%eax
000000000000c920	cvtsi2ss	%rax,%xmm0
000000000000c925	movl	0x00000608(%rdi),%eax
000000000000c92b	cvtsi2ss	%rax,%xmm1
000000000000c930	divss	%xmm1,%xmm0
000000000000c934	cvtss2sd	%xmm0,%xmm0
000000000000c938	mulsd	0x000066a8(%rip),%xmm0
000000000000c940	addsd	0x000066a8(%rip),%xmm0
000000000000c948	cvttsd2si	%xmm0,%rax
000000000000c94d	movl	%eax,0x000003dc(%r13)
000000000000c954	leaq	0x00000388(%r13),%rdx
000000000000c95b	movl	0x000001d8(%r13),%esi
000000000000c962	xorl	%ecx,%ecx
000000000000c964	callq	0x100005ee4
000000000000c969	jmp	0x0000c8f9
000000000000c96b	movq	%rbx,%rdx
000000000000c96e	movl	%r12d,%esi
000000000000c971	movq	%r13,%rdi
000000000000c974	movq	0x00008495(%rip),%rax
000000000000c97b	call	*0x00000a38(%rax)
000000000000c981	jmp	0x10000c8f9
000000000000c986	movl	$0xe00002c7,%ebx
000000000000c98b	movl	(%r15),%r10d
000000000000c98e	testl	%r10d,%r10d
000000000000c991	je	0x0000c9b0
000000000000c993	movslq	%ebx,%rcx
000000000000c996	movl	%r12d,%edx
000000000000c999	movl	0x000001d8(%r13),%esi
000000000000c9a0	xorl	%r9d,%r9d
000000000000c9a3	xorl	%r8d,%r8d
000000000000c9a6	movl	$0x0612841e,%edi
000000000000c9ab	callq	0x0000c9b0
000000000000c9b0	movl	%ebx,%eax
000000000000c9b2	movq	0xd8(%rbp),%rbx
000000000000c9b6	movq	0xe0(%rbp),%r12
000000000000c9ba	movq	0xe8(%rbp),%r13
000000000000c9be	movq	0xf0(%rbp),%r14
000000000000c9c2	movq	0xf8(%rbp),%r15
000000000000c9c6	leave
000000000000c9c7	ret
__ZN21AppleIntelFramebuffer17getScanRegionInfoEPjP18IOPixelInformationPiS3_:
000000000000c9c8	pushq	%rbp
000000000000c9c9	movq	%rsp,%rbp
000000000000c9cc	subq	$0x50,%rsp
000000000000c9d0	movq	%rbx,0xd8(%rbp)
000000000000c9d4	movq	%r12,0xe0(%rbp)
000000000000c9d8	movq	%r13,0xe8(%rbp)
000000000000c9dc	movq	%r14,0xf0(%rbp)
000000000000c9e0	movq	%r15,0xf8(%rbp)
000000000000c9e4	movq	%rdi,%rbx
000000000000c9e7	movq	%rsi,0xb8(%rbp)
000000000000c9eb	movq	%rdx,%r12
000000000000c9ee	movq	%rcx,%r13
000000000000c9f1	movq	%r8,%r14
000000000000c9f4	leaq	0xc0(%rbp),%rcx
000000000000c9f8	leaq	0xc8(%rbp),%rdx
000000000000c9fc	movl	0x000001dc(%rdi),%esi
000000000000ca02	callq	0x100004e1a
000000000000ca07	movl	%eax,%r15d
000000000000ca0a	testl	%eax,%eax
000000000000ca0c	jne	0x0000cb22
000000000000ca12	movq	0xc0(%rbp),%rdx
000000000000ca16	movl	0x14(%rdx),%eax
000000000000ca19	movl	%eax,0x00000098(%r12)
000000000000ca21	movl	0x0c(%rdx),%eax
000000000000ca24	testl	%eax,%eax
000000000000ca26	jne	0x0000ca40
000000000000ca28	movl	0x10(%rdx),%ecx
000000000000ca2b	testl	%ecx,%ecx
000000000000ca2d	jne	0x0000ca40
000000000000ca2f	movl	$0x00000000,0x00(%r13)
000000000000ca37	movl	$0x00000000,(%r14)
000000000000ca3e	jmp	0x0000ca4a
000000000000ca40	movl	%eax,0x00(%r13)
000000000000ca44	movl	0x10(%rdx),%eax
000000000000ca47	movl	%eax,(%r14)
000000000000ca4a	movq	0x000001d0(%rbx),%rdx
000000000000ca51	movl	0x00(%r13),%eax
000000000000ca55	movl	%eax,0x0000015c(%rdx)
000000000000ca5b	movq	0x000001d0(%rbx),%rdx
000000000000ca62	movl	(%r14),%eax
000000000000ca65	movl	%eax,0x00000160(%rdx)
000000000000ca6b	movq	0xc0(%rbp),%rcx
000000000000ca6f	movl	0x00(%r13),%edx
000000000000ca73	addl	%edx,%edx
000000000000ca75	movl	0x40(%rcx),%eax
000000000000ca78	subl	%edx,%eax
000000000000ca7a	movl	%eax,0x0000009c(%r12)
000000000000ca82	movl	(%r14),%edx
000000000000ca85	addl	%edx,%edx
000000000000ca87	movl	0x50(%rcx),%eax
000000000000ca8a	subl	%edx,%eax
000000000000ca8c	movl	%eax,0x000000a0(%r12)
000000000000ca94	orl	$0x80000000,0x00000098(%r12)
000000000000caa0	movslq	0x000001d8(%rbx),%rax
000000000000caa7	imulq	$0x000000f0,%rax,%rax
000000000000caae	addq	0x000001d0(%rbx),%rax
000000000000cab5	movl	0x000001f0(%rax),%edx
000000000000cabb	movl	%edx,%ecx
000000000000cabd	movl	$0x00002000,%eax
000000000000cac2	testl	%edx,%edx
000000000000cac4	cmovneq	%rcx,%rax
000000000000cac8	movl	%eax,(%r12)
000000000000cacc	movl	0x000001d8(%rbx),%edx
000000000000cad2	movq	0x000001d0(%rbx),%r12
000000000000cad9	movslq	%edx,%rbx
000000000000cadc	movq	0x000082ed(%rip),%rax
000000000000cae3	movl	(%rax),%eax
000000000000cae5	testl	%eax,%eax
000000000000cae7	je	0x0000cb0d
000000000000cae9	imulq	$0x000000f0,%rbx,%rax
000000000000caf0	movl	0x000001f4(%r12,%rax),%edx
000000000000caf8	xorl	%r9d,%r9d
000000000000cafb	xorl	%r8d,%r8d
000000000000cafe	xorl	%ecx,%ecx
000000000000cb00	movq	%rbx,%rsi
000000000000cb03	movl	$0x061284d8,%edi
000000000000cb08	callq	0x0000cb0d
000000000000cb0d	imulq	$0x000000f0,%rbx,%rax
000000000000cb14	movl	0x000001f4(%r12,%rax),%eax
000000000000cb1c	movq	0xb8(%rbp),%rdx
000000000000cb20	movl	%eax,(%rdx)
000000000000cb22	movl	%r15d,%eax
000000000000cb25	movq	0xd8(%rbp),%rbx
000000000000cb29	movq	0xe0(%rbp),%r12
000000000000cb2d	movq	0xe8(%rbp),%r13
000000000000cb31	movq	0xf0(%rbp),%r14
000000000000cb35	movq	0xf8(%rbp),%r15
000000000000cb39	leave
000000000000cb3a	ret
000000000000cb3b	nop
__ZN21AppleIntelFramebuffer20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_:
000000000000cb3c	pushq	%rbp
000000000000cb3d	movq	%rsp,%rbp
000000000000cb40	subq	$0x50,%rsp
000000000000cb44	movq	%rbx,0xd8(%rbp)
000000000000cb48	movq	%r12,0xe0(%rbp)
000000000000cb4c	movq	%r13,0xe8(%rbp)
000000000000cb50	movq	%r14,0xf0(%rbp)
000000000000cb54	movq	%r15,0xf8(%rbp)
000000000000cb58	movq	%rdi,%rbx
000000000000cb5b	movq	%rsi,%r12
000000000000cb5e	movq	%rcx,%r13
000000000000cb61	movq	%r8,0xc8(%rbp)
000000000000cb65	movq	%r9,%r15
000000000000cb68	movl	%edx,%r14d
000000000000cb6b	movq	0x0000825e(%rip),%rax
000000000000cb72	movl	(%rax),%r8d
000000000000cb75	testl	%r8d,%r8d
000000000000cb78	je	0x0000cb95
000000000000cb7a	movl	0x000001d8(%rdi),%esi
000000000000cb80	xorl	%r9d,%r9d
000000000000cb83	xorl	%r8d,%r8d
000000000000cb86	xorl	%ecx,%ecx
000000000000cb88	movq	%r12,%rdx
000000000000cb8b	movl	$0x061284e1,%edi
000000000000cb90	callq	0x0000cb95
000000000000cb95	testq	%r12,%r12
000000000000cb98	jne	0x0000cbc6
000000000000cb9a	movl	$0xe00002c2,%ebx
000000000000cb9f	movq	0x0000822a(%rip),%rax
000000000000cba6	movl	(%rax),%edi
000000000000cba8	testl	%edi,%edi
000000000000cbaa	je	0x0000cc58
000000000000cbb0	xorl	%r9d,%r9d
000000000000cbb3	xorl	%r8d,%r8d
000000000000cbb6	xorl	%ecx,%ecx
000000000000cbb8	xorl	%edx,%edx
000000000000cbba	movq	$0xe00002c2,%rsi
000000000000cbc1	jmp	0x0000cc4e
000000000000cbc6	cmpq	%r12,0x000004e8(%rbx)
000000000000cbcd	jne	0x0000cbe8
000000000000cbcf	movq	%r13,0x000004a0(%rbx)
000000000000cbd6	movq	0x000001d0(%rbx),%rax
000000000000cbdd	movq	%r13,0x000006b8(%rax)
000000000000cbe4	xorl	%ebx,%ebx
000000000000cbe6	jmp	0x0000cc34
000000000000cbe8	cmpq	%r12,0x000004f0(%rbx)
000000000000cbef	jne	0x0000cc09
000000000000cbf1	movq	0x10(%rbp),%r8
000000000000cbf5	movq	%r15,%rcx
000000000000cbf8	movq	0xc8(%rbp),%rdx
000000000000cbfc	movq	%r13,%rsi
000000000000cbff	movq	%rbx,%rdi
000000000000cc02	callq	0x10000c9c8
000000000000cc07	jmp	0x0000cc32
000000000000cc09	movzbl	%dh,%edx
000000000000cc0d	movq	0x10(%rbp),%rax
000000000000cc11	movq	%rax,(%rsp)
000000000000cc15	movq	%r15,%r9
000000000000cc18	movq	0xc8(%rbp),%r8
000000000000cc1c	movq	%r13,%rcx
000000000000cc1f	movq	%r12,%rsi
000000000000cc22	movq	%rbx,%rdi
000000000000cc25	movq	0x000081e4(%rip),%rax
000000000000cc2c	call	*0x000006c8(%rax)
000000000000cc32	movl	%eax,%ebx
000000000000cc34	movq	0x00008195(%rip),%rax
000000000000cc3b	movl	(%rax),%esi
000000000000cc3d	testl	%esi,%esi
000000000000cc3f	je	0x0000cc58
000000000000cc41	movslq	%ebx,%rsi
000000000000cc44	xorl	%r9d,%r9d
000000000000cc47	xorl	%r8d,%r8d
000000000000cc4a	xorl	%ecx,%ecx
000000000000cc4c	xorl	%edx,%edx
000000000000cc4e	movl	$0x061284e2,%edi
000000000000cc53	callq	0x0000cc58
000000000000cc58	movl	%ebx,%eax
000000000000cc5a	movq	0xd8(%rbp),%rbx
000000000000cc5e	movq	0xe0(%rbp),%r12
000000000000cc62	movq	0xe8(%rbp),%r13
000000000000cc66	movq	0xf0(%rbp),%r14
000000000000cc6a	movq	0xf8(%rbp),%r15
000000000000cc6e	leave
000000000000cc6f	ret
__ZN21AppleIntelFramebuffer14setDisplayModeEii:
000000000000cc70	pushq	%rbp
000000000000cc71	movq	%rsp,%rbp
000000000000cc74	subq	$0x00000150,%rsp
000000000000cc7b	movq	%rbx,0xd8(%rbp)
000000000000cc7f	movq	%r12,0xe0(%rbp)
000000000000cc83	movq	%r13,0xe8(%rbp)
000000000000cc87	movq	%r14,0xf0(%rbp)
000000000000cc8b	movq	%r15,0xf8(%rbp)
000000000000cc8f	movq	%rdi,%r14
000000000000cc92	movl	%esi,%r15d
000000000000cc95	movl	%edx,%r12d
000000000000cc98	movq	0x00008131(%rip),%rax
000000000000cc9f	movl	(%rax),%ecx
000000000000cca1	testl	%ecx,%ecx
000000000000cca3	je	0x0000ccc6
000000000000cca5	movslq	%edx,%rcx
000000000000cca8	movslq	%esi,%rdx
000000000000ccab	movl	0x000001d8(%rdi),%esi
000000000000ccb1	xorl	%r9d,%r9d
000000000000ccb4	movzbl	0x0000020d(%rdi),%r8d
000000000000ccbc	movl	$0x06128445,%edi
000000000000ccc1	callq	0x0000ccc6
000000000000ccc6	leaq	0xc0(%rbp),%rcx
000000000000ccca	leaq	0xc8(%rbp),%rbx
000000000000ccce	movq	%rbx,%rdx
000000000000ccd1	movl	%r15d,%esi
000000000000ccd4	movq	%r14,%rdi
000000000000ccd7	callq	0x100004e1a
000000000000ccdc	movl	%eax,0xa4(%rbp)
000000000000ccdf	testl	%eax,%eax
000000000000cce1	je	0x0000cd0c
000000000000cce3	movq	0x000080e6(%rip),%rdx
000000000000ccea	movl	(%rdx),%edx
000000000000ccec	testl	%edx,%edx
000000000000ccee	je	0x0000d4bd
000000000000ccf4	movslq	%r12d,%rcx
000000000000ccf7	movslq	%r15d,%rdx
000000000000ccfa	movl	0x000001d8(%r14),%esi
000000000000cd01	xorl	%r9d,%r9d
000000000000cd04	movslq	%eax,%r8
000000000000cd07	jmp	0x0000d497
000000000000cd0c	cmpb	$0x00,0x0000020d(%r14)
000000000000cd14	jne	0x0000ce06
000000000000cd1a	movl	%r15d,0x000001dc(%r14)
000000000000cd21	movl	%r12d,0x000001e0(%r14)
000000000000cd28	movl	$0x00000002,0x000001e4(%r14)
000000000000cd33	movl	0x000001d8(%r14),%edx
000000000000cd3a	movq	0x000001d0(%r14),%rcx
000000000000cd41	movq	%rcx,%r13
000000000000cd44	movslq	%edx,%rbx
000000000000cd47	movq	0x00008082(%rip),%rax
000000000000cd4e	movl	(%rax),%eax
000000000000cd50	testl	%eax,%eax
000000000000cd52	je	0x0000cd85
000000000000cd54	imulq	$0x000000f0,%rbx,%rax
000000000000cd5b	movl	0x000001f4(%rax,%rcx),%edx
000000000000cd62	xorl	%r9d,%r9d
000000000000cd65	xorl	%r8d,%r8d
000000000000cd68	xorl	%ecx,%ecx
000000000000cd6a	movq	%rbx,%rsi
000000000000cd6d	movl	$0x061284d8,%edi
000000000000cd72	callq	0x0000cd77
000000000000cd77	movl	0x000001d8(%r14),%edx
000000000000cd7e	movq	0x000001d0(%r14),%rcx
000000000000cd85	imulq	$0x000000f0,%rbx,%rax
000000000000cd8c	movl	0x000001f4(%r13,%rax),%r13d
000000000000cd94	movq	%r13,0x000001e8(%r14)
000000000000cd9b	movslq	%edx,%rax
000000000000cd9e	imulq	$0x000000f0,%rax,%rax
000000000000cda5	movl	0x000001f0(%rax,%rcx),%eax
000000000000cdac	movl	%eax,%edx
000000000000cdae	movl	$0x00002000,%ecx
000000000000cdb3	testl	%eax,%eax
000000000000cdb5	cmovneq	%rdx,%rcx
000000000000cdb9	movq	%rcx,0x000001f0(%r14)
000000000000cdc0	movq	0xc0(%rbp),%rdx
000000000000cdc4	movl	0x1c(%rdx),%eax
000000000000cdc7	testl	%eax,%eax
000000000000cdc9	je	0x0000cdcf
000000000000cdcb	movl	%eax,%eax
000000000000cdcd	jmp	0x0000cdd2
000000000000cdcf	movl	0x50(%rdx),%eax
000000000000cdd2	imulq	%rax,%rcx
000000000000cdd6	movq	%rcx,0x000001f0(%r14)
000000000000cddd	movq	0x00007fec(%rip),%rdx
000000000000cde4	movl	(%rdx),%eax
000000000000cde6	testl	%eax,%eax
000000000000cde8	je	0x0000d4bd
000000000000cdee	movslq	%r12d,%rcx
000000000000cdf1	movslq	%r15d,%rdx
000000000000cdf4	movl	0x000001d8(%r14),%esi
000000000000cdfb	xorl	%r9d,%r9d
000000000000cdfe	xorl	%r8d,%r8d
000000000000ce01	jmp	0x0000d497
000000000000ce06	movq	0x000001d0(%r14),%rax
000000000000ce0d	movb	$0x02,0x00000154(%rax)
000000000000ce14	movq	0x000001d0(%r14),%rdx
000000000000ce1b	cmpb	$0x00,0x00000164(%rdx)
000000000000ce22	je	0x0000cf40
000000000000ce28	movl	0x000001d8(%r14),%eax
000000000000ce2f	movq	0x00000198(%rdx,%rax,8),%rdi
000000000000ce37	cmpb	$0x00,0x0000020d(%rdi)
000000000000ce3e	je	0x0000cf40
000000000000ce44	leaq	0xb8(%rbp),%rcx
000000000000ce48	movl	0x000001dc(%rdi),%esi
000000000000ce4e	movq	%rbx,%rdx
000000000000ce51	callq	0x100004e1a
000000000000ce56	movl	%eax,%ebx
000000000000ce58	testl	%eax,%eax
000000000000ce5a	je	0x0000ce95
000000000000ce5c	movl	%eax,0xa4(%rbp)
000000000000ce5f	movq	0x00007f6a(%rip),%rax
000000000000ce66	movl	(%rax),%eax
000000000000ce68	testl	%eax,%eax
000000000000ce6a	je	0x0000d4bd
000000000000ce70	movslq	%r12d,%rcx
000000000000ce73	movslq	%r15d,%rdx
000000000000ce76	movl	0x000001d8(%r14),%esi
000000000000ce7d	xorl	%r9d,%r9d
000000000000ce80	movslq	%ebx,%r8
000000000000ce83	movl	$0x06128446,%edi
000000000000ce88	callq	0x0000ce8d
000000000000ce8d	movl	%ebx,0xa4(%rbp)
000000000000ce90	jmp	0x0000d4bd
000000000000ce95	movq	0xc0(%rbp),%rcx
000000000000ce99	movl	0x18(%rcx),%edx
000000000000ce9c	testl	%edx,%edx
000000000000ce9e	je	0x0000cee0
000000000000cea0	movl	0x1c(%rcx),%eax
000000000000cea3	testl	%eax,%eax
000000000000cea5	je	0x0000cee0
000000000000cea7	movq	0xb8(%rbp),%rsi
000000000000ceab	movl	0x18(%rsi),%eax
000000000000ceae	testl	%eax,%eax
000000000000ceb0	je	0x0000cecc
000000000000ceb2	movl	0x1c(%rsi),%r13d
000000000000ceb6	testl	%r13d,%r13d
000000000000ceb9	je	0x0000cecc
000000000000cebb	cmpl	%eax,%edx
000000000000cebd	cmovael	%eax,%edx
000000000000cec0	movl	%edx,0x000004b4(%r14)
000000000000cec7	movl	0x1c(%rcx),%eax
000000000000ceca	jmp	0x0000cf04
000000000000cecc	movl	0x40(%rsi),%eax
000000000000cecf	cmpl	%eax,%edx
000000000000ced1	cmovael	%eax,%edx
000000000000ced4	movl	%edx,0x000004b4(%r14)
000000000000cedb	movl	0x1c(%rcx),%eax
000000000000cede	jmp	0x0000cf1e
000000000000cee0	movq	0xb8(%rbp),%rsi
000000000000cee4	movl	0x18(%rsi),%edx
000000000000cee7	testl	%edx,%edx
000000000000cee9	je	0x0000cf09
000000000000ceeb	movl	0x1c(%rsi),%ebx
000000000000ceee	testl	%ebx,%ebx
000000000000cef0	je	0x0000cf09
000000000000cef2	movl	0x40(%rcx),%eax
000000000000cef5	cmpl	%eax,%edx
000000000000cef7	cmovbel	%edx,%eax
000000000000cefa	movl	%eax,0x000004b4(%r14)
000000000000cf01	movl	0x50(%rcx),%eax
000000000000cf04	movl	0x1c(%rsi),%edx
000000000000cf07	jmp	0x0000cf21
000000000000cf09	movl	0x40(%rcx),%eax
000000000000cf0c	movl	0x40(%rsi),%edx
000000000000cf0f	cmpl	%edx,%eax
000000000000cf11	cmovael	%edx,%eax
000000000000cf14	movl	%eax,0x000004b4(%r14)
000000000000cf1b	movl	0x50(%rcx),%eax
000000000000cf1e	movl	0x50(%rsi),%edx
000000000000cf21	cmpl	%edx,%eax
000000000000cf23	cmovael	%edx,%eax
000000000000cf26	movl	%eax,0x000004b8(%r14)
000000000000cf2d	movl	0x000004b4(%r14),%edx
000000000000cf34	movl	%edx,0xa8(%rbp)
000000000000cf37	movl	0x000004b8(%r14),%eax
000000000000cf3e	jmp	0x0000cf4d
000000000000cf40	movq	0xc0(%rbp),%rax
000000000000cf44	movl	0x18(%rax),%edx
000000000000cf47	movl	%edx,0xa8(%rbp)
000000000000cf4a	movl	0x1c(%rax),%eax
000000000000cf4d	movl	%eax,0xac(%rbp)
000000000000cf50	testl	%r12d,%r12d
000000000000cf53	jne	0x0000d4a3
000000000000cf59	movq	0x000001d0(%r14),%rdi
000000000000cf60	callq	0x100006952
000000000000cf65	movq	0xc0(%rbp),%rbx
000000000000cf69	movl	0x000001d8(%r14),%r12d
000000000000cf70	movq	0x000001d0(%r14),%r13
000000000000cf77	leaq	0x00000298(%r14),%rsi
000000000000cf7e	movl	$0x000000f0,%edx
000000000000cf83	movq	%rsp,%rdi
000000000000cf86	callq	0x0000cf8b
000000000000cf8b	xorl	%ecx,%ecx
000000000000cf8d	movq	%rbx,%rdx
000000000000cf90	movl	%r12d,%esi
000000000000cf93	movq	%r13,%rdi
000000000000cf96	callq	0x10000bdfa
000000000000cf9b	movq	0x000001d0(%r14),%rdi
000000000000cfa2	callq	0x100006928
000000000000cfa7	movl	%r15d,0x000001dc(%r14)
000000000000cfae	movl	$0x00000000,0x000001e0(%r14)
000000000000cfb9	movl	$0x00000002,0x000001e4(%r14)
000000000000cfc4	movq	0xc0(%rbp),%rax
000000000000cfc8	cmpl	$0x0fffffff,(%rax)
000000000000cfce	jne	0x0000cffb
000000000000cfd0	jmp	0x0000d377
000000000000cfd5	movslq	%r12d,%rcx
000000000000cfd8	movslq	%r15d,%rdx
000000000000cfdb	movl	0x000001d8(%r14),%esi
000000000000cfe2	xorl	%r9d,%r9d
000000000000cfe5	movq	$0xe00002e6,%r8
000000000000cfec	movl	$0x06128446,%edi
000000000000cff1	callq	0x0000cff6
000000000000cff6	jmp	0x0000d4b6
000000000000cffb	leaq	0x00000388(%r14),%rdi
000000000000d002	movl	$0x00000060,%edx
000000000000d007	xorl	%esi,%esi
000000000000d009	callq	0x0000d00e
000000000000d00e	movzbl	0x00000221(%rsi),%eax
000000000000d016	shll	$0x08,%eax
000000000000d019	movzbl	0x00000220(%rsi),%edx
000000000000d021	orl	%edx,%eax
000000000000d023	movl	%eax,0x00000388(%r14)
000000000000d02a	movzbl	0x00000223(%rsi),%eax
000000000000d032	shll	$0x08,%eax
000000000000d035	movzbl	0x00000222(%rsi),%edx
000000000000d03d	orl	%edx,%eax
000000000000d03f	movl	%eax,0x0000038c(%r14)
000000000000d046	movq	$0x00000000,0x000003c8(%r14)
000000000000d051	movq	0xc0(%rbp),%rcx
000000000000d055	movl	0x20(%rcx),%edx
000000000000d058	testb	$0x08,%dl
000000000000d05b	je	0x0000d0a8
000000000000d05d	movl	0x40(%rcx),%eax
000000000000d060	cmpl	$0x00000320,%eax
000000000000d065	jne	0x0000d07d
000000000000d067	cmpl	$0x00000258,0x50(%rcx)
000000000000d06e	jne	0x0000d09a
000000000000d070	movq	$0x00000001,0x000003c8(%r14)
000000000000d07b	jmp	0x0000d0a8
000000000000d07d	cmpl	$0x00000400,%eax
000000000000d082	jne	0x0000d09a
000000000000d084	cmpl	$0x00000300,0x50(%rcx)
000000000000d08b	jne	0x0000d09a
000000000000d08d	movq	$0x00000003,0x000003c8(%r14)
000000000000d098	jmp	0x0000d0a8
000000000000d09a	movq	$0x00000001,0x000003c8(%r14)
000000000000d0a5	xorl	%r15d,%r15d
000000000000d0a8	andl	$0x10,%edx
000000000000d0ab	je	0x0000d103
000000000000d0ad	movl	0x40(%rcx),%eax
000000000000d0b0	cmpl	$0x00000320,%eax
000000000000d0b5	jne	0x0000d0d0
000000000000d0b7	cmpl	$0x00000258,0x50(%rcx)
000000000000d0be	jne	0x0000d0f0
000000000000d0c0	movq	$0x00000002,0x000003c8(%r14)
000000000000d0cb	jmp	0x0000d2be
000000000000d0d0	cmpl	$0x00000400,%eax
000000000000d0d5	jne	0x0000d0f0
000000000000d0d7	cmpl	$0x00000300,0x50(%rcx)
000000000000d0de	jne	0x0000d0f0
000000000000d0e0	movq	$0x00000004,0x000003c8(%r14)
000000000000d0eb	jmp	0x0000d2be
000000000000d0f0	movq	$0x00000002,0x000003c8(%r14)
000000000000d0fb	xorl	%r15d,%r15d
000000000000d0fe	jmp	0x0000d2be
000000000000d103	cmpq	$0x00,0x000003c8(%r14)
000000000000d10b	jne	0x0000d2be
000000000000d111	movq	0x28(%rcx),%rax
000000000000d115	movl	%eax,0x00000394(%r14)
000000000000d11c	movl	0x40(%rcx),%eax
000000000000d11f	addl	0x44(%rcx),%eax
000000000000d122	movl	%eax,0x00000398(%r14)
000000000000d129	movl	0x40(%rcx),%eax
000000000000d12c	movl	%eax,0x0000039c(%r14)
000000000000d133	movl	0x40(%rcx),%eax
000000000000d136	addl	0x44(%rcx),%eax
000000000000d139	movl	%eax,0x000003a0(%r14)
000000000000d140	movl	0x40(%rcx),%eax
000000000000d143	addl	0x48(%rcx),%eax
000000000000d146	movl	%eax,0x000003a4(%r14)
000000000000d14d	movl	0x40(%rcx),%eax
000000000000d150	addl	0x48(%rcx),%eax
000000000000d153	addl	0x4c(%rcx),%eax
000000000000d156	movl	%eax,0x000003a8(%r14)
000000000000d15d	movl	0x50(%rcx),%eax
000000000000d160	addl	0x54(%rcx),%eax
000000000000d163	movl	%eax,0x000003ac(%r14)
000000000000d16a	movl	0x50(%rcx),%eax
000000000000d16d	movl	%eax,0x000003b0(%r14)
000000000000d174	movl	0x50(%rcx),%eax
000000000000d177	addl	0x54(%rcx),%eax
000000000000d17a	movl	%eax,0x000003b4(%r14)
000000000000d181	movl	0x50(%rcx),%eax
000000000000d184	addl	0x58(%rcx),%eax
000000000000d187	movl	%eax,0x000003b8(%r14)
000000000000d18e	movl	0x50(%rcx),%eax
000000000000d191	addl	0x58(%rcx),%eax
000000000000d194	addl	0x5c(%rcx),%eax
000000000000d197	movl	%eax,0x000003bc(%r14)
000000000000d19e	movl	0x00000080(%rcx),%eax
000000000000d1a4	movl	%eax,0x000003c0(%r14)
000000000000d1ab	movl	$0x00000000,0x000003c4(%r14)
000000000000d1b6	testb	$0x04,0x20(%rcx)
000000000000d1ba	je	0x0000d1c7
000000000000d1bc	movl	$0x00000004,0x000003c4(%r14)
000000000000d1c7	testb	$0x01,0x78(%rcx)
000000000000d1cb	je	0x0000d1d5
000000000000d1cd	orl	$0x02,0x000003c4(%r14)
000000000000d1d5	testb	$0x01,0x70(%rcx)
000000000000d1d9	je	0x0000d1e3
000000000000d1db	orl	$0x01,0x000003c4(%r14)
000000000000d1e3	testb	$0x01,0x14(%rcx)
000000000000d1e7	je	0x0000d1fb
000000000000d1e9	cmpl	$0x02,0x00000210(%r14)
000000000000d1f1	je	0x0000d1fb
000000000000d1f3	orl	$0x08,0x000003c4(%r14)
000000000000d1fb	movl	$0x00000002,0x000003d0(%r14)
000000000000d206	movl	0x00000210(%r14),%eax
000000000000d20d	decl	%eax
000000000000d20f	cmpl	$0x01,%eax
000000000000d212	ja	0x0000d22c
000000000000d214	movl	$0x00000000,0x000003d4(%r14)
000000000000d21f	movl	$0x00000000,0x000003d8(%r14)
000000000000d22a	jmp	0x0000d240
000000000000d22c	movl	0xa8(%rbp),%eax
000000000000d22f	movl	%eax,0x000003d4(%r14)
000000000000d236	movl	0xac(%rbp),%edx
000000000000d239	movl	%edx,0x000003d8(%r14)
000000000000d240	cmpl	$0xfb,%r15d
000000000000d244	jne	0x0000d256
000000000000d246	movl	0x0000046c(%r14),%eax
000000000000d24d	movl	%eax,0x000003e0(%r14)
000000000000d254	jmp	0x0000d25d
000000000000d256	movl	%r15d,0x000003e0(%r14)
000000000000d25d	movq	0x000001d0(%r14),%rcx
000000000000d264	cmpb	$0x00,0x00000180(%rcx)
000000000000d26b	je	0x0000d3c9
000000000000d271	cmpl	$0x03,0x00000210(%r14)
000000000000d279	jne	0x0000d3c9
000000000000d27f	movl	0x00000604(%rcx),%eax
000000000000d285	cvtsi2ss	%rax,%xmm0
000000000000d28a	movl	0x00000608(%rcx),%eax
000000000000d290	cvtsi2ss	%rax,%xmm1
000000000000d295	divss	%xmm1,%xmm0
000000000000d299	cvtss2sd	%xmm0,%xmm0
000000000000d29d	mulsd	0x00005d43(%rip),%xmm0
000000000000d2a5	addsd	0x00005d43(%rip),%xmm0
000000000000d2ad	cvttsd2si	%xmm0,%rax
000000000000d2b2	movl	%eax,0x000003dc(%r14)
000000000000d2b9	jmp	0x0000d3c9
000000000000d2be	movl	$0x00000000,0x00000394(%r14)
000000000000d2c9	movl	$0x00000000,0x00000398(%r14)
000000000000d2d4	movl	$0x00000000,0x0000039c(%r14)
000000000000d2df	movl	$0x00000000,0x000003a0(%r14)
000000000000d2ea	movl	$0x00000000,0x000003a4(%r14)
000000000000d2f5	movl	$0x00000000,0x000003a8(%r14)
000000000000d300	movl	$0x00000000,0x000003ac(%r14)
000000000000d30b	movl	$0x00000000,0x000003b0(%r14)
000000000000d316	movl	$0x00000000,0x000003b4(%r14)
000000000000d321	movl	$0x00000000,0x000003b8(%r14)
000000000000d32c	movl	$0x00000000,0x000003bc(%r14)
000000000000d337	movl	$0x00000000,0x000003c0(%r14)
000000000000d342	movl	$0x00000000,0x000003c4(%r14)
000000000000d34d	movl	$0x00000002,0x000003d0(%r14)
000000000000d358	movl	$0x00000000,0x000003d4(%r14)
000000000000d363	movl	$0x00000000,0x000003d8(%r14)
000000000000d36e	movl	%r15d,0x000003e0(%r14)
000000000000d375	jmp	0x0000d3c2
000000000000d377	leaq	0x00000388(%r14),%rdi
000000000000d37e	movl	$0x00000060,%edx
000000000000d383	xorl	%esi,%esi
000000000000d385	callq	0x0000d38a
000000000000d38a	movzbl	0x00000221(%rsi),%eax
000000000000d392	shll	$0x08,%eax
000000000000d395	movzbl	0x00000220(%rsi),%edx
000000000000d39d	orl	%edx,%eax
000000000000d39f	movl	%eax,0x00000388(%r14)
000000000000d3a6	movzbl	0x00000223(%rsi),%eax
000000000000d3ae	shll	$0x08,%eax
000000000000d3b1	movzbl	0x00000222(%rsi),%edx
000000000000d3b9	orl	%edx,%eax
000000000000d3bb	movl	%eax,0x0000038c(%r14)
000000000000d3c2	movq	0x000001d0(%r14),%rcx
000000000000d3c9	movl	0x000001d8(%r14),%edx
000000000000d3d0	movq	%rcx,%r12
000000000000d3d3	movslq	%edx,%rbx
000000000000d3d6	movq	0x000079f3(%rip),%rax
000000000000d3dd	movl	(%rax),%r11d
000000000000d3e0	testl	%r11d,%r11d
000000000000d3e3	je	0x0000d416
000000000000d3e5	imulq	$0x000000f0,%rbx,%rax
000000000000d3ec	movl	0x000001f4(%rax,%rcx),%edx
000000000000d3f3	xorl	%r9d,%r9d
000000000000d3f6	xorl	%r8d,%r8d
000000000000d3f9	xorl	%ecx,%ecx
000000000000d3fb	movq	%rbx,%rsi
000000000000d3fe	movl	$0x061284d8,%edi
000000000000d403	callq	0x0000d408
000000000000d408	movl	0x000001d8(%r14),%edx
000000000000d40f	movq	0x000001d0(%r14),%rcx
000000000000d416	imulq	$0x000000f0,%rbx,%rax
000000000000d41d	movl	0x000001f4(%r12,%rax),%r12d
000000000000d425	movq	%r12,0x000001e8(%r14)
000000000000d42c	movslq	%edx,%rax
000000000000d42f	imulq	$0x000000f0,%rax,%rax
000000000000d436	movl	0x000001f0(%rax,%rcx),%eax
000000000000d43d	movl	%eax,%edx
000000000000d43f	movl	$0x00002000,%ecx
000000000000d444	testl	%eax,%eax
000000000000d446	cmovneq	%rdx,%rcx
000000000000d44a	movq	%rcx,0x000001f0(%r14)
000000000000d451	movq	0xc0(%rbp),%rdx
000000000000d455	movl	0x1c(%rdx),%eax
000000000000d458	testl	%eax,%eax
000000000000d45a	je	0x0000d460
000000000000d45c	movl	%eax,%eax
000000000000d45e	jmp	0x0000d463
000000000000d460	movl	0x50(%rdx),%eax
000000000000d463	imulq	%rax,%rcx
000000000000d467	movq	%rcx,0x000001f0(%r14)
000000000000d46e	movb	$0x00,0x00000470(%r14)
000000000000d476	movq	0x00007953(%rip),%rdx
000000000000d47d	movl	(%rdx),%r10d
000000000000d480	testl	%r10d,%r10d
000000000000d483	je	0x0000d4bd
000000000000d485	movslq	%r15d,%rdx
000000000000d488	movl	0x000001d8(%r14),%esi
000000000000d48f	xorl	%r9d,%r9d
000000000000d492	xorl	%r8d,%r8d
000000000000d495	xorl	%ecx,%ecx
000000000000d497	movl	$0x06128446,%edi
000000000000d49c	callq	0x0000d4a1
000000000000d4a1	jmp	0x0000d4bd
000000000000d4a3	movq	0x00007926(%rip),%rax
000000000000d4aa	movl	(%rax),%r9d
000000000000d4ad	testl	%r9d,%r9d
000000000000d4b0	jne	0x10000cfd5
000000000000d4b6	movl	$0xe00002e6,0xa4(%rbp)
000000000000d4bd	movl	0xa4(%rbp),%eax
000000000000d4c0	movq	0xd8(%rbp),%rbx
000000000000d4c4	movq	0xe0(%rbp),%r12
000000000000d4c8	movq	0xe8(%rbp),%r13
000000000000d4cc	movq	0xf0(%rbp),%r14
000000000000d4d0	movq	0xf8(%rbp),%r15
000000000000d4d4	leave
000000000000d4d5	ret
__ZN21AppleIntelFramebuffer13GetOnlineInfoEjPhS0_PNS_15DisplayPortTypeE:
000000000000d4d6	pushq	%rbp
000000000000d4d7	movq	%rsp,%rbp
000000000000d4da	subq	$0x000000f0,%rsp
000000000000d4e1	movq	%rbx,0xd8(%rbp)
000000000000d4e5	movq	%r12,0xe0(%rbp)
000000000000d4e9	movq	%r13,0xe8(%rbp)
000000000000d4ed	movq	%r14,0xf0(%rbp)
000000000000d4f1	movq	%r15,0xf8(%rbp)
000000000000d4f5	movq	%rdi,%r13
000000000000d4f8	movl	%esi,%r12d
000000000000d4fb	movq	%rdx,%r14
000000000000d4fe	movq	%rcx,%rbx
000000000000d501	movq	%r8,%r15
000000000000d504	movq	0x0000790d(%rip),%rax
000000000000d50b	movq	(%rax),%rdx
000000000000d50e	movq	%rdx,0xc8(%rbp)
000000000000d512	xorl	%edx,%edx
000000000000d514	movq	0x000078b5(%rip),%rcx
000000000000d51b	movl	(%rcx),%r8d
000000000000d51e	testl	%r8d,%r8d
000000000000d521	je	0x0000d53d
000000000000d523	movl	%esi,%edx
000000000000d525	movl	0x000001d8(%rdi),%esi
000000000000d52b	xorl	%r9d,%r9d
000000000000d52e	xorl	%r8d,%r8d
000000000000d531	xorl	%ecx,%ecx
000000000000d533	movl	$0x06128499,%edi
000000000000d538	callq	0x0000d53d
000000000000d53d	movb	$0x00,(%r14)
000000000000d541	movl	$0x00000000,(%r15)
000000000000d548	movq	0x000001d0(%r13),%rdx
000000000000d54f	movzbl	0x00000190(%rdx),%ecx
000000000000d556	cmpl	%r12d,%ecx
000000000000d559	jne	0x0000d569
000000000000d55b	testb	$0x02,0x00000498(%r13)
000000000000d563	jne	0x0000d756
000000000000d569	movzbl	0x00000191(%rdx),%eax
000000000000d570	cmpl	%r12d,%eax
000000000000d573	jne	0x0000d586
000000000000d575	testl	$0x000001fc,0x00000498(%r13)
000000000000d580	jne	0x0000d756
000000000000d586	cmpb	$0x00,0x00000192(%rdx)
000000000000d58d	je	0x0000d680
000000000000d593	cmpl	%ecx,%r12d
000000000000d596	jne	0x0000d680
000000000000d59c	movq	0x00(%r13),%rax
000000000000d5a0	leaq	0xffffff30(%rbp),%rdx
000000000000d5a7	movq	%rdx,(%rsp)
000000000000d5ab	movq	%rbx,%r9
000000000000d5ae	xorl	%r8d,%r8d
000000000000d5b1	xorl	%ecx,%ecx
000000000000d5b3	movl	$0x00000001,%edx
000000000000d5b8	movl	$0x00000003,%esi
000000000000d5bd	movq	%r13,%rdi
000000000000d5c0	call	*0x00000ac8(%rax)
000000000000d5c6	testl	%eax,%eax
000000000000d5c8	jne	0x0000d677
000000000000d5ce	leaq	0x00000218(%r13),%rsi
000000000000d5d5	movl	$0x00000080,%edx
000000000000d5da	movq	%rbx,%rdi
000000000000d5dd	callq	0x0000d5e2
000000000000d5e2	movl	$0x00000003,(%r15)
000000000000d5e9	movl	0x00000494(%r13),%edi
000000000000d5f0	testl	%edi,%edi
000000000000d5f2	je	0x0000d66e
000000000000d5f4	leaq	0xffffff28(%rbp),%rdx
000000000000d5fb	movl	$0x636c616d,%esi
000000000000d600	movq	%r13,%rdi
000000000000d603	movq	0x00007806(%rip),%rax
000000000000d60a	call	*0x00000a40(%rax)
000000000000d610	cmpq	$0x00,0xffffff28(%rbp)
000000000000d618	je	0x0000d66e
000000000000d61a	testw	%ax,%ax
000000000000d61d	jne	0x0000d66e
000000000000d61f	movb	$0x00,0xffffff3f(%rbp)
000000000000d626	leaq	0xffffff40(%rbp),%rbx
000000000000d62d	movl	$0x00000080,%edx
000000000000d632	xorl	%esi,%esi
000000000000d634	movq	%rbx,%rdi
000000000000d637	callq	0x0000d63c
000000000000d63c	leaq	0xffffff3f(%rbp),%rdx
000000000000d643	xorl	%esi,%esi
000000000000d645	testl	%r12d,%r12d
000000000000d648	sete	%dh
000000000000d64c	leaq	0xffffff38(%rbp),%r8
000000000000d653	movq	%rbx,%rcx
000000000000d656	movq	%r13,%rdi
000000000000d659	callq	0x10000d4d6
000000000000d65e	cmpb	$0x00,0xffffff3f(%rbp)
000000000000d665	sete	(%r14)
000000000000d669	jmp	0x0000d756
000000000000d66e	movb	$0x01,(%r14)
000000000000d672	jmp	0x0000d756
000000000000d677	movb	$0x00,(%r14)
000000000000d67b	jmp	0x0000d756
000000000000d680	cmpl	$0x01,0x00000194(%rdx)
000000000000d687	jle	0x0000d69b
000000000000d689	cmpb	$0x00,0x00000193(%rdx)
000000000000d690	je	0x0000d69b
000000000000d692	cmpl	%ecx,%r12d
000000000000d695	je	0x0000d756
000000000000d69b	movq	0x00(%r13),%r10
000000000000d69f	leaq	0xffffff30(%rbp),%rax
000000000000d6a6	movq	%rax,(%rsp)
000000000000d6aa	movq	%rbx,%r9
000000000000d6ad	xorl	%r8d,%r8d
000000000000d6b0	xorl	%ecx,%ecx
000000000000d6b2	movl	$0x00000001,%edx
000000000000d6b7	movl	$0x00000002,%esi
000000000000d6bc	movq	%r13,%rdi
000000000000d6bf	call	*0x00000ac8(%r10)
000000000000d6c6	movq	$0x00000008,0xffffff30(%rbp)
000000000000d6d1	cmpb	$0x00,(%r14)
000000000000d6d5	jne	0x0000d728
000000000000d6d7	movq	0x000001d0(%r13),%rdx
000000000000d6de	xorl	%ecx,%ecx
000000000000d6e0	cmpl	$0x01,0x00000194(%rdx)
000000000000d6e7	jle	0x0000d6f0
000000000000d6e9	movzbl	0x00000191(%rdx),%ecx
000000000000d6f0	cmpl	%r12d,%ecx
000000000000d6f3	jne	0x0000d728
000000000000d6f5	testl	%eax,%eax
000000000000d6f7	jne	0x0000d728
000000000000d6f9	cmpb	$0x00,(%rbx)
000000000000d6fc	jne	0x0000d728
000000000000d6fe	cmpb	$0xff,0x01(%rbx)
000000000000d702	jne	0x0000d728
000000000000d704	cmpb	$0xff,0x02(%rbx)
000000000000d708	jne	0x0000d728
000000000000d70a	cmpb	$0xff,0x03(%rbx)
000000000000d70e	jne	0x0000d728
000000000000d710	cmpb	$0xff,0x04(%rbx)
000000000000d714	jne	0x0000d728
000000000000d716	cmpb	$0xff,0x05(%rbx)
000000000000d71a	jne	0x0000d728
000000000000d71c	cmpb	$0xff,0x06(%rbx)
000000000000d720	jne	0x0000d728
000000000000d722	cmpb	$0x00,0x07(%rbx)
000000000000d726	je	0x0000d77b
000000000000d728	movq	$0x00000008,0xffffff30(%rbp)
000000000000d733	cmpb	$0x00,(%r14)
000000000000d737	je	0x0000d756
000000000000d739	movq	0x000001d0(%r13),%rax
000000000000d740	cmpb	$0x00,0x00000193(%rax)
000000000000d747	je	0x0000d756
000000000000d749	cmpb	$0x00,0x14(%rbx)
000000000000d74d	jns	0x0000d756
000000000000d74f	movl	$0x00000002,(%r15)
000000000000d756	movq	0x00007673(%rip),%rax
000000000000d75d	movl	(%rax),%esi
000000000000d75f	testl	%esi,%esi
000000000000d761	je	0x0000d788
000000000000d763	xorl	%r9d,%r9d
000000000000d766	xorl	%r8d,%r8d
000000000000d769	xorl	%ecx,%ecx
000000000000d76b	xorl	%edx,%edx
000000000000d76d	xorl	%esi,%esi
000000000000d76f	movl	$0x0612849a,%edi
000000000000d774	callq	0x0000d779
000000000000d779	jmp	0x0000d788
000000000000d77b	movb	$0x01,(%r14)
000000000000d77f	movl	$0x00000001,(%r15)
000000000000d786	jmp	0x0000d728
000000000000d788	xorl	%eax,%eax
000000000000d78a	movq	0x00007687(%rip),%rdx
000000000000d791	movq	0xc8(%rbp),%rcx
000000000000d795	xorq	(%rdx),%rcx
000000000000d798	je	0x0000d79f
000000000000d79a	callq	0x0000d79f
000000000000d79f	movq	0xd8(%rbp),%rbx
000000000000d7a3	movq	0xe0(%rbp),%r12
000000000000d7a7	movq	0xe8(%rbp),%r13
000000000000d7ab	movq	0xf0(%rbp),%r14
000000000000d7af	movq	0xf8(%rbp),%r15
000000000000d7b3	leave
000000000000d7b4	ret
000000000000d7b5	nop
__ZN21AppleIntelFramebuffer15connectionProbeEjb:
000000000000d7b6	pushq	%rbp
000000000000d7b7	movq	%rsp,%rbp
000000000000d7ba	subq	$0x000000d0,%rsp
000000000000d7c1	movq	%rbx,0xd8(%rbp)
000000000000d7c5	movq	%r12,0xe0(%rbp)
000000000000d7c9	movq	%r13,0xe8(%rbp)
000000000000d7cd	movq	%r14,0xf0(%rbp)
000000000000d7d1	movq	%r15,0xf8(%rbp)
000000000000d7d5	movq	%rdi,%rbx
000000000000d7d8	movl	%esi,%r12d
000000000000d7db	movl	%edx,%r15d
000000000000d7de	movq	0x00007633(%rip),%rax
000000000000d7e5	movq	(%rax),%rdx
000000000000d7e8	movq	%rdx,0xc8(%rbp)
000000000000d7ec	xorl	%edx,%edx
000000000000d7ee	movq	0x000075db(%rip),%rcx
000000000000d7f5	movl	(%rcx),%r10d
000000000000d7f8	testl	%r10d,%r10d
000000000000d7fb	je	0x0000d819
000000000000d7fd	movzbl	%bh,%ecx
000000000000d801	movl	%esi,%edx
000000000000d803	movl	0x000001d8(%rdi),%esi
000000000000d809	xorl	%r9d,%r9d
000000000000d80c	xorl	%r8d,%r8d
000000000000d80f	movl	$0x0612849d,%edi
000000000000d814	callq	0x0000d819
000000000000d819	andl	$0x01,%r12d
000000000000d81d	je	0x0000d930
000000000000d823	movb	$0x00,0xffffff3f(%rbp)
000000000000d82a	movl	0x00000210(%rbx),%eax
000000000000d830	movl	%eax,0xffffff38(%rbp)
000000000000d836	leaq	0xffffff40(%rbp),%r14
000000000000d83d	movl	$0x00000080,%edx
000000000000d842	xorl	%esi,%esi
000000000000d844	movq	%r14,%rdi
000000000000d847	callq	0x0000d84c
000000000000d84c	leaq	0xffffff3f(%rbp),%rdx
000000000000d853	movl	0x000001d8(%rbx),%esi
000000000000d859	leaq	0xffffff38(%rbp),%r8
000000000000d860	movq	%r14,%rcx
000000000000d863	movq	%rbx,%rdi
000000000000d866	callq	0x10000d4d6
000000000000d86b	movzbl	0xffffff3f(%rbp),%r12d
000000000000d873	leaq	0x00000218(%rbx),%r13
000000000000d87a	cmpb	%r12b,0x0000020d(%rbx)
000000000000d881	jne	0x0000d8b9
000000000000d883	testb	%r12b,%r12b
000000000000d886	je	0x0000d930
000000000000d88c	movl	0x00000210(%rbx),%eax
000000000000d892	cmpl	0xffffff38(%rbp),%eax
000000000000d898	je	0x0000d89e
000000000000d89a	testb	$0xf0,%al
000000000000d89c	je	0x0000d8b9
000000000000d89e	leaq	0x00000218(%rbx),%r13
000000000000d8a5	movl	$0x00000080,%edx
000000000000d8aa	movq	%r13,%rsi
000000000000d8ad	movq	%r14,%rdi
000000000000d8b0	callq	0x0000d8b5
000000000000d8b5	testl	%eax,%eax
000000000000d8b7	je	0x0000d930
000000000000d8b9	movb	%r12b,0x0000020d(%rbx)
000000000000d8c0	movzbl	0x000004d8(%rbx),%esi
000000000000d8c7	movq	%rbx,%rdi
000000000000d8ca	callq	0x100008310
000000000000d8cf	movb	$0x01,0x0000020e(%rbx)
000000000000d8d6	movl	0xffffff38(%rbp),%eax
000000000000d8dc	movl	%eax,0x00000210(%rbx)
000000000000d8e2	movl	$0x00000080,%edx
000000000000d8e7	movq	%r13,%rsi
000000000000d8ea	movq	%r14,%rdi
000000000000d8ed	callq	0x0000d8f2
000000000000d8f2	cmpb	$0x00,0x0000020c(%rbx)
000000000000d8f9	je	0x0000d930
000000000000d8fb	testb	%r15b,%r15b
000000000000d8fe	je	0x0000d930
000000000000d900	movl	0x000001d8(%rbx),%eax
000000000000d906	imulq	$0x000000f0,%rax,%rax
000000000000d90d	addq	0x000001d0(%rbx),%rax
000000000000d914	movq	0x00000278(%rax),%rdx
000000000000d91b	testq	%rdx,%rdx
000000000000d91e	je	0x0000d930
000000000000d920	movq	0x00000288(%rax),%rsi
000000000000d927	movq	0x00000280(%rax),%rdi
000000000000d92e	call	*%rdx
000000000000d930	movq	(%rbx),%rax
000000000000d933	movl	$0x00000020,%ecx
000000000000d938	movl	$0x00000401,%edx
000000000000d93d	leaq	0x00003b8e(%rip),%rsi
000000000000d944	movq	%rbx,%rdi
000000000000d947	call	*0x00000280(%rax)
000000000000d94d	movq	0x0000747c(%rip),%rax
000000000000d954	movl	(%rax),%r9d
000000000000d957	testl	%r9d,%r9d
000000000000d95a	je	0x0000d972
000000000000d95c	xorl	%r9d,%r9d
000000000000d95f	xorl	%r8d,%r8d
000000000000d962	xorl	%ecx,%ecx
000000000000d964	xorl	%edx,%edx
000000000000d966	xorl	%esi,%esi
000000000000d968	movl	$0x0612849e,%edi
000000000000d96d	callq	0x0000d972
000000000000d972	xorl	%eax,%eax
000000000000d974	movq	0x0000749d(%rip),%rdx
000000000000d97b	movq	0xc8(%rbp),%rcx
000000000000d97f	xorq	(%rdx),%rcx
000000000000d982	je	0x0000d989
000000000000d984	callq	0x0000d989
000000000000d989	movq	0xd8(%rbp),%rbx
000000000000d98d	movq	0xe0(%rbp),%r12
000000000000d991	movq	0xe8(%rbp),%r13
000000000000d995	movq	0xf0(%rbp),%r14
000000000000d999	movq	0xf8(%rbp),%r15
000000000000d99d	leave
000000000000d99e	ret
000000000000d99f	nop
__ZN21AppleIntelFramebuffer25setAttributeForConnectionEijm:
000000000000d9a0	pushq	%rbp
000000000000d9a1	movq	%rsp,%rbp
000000000000d9a4	subq	$0x30,%rsp
000000000000d9a8	movq	%rbx,0xd8(%rbp)
000000000000d9ac	movq	%r12,0xe0(%rbp)
000000000000d9b0	movq	%r13,0xe8(%rbp)
000000000000d9b4	movq	%r14,0xf0(%rbp)
000000000000d9b8	movq	%r15,0xf8(%rbp)
000000000000d9bc	movq	%rdi,%r12
000000000000d9bf	movl	%esi,%r14d
000000000000d9c2	movl	%edx,%ebx
000000000000d9c4	movq	%rcx,%r13
000000000000d9c7	movq	0x00007402(%rip),%r15
000000000000d9ce	movl	(%r15),%eax
000000000000d9d1	testl	%eax,%eax
000000000000d9d3	je	0x0000d9ed
000000000000d9d5	movl	%edx,%edx
000000000000d9d7	movl	0x000001d8(%rdi),%esi
000000000000d9dd	xorl	%r9d,%r9d
000000000000d9e0	xorl	%r8d,%r8d
000000000000d9e3	movl	$0x06128425,%edi
000000000000d9e8	callq	0x0000d9ed
000000000000d9ed	cmpl	$0x61757070,%ebx
000000000000d9f3	je	0x0000db53
000000000000d9f9	ja	0x0000da52
000000000000d9fb	cmpl	$0x00696772,%ebx
000000000000da01	je	0x0000dad5
000000000000da07	ja	0x0000da29
000000000000da09	cmpl	$0x00617572,%ebx
000000000000da0f	jb	0x0000db8a
000000000000da15	cmpl	$0x00617573,%ebx
000000000000da1b	jbe	0x0000db53
000000000000da21	cmpl	$0x00617577,%ebx
000000000000da27	jmp	0x0000da47
000000000000da29	cmpl	$0x61757063,%ebx
000000000000da2f	je	0x0000db53
000000000000da35	cmpl	$0x61757068,%ebx
000000000000da3b	je	0x0000db53
000000000000da41	cmpl	$0x61756d73,%ebx
000000000000da47	jne	0x0000db8a
000000000000da4d	jmp	0x0000db53
000000000000da52	cmpl	$0x706f7772,%ebx
000000000000da58	je	0x0000dbaf
000000000000da5e	ja	0x0000da89
000000000000da60	cmpl	$0x6f73636e,%ebx
000000000000da66	je	0x0000dba7
000000000000da6c	cmpl	$0x706e6c74,%ebx
000000000000da72	je	0x0000db67
000000000000da78	cmpl	$0x626b6c74,%ebx
000000000000da7e	jne	0x0000db8a
000000000000da84	jmp	0x0000db2d
000000000000da89	cmpl	$0x7073636e,%ebx
000000000000da8f	je	0x0000dba7
000000000000da95	cmpl	$0x76627374,%ebx
000000000000da9b	je	0x0000dba7
000000000000daa1	cmpl	$0x70726f62,%ebx
000000000000daa7	jne	0x0000db8a
000000000000daad	cmpq	$0x01,%r13
000000000000dab1	jne	0x0000dbaf
000000000000dab7	movl	$0x00000001,%edx
000000000000dabc	movl	$0x00000001,%esi
000000000000dac1	movq	%r12,%rdi
000000000000dac4	callq	0x10000d7b6
000000000000dac9	andq	$0xffffff00,%r13
000000000000dad0	jmp	0x0000dbb2
000000000000dad5	testl	%r13d,%r13d
000000000000dad8	jns	0x0000daef
000000000000dada	movl	%r13d,%eax
000000000000dadd	andl	$0x7fffffff,%eax
000000000000dae2	orl	%eax,0x00000498(%r12)
000000000000daea	jmp	0x0000dbaf
000000000000daef	movq	0x000001d0(%r12),%rdi
000000000000daf7	cmpb	$0x00,0x00000180(%rdi)
000000000000dafe	je	0x0000db16
000000000000db00	testb	$0x03,0x00000210(%r12)
000000000000db09	je	0x0000db16
000000000000db0b	movl	0x00000604(%rdi),%esi
000000000000db11	callq	0x10000371a
000000000000db16	movl	%r13d,%eax
000000000000db19	andl	$0x7fffffff,%eax
000000000000db1e	notl	%eax
000000000000db20	andl	%eax,0x00000498(%r12)
000000000000db28	jmp	0x0000dbaf
000000000000db2d	movq	0x000001d0(%r12),%rdi
000000000000db35	cmpb	$0x00,0x00000180(%rdi)
000000000000db3c	je	0x0000dba7
000000000000db3e	testb	$0x03,0x00000210(%r12)
000000000000db47	je	0x0000dba7
000000000000db49	movl	%r13d,%esi
000000000000db4c	callq	0x10000371a
000000000000db51	jmp	0x0000dbaf
000000000000db53	movq	(%r12),%rax
000000000000db57	movq	%r13,%rdx
000000000000db5a	movl	%ebx,%esi
000000000000db5c	movq	%r12,%rdi
000000000000db5f	call	*0x00000af0(%rax)
000000000000db65	jmp	0x0000dba2
000000000000db67	movq	0x000001d0(%r12),%rdi
000000000000db6f	movzbl	0x00000190(%rdi),%eax
000000000000db76	cmpl	%eax,0x000001d8(%r12)
000000000000db7e	jne	0x0000dba7
000000000000db80	movl	%r13d,%esi
000000000000db83	callq	0x1000046c2
000000000000db88	jmp	0x0000dbaf
000000000000db8a	movq	%r13,%rcx
000000000000db8d	movl	%ebx,%edx
000000000000db8f	movl	%r14d,%esi
000000000000db92	movq	%r12,%rdi
000000000000db95	movq	0x00007274(%rip),%rax
000000000000db9c	call	*0x00000a68(%rax)
000000000000dba2	movl	%eax,%r13d
000000000000dba5	jmp	0x0000dbb2
000000000000dba7	movl	$0xe00002c7,%r13d
000000000000dbad	jmp	0x0000dbb2
000000000000dbaf	xorl	%r13d,%r13d
000000000000dbb2	movl	(%r15),%r11d
000000000000dbb5	testl	%r11d,%r11d
000000000000dbb8	je	0x0000dbd7
000000000000dbba	movslq	%r13d,%rcx
000000000000dbbd	movl	%ebx,%edx
000000000000dbbf	movl	0x000001d8(%r12),%esi
000000000000dbc7	xorl	%r9d,%r9d
000000000000dbca	xorl	%r8d,%r8d
000000000000dbcd	movl	$0x06128426,%edi
000000000000dbd2	callq	0x0000dbd7
000000000000dbd7	movl	%r13d,%eax
000000000000dbda	movq	0xd8(%rbp),%rbx
000000000000dbde	movq	0xe0(%rbp),%r12
000000000000dbe2	movq	0xe8(%rbp),%r13
000000000000dbe6	movq	0xf0(%rbp),%r14
000000000000dbea	movq	0xf8(%rbp),%r15
000000000000dbee	leave
000000000000dbef	ret
__ZN21AppleIntelFramebuffer25getAttributeForConnectionEijPm:
000000000000dbf0	pushq	%rbp
000000000000dbf1	movq	%rsp,%rbp
000000000000dbf4	subq	$0x30,%rsp
000000000000dbf8	movq	%rbx,0xd8(%rbp)
000000000000dbfc	movq	%r12,0xe0(%rbp)
000000000000dc00	movq	%r13,0xe8(%rbp)
000000000000dc04	movq	%r14,0xf0(%rbp)
000000000000dc08	movq	%r15,0xf8(%rbp)
000000000000dc0c	movq	%rdi,%r13
000000000000dc0f	movl	%esi,%r14d
000000000000dc12	movl	%edx,%ebx
000000000000dc14	movq	%rcx,%r12
000000000000dc17	movq	0x000071b2(%rip),%r15
000000000000dc1e	movl	(%r15),%eax
000000000000dc21	testl	%eax,%eax
000000000000dc23	je	0x0000dc3d
000000000000dc25	movl	%edx,%edx
000000000000dc27	movl	0x000001d8(%rdi),%esi
000000000000dc2d	xorl	%r9d,%r9d
000000000000dc30	xorl	%r8d,%r8d
000000000000dc33	movl	$0x06128421,%edi
000000000000dc38	callq	0x0000dc3d
000000000000dc3d	cmpl	$0x63686e67,%ebx
000000000000dc43	je	0x0000dd7d
000000000000dc49	ja	0x0000dcc8
000000000000dc4b	cmpl	$0x61756d73,%ebx
000000000000dc51	je	0x0000df7b
000000000000dc57	ja	0x0000dc8c
000000000000dc59	cmpl	$0x00617577,%ebx
000000000000dc5f	je	0x0000df7b
000000000000dc65	ja	0x0000dc7b
000000000000dc67	leal	0xff9e8a8e(%rbx),%eax
000000000000dc6d	cmpl	$0x01,%eax
000000000000dc70	ja	0x0000dfb2
000000000000dc76	jmp	0x0000df7b
000000000000dc7b	cmpl	$0x00696772,%ebx
000000000000dc81	jne	0x0000dfb2
000000000000dc87	jmp	0x0000dd4e
000000000000dc8c	cmpl	$0x61757068,%ebx
000000000000dc92	je	0x0000df7b
000000000000dc98	ja	0x0000dcab
000000000000dc9a	cmpl	$0x61757063,%ebx
000000000000dca0	jne	0x0000dfb2
000000000000dca6	jmp	0x0000df7b
000000000000dcab	cmpl	$0x61757070,%ebx
000000000000dcb1	je	0x0000df7b
000000000000dcb7	cmpl	$0x626b6c74,%ebx
000000000000dcbd	jne	0x0000dfb2
000000000000dcc3	jmp	0x0000df36
000000000000dcc8	cmpl	$0x7061726d,%ebx
000000000000dcce	je	0x0000deac
000000000000dcd4	ja	0x0000dd06
000000000000dcd6	cmpl	$0x666c6773,%ebx
000000000000dcdc	je	0x0000defc
000000000000dce2	ja	0x0000dcf2
000000000000dce4	cmpl	$0x656e6162,%ebx
000000000000dcea	jne	0x0000dfb2
000000000000dcf0	jmp	0x0000dd6c
000000000000dcf2	cmpl	$0x68646463,%ebx
000000000000dcf8	je	0x0000dfd7
000000000000dcfe	cmpl	$0x6f73636e,%ebx
000000000000dd04	jmp	0x0000dd43
000000000000dd06	cmpl	$0x7073636e,%ebx
000000000000dd0c	je	0x0000dfcf
000000000000dd12	ja	0x0000dd31
000000000000dd14	cmpl	$0x70636e74,%ebx
000000000000dd1a	je	0x0000de61
000000000000dd20	cmpl	$0x706e6c74,%ebx
000000000000dd26	jne	0x0000dfb2
000000000000dd2c	jmp	0x0000df8f
000000000000dd31	cmpl	$0x7077616b,%ebx
000000000000dd37	je	0x0000dfd7
000000000000dd3d	cmpl	$0x76627374,%ebx
000000000000dd43	jne	0x0000dfb2
000000000000dd49	jmp	0x0000dfcf
000000000000dd4e	movl	0x00000498(%r13),%eax
000000000000dd55	movq	%rax,(%r12)
000000000000dd59	movq	$0x00000000,0x08(%r12)
000000000000dd62	movl	$0xffffffff,%eax
000000000000dd67	jmp	0x0000df74
000000000000dd6c	movzbl	0x0000020d(%rbp),%eax
000000000000dd74	movq	%rax,(%r12)
000000000000dd78	jmp	0x0000dfd7
000000000000dd7d	testq	%r12,%r12
000000000000dd80	je	0x0000de31
000000000000dd86	cmpb	$0x00,0x0000020e(%r13)
000000000000dd8e	jne	0x0000dd9f
000000000000dd90	xorl	%edx,%edx
000000000000dd92	movl	$0x00000001,%esi
000000000000dd97	movq	%r13,%rdi
000000000000dd9a	callq	0x10000d7b6
000000000000dd9f	movq	%r12,%rsi
000000000000dda2	movq	%r13,%rdi
000000000000dda5	callq	0x100006d34
000000000000ddaa	movl	%eax,%r14d
000000000000ddad	cmpb	$0x00,0x0000020d(%r13)
000000000000ddb5	jne	0x0000dfda
000000000000ddbb	cmpl	$0x03,0x00000210(%r13)
000000000000ddc3	je	0x0000dfda
000000000000ddc9	movq	0x000001d0(%r13),%rcx
000000000000ddd0	movl	0x00000194(%rcx),%edx
000000000000ddd6	cmpl	$0x01,%edx
000000000000ddd9	jle	0x0000ddee
000000000000dddb	movl	0x00000600(%rcx),%eax
000000000000dde1	testl	%eax,%eax
000000000000dde3	je	0x0000ddee
000000000000dde5	movzbl	0x00000190(%rcx),%eax
000000000000ddec	jmp	0x0000ddf0
000000000000ddee	xorl	%eax,%eax
000000000000ddf0	xorl	%edi,%edi
000000000000ddf2	cmpl	%edx,%eax
000000000000ddf4	jae	0x0000de03
000000000000ddf6	subl	%eax,%edx
000000000000ddf8	leal	0xff(%rdx),%eax
000000000000ddfb	movq	0x00000198(%rcx,%rax,8),%rdi
000000000000de03	cmpl	$0x03,0x00000210(%rdi)
000000000000de0a	jne	0x0000dfda
000000000000de10	cmpb	$0x00,0x0000020d(%rdi)
000000000000de17	jne	0x0000dfda
000000000000de1d	movl	$0x00000001,%edx
000000000000de22	movl	$0x00000001,%esi
000000000000de27	callq	0x10000d7b6
000000000000de2c	jmp	0x0000dfda
000000000000de31	cmpb	$0x00,0x000004bc(%r13)
000000000000de39	je	0x0000dfd7
000000000000de3f	movl	$0x00000001,%edx
000000000000de44	movl	$0x00000001,%esi
000000000000de49	movq	%r13,%rdi
000000000000de4c	callq	0x10000d7b6
000000000000de51	movl	%eax,%r14d
000000000000de54	movb	$0x00,0x000004bc(%r13)
000000000000de5c	jmp	0x0000dfda
000000000000de61	movq	%r12,%rcx
000000000000de64	movl	$0x70636e74,%edx
000000000000de69	movl	%r14d,%esi
000000000000de6c	movq	%r13,%rdi
000000000000de6f	movq	0x00006f9a(%rip),%rax
000000000000de76	call	*0x00000a70(%rax)
000000000000de7c	movl	%eax,%r14d
000000000000de7f	movq	(%r12),%rdx
000000000000de83	leaq	0x04(%rdx),%rax
000000000000de87	movq	%rax,(%r12)
000000000000de8b	movq	0x000001d0(%r13),%rax
000000000000de92	cmpb	$0x00,0x00000180(%rax)
000000000000de99	je	0x0000dfda
000000000000de9f	leaq	0x05(%rdx),%rax
000000000000dea3	movq	%rax,(%r12)
000000000000dea7	jmp	0x0000dfda
000000000000deac	movq	$0x6f73636e,(%r12)
000000000000deb4	leaq	0x08(%r12),%rdx
000000000000deb9	movq	0x000001d0(%r13),%rax
000000000000dec0	cmpb	$0x00,0x00000180(%rax)
000000000000dec7	je	0x0000ded7
000000000000dec9	movq	$0x626b6c74,0x08(%r12)
000000000000ded2	leaq	0x10(%r12),%rdx
000000000000ded7	movq	$0x76627374,(%rdx)
000000000000dede	movq	$0x00696772,0x08(%rdx)
000000000000dee6	movq	$0x7073636e,0x10(%rdx)
000000000000deee	leaq	0x18(%rdx),%rcx
000000000000def2	movl	$0x7061726d,%edx
000000000000def7	jmp	0x0000dfb7
000000000000defc	movq	0x000001d0(%r13),%rdx
000000000000df03	movzbl	0x00000190(%rdx),%eax
000000000000df0a	cmpl	%eax,0x000001d8(%r13)
000000000000df11	jne	0x0000df29
000000000000df13	cmpb	$0x00,0x00000192(%rdx)
000000000000df1a	je	0x0000df29
000000000000df1c	movq	$0x00000800,(%r12)
000000000000df24	jmp	0x0000dfd7
000000000000df29	movq	$0x00000000,(%r12)
000000000000df31	jmp	0x0000dfd7
000000000000df36	movq	0x000001d0(%r13),%rax
000000000000df3d	cmpb	$0x00,0x00000180(%rax)
000000000000df44	je	0x0000dfcf
000000000000df4a	testb	$0x03,0x00000210(%r13)
000000000000df52	je	0x0000dfcf
000000000000df54	movl	0x00000604(%rax),%eax
000000000000df5a	movq	%rax,(%r12)
000000000000df5e	movq	$0x00000000,0x08(%r12)
000000000000df67	movq	0x000001d0(%r13),%rax
000000000000df6e	movl	0x00000608(%rax),%eax
000000000000df74	movq	%rax,0x10(%r12)
000000000000df79	jmp	0x0000dfd7
000000000000df7b	movq	0x00(%r13),%rax
000000000000df7f	movq	%r12,%rdx
000000000000df82	movl	%ebx,%esi
000000000000df84	movq	%r13,%rdi
000000000000df87	call	*0x00000af8(%rax)
000000000000df8d	jmp	0x0000dfca
000000000000df8f	movq	0x000001d0(%r13),%rdx
000000000000df96	movzbl	0x00000190(%rdx),%eax
000000000000df9d	cmpl	%eax,0x000001d8(%r13)
000000000000dfa4	jne	0x0000dfcf
000000000000dfa6	movl	0x00000158(%rdx),%edx
000000000000dfac	movq	%rdx,(%r12)
000000000000dfb0	jmp	0x0000dfd7
000000000000dfb2	movq	%r12,%rcx
000000000000dfb5	movl	%ebx,%edx
000000000000dfb7	movl	%r14d,%esi
000000000000dfba	movq	%r13,%rdi
000000000000dfbd	movq	0x00006e4c(%rip),%rax
000000000000dfc4	call	*0x00000a70(%rax)
000000000000dfca	movl	%eax,%r14d
000000000000dfcd	jmp	0x0000dfda
000000000000dfcf	movl	$0xe00002c7,%r14d
000000000000dfd5	jmp	0x0000dfda
000000000000dfd7	xorl	%r14d,%r14d
000000000000dfda	movl	(%r15),%eax
000000000000dfdd	testl	%eax,%eax
000000000000dfdf	je	0x0000e008
000000000000dfe1	xorl	%eax,%eax
000000000000dfe3	testq	%r12,%r12
000000000000dfe6	je	0x0000dfec
000000000000dfe8	movq	(%r12),%rax
000000000000dfec	movslq	%r14d,%rcx
000000000000dfef	movl	%ebx,%edx
000000000000dff1	movl	0x000001d8(%r13),%esi
000000000000dff8	xorl	%r9d,%r9d
000000000000dffb	movq	%rax,%r8
000000000000dffe	movl	$0x06128422,%edi
000000000000e003	callq	0x0000e008
000000000000e008	movl	%r14d,%eax
000000000000e00b	movq	0xd8(%rbp),%rbx
000000000000e00f	movq	0xe0(%rbp),%r12
000000000000e013	movq	0xe8(%rbp),%r13
000000000000e017	movq	0xf0(%rbp),%r14
000000000000e01b	movq	0xf8(%rbp),%r15
000000000000e01f	leave
000000000000e020	ret
000000000000e021	nop
__ZN21AppleIntelFramebuffer16enableControllerEv:
000000000000e022	pushq	%rbp
000000000000e023	movq	%rsp,%rbp
000000000000e026	pushq	%r13
000000000000e028	pushq	%r12
000000000000e02a	pushq	%rbx
000000000000e02b	subq	$0x08,%rsp
000000000000e02f	movq	%rdi,%rbx
000000000000e032	movl	0x000001d8(%rdi),%eax
000000000000e038	testl	%eax,%eax
000000000000e03a	jne	0x0000e0ed
000000000000e040	movq	0x00006d99(%rip),%rax
000000000000e047	movq	(%rax),%r12
000000000000e04a	movq	(%rdi),%rax
000000000000e04d	movq	0x00006dec(%rip),%r13
000000000000e054	movq	0x00(%r13),%rsi
000000000000e058	call	*0x00000318(%rax)
000000000000e05e	movq	%rax,%rdi
000000000000e061	movq	(%rax),%rax
000000000000e064	leaq	0x00003fbe(%rip),%rsi
000000000000e06b	call	*0x000002b8(%rax)
000000000000e071	movq	%rax,%rdi
000000000000e074	movq	%r12,%rsi
000000000000e077	callq	0x0000e07c
000000000000e07c	movq	%rax,%rdx
000000000000e07f	testq	%rax,%rax
000000000000e082	je	0x0000e09d
000000000000e084	movq	(%rax),%rax
000000000000e087	movq	%rdx,%rdi
000000000000e08a	call	*0x00000178(%rax)
000000000000e090	movl	(%rax),%eax
000000000000e092	andl	$0x7fffffff,%eax
000000000000e097	movl	%eax,0x00000498(%rbx)
000000000000e09d	movq	(%rbx),%rax
000000000000e0a0	movq	0x00(%r13),%rsi
000000000000e0a4	movq	%rbx,%rdi
000000000000e0a7	call	*0x00000318(%rax)
000000000000e0ad	movq	%rax,%rdi
000000000000e0b0	movq	(%rax),%rax
000000000000e0b3	leaq	0x00003f87(%rip),%rsi
000000000000e0ba	call	*0x000002b8(%rax)
000000000000e0c0	movq	%rax,%rdi
000000000000e0c3	movq	%r12,%rsi
000000000000e0c6	callq	0x0000e0cb
000000000000e0cb	testq	%rax,%rax
000000000000e0ce	jne	0x0000e18f
000000000000e0d4	movq	0x00006505(%rip),%rax
000000000000e0db	testq	%rax,%rax
000000000000e0de	je	0x0000e19d
000000000000e0e4	cmpb	$0x00,0x7c(%rax)
000000000000e0e8	jmp	0x0000e18d
000000000000e0ed	movq	0x00006cec(%rip),%rax
000000000000e0f4	movq	(%rax),%r12
000000000000e0f7	movq	(%rdi),%rax
000000000000e0fa	movq	0x00006d3f(%rip),%r13
000000000000e101	movq	0x00(%r13),%rsi
000000000000e105	call	*0x00000318(%rax)
000000000000e10b	movq	%rax,%rdi
000000000000e10e	movq	(%rax),%rax
000000000000e111	leaq	0x00003f45(%rip),%rsi
000000000000e118	call	*0x000002b8(%rax)
000000000000e11e	movq	%rax,%rdi
000000000000e121	movq	%r12,%rsi
000000000000e124	callq	0x0000e129
000000000000e129	movq	%rax,%rdx
000000000000e12c	testq	%rax,%rax
000000000000e12f	je	0x0000e14a
000000000000e131	movq	(%rax),%rax
000000000000e134	movq	%rdx,%rdi
000000000000e137	call	*0x00000178(%rax)
000000000000e13d	movl	(%rax),%eax
000000000000e13f	andl	$0x7fffffff,%eax
000000000000e144	movl	%eax,0x00000498(%rbx)
000000000000e14a	movq	(%rbx),%rax
000000000000e14d	movq	0x00(%r13),%rsi
000000000000e151	movq	%rbx,%rdi
000000000000e154	call	*0x00000318(%rax)
000000000000e15a	movq	%rax,%rdi
000000000000e15d	movq	(%rax),%rax
000000000000e160	leaq	0x00003f0e(%rip),%rsi
000000000000e167	call	*0x000002b8(%rax)
000000000000e16d	movq	%rax,%rdi
000000000000e170	movq	%r12,%rsi
000000000000e173	callq	0x0000e178
000000000000e178	testq	%rax,%rax
000000000000e17b	jne	0x0000e18f
000000000000e17d	movq	0x0000645c(%rip),%rax
000000000000e184	testq	%rax,%rax
000000000000e187	je	0x0000e19d
000000000000e189	cmpb	$0x00,0x7d(%rax)
000000000000e18d	je	0x0000e19d
000000000000e18f	movq	0x000001d0(%rbx),%rax
000000000000e196	movb	$0x01,0x000004c1(%rax)
000000000000e19d	movl	0x000001d8(%rbx),%ecx
000000000000e1a3	movq	0x000001d0(%rbx),%rdx
000000000000e1aa	movzbl	0x00000190(%rdx),%eax
000000000000e1b1	cmpl	%eax,%ecx
000000000000e1b3	jne	0x0000e1ca
000000000000e1b5	cmpb	$0x00,0x00000192(%rdx)
000000000000e1bc	je	0x0000e1ca
000000000000e1be	movl	$0x00000003,0x00000210(%rbx)
000000000000e1c8	jmp	0x0000e214
000000000000e1ca	cmpw	$0x00,0x00000192(%rdx)
000000000000e1d2	je	0x0000e1dd
000000000000e1d4	movb	$0x00,0x0000020d(%rbx)
000000000000e1db	jmp	0x0000e214
000000000000e1dd	movzbl	0x00000191(%rdx),%eax
000000000000e1e4	cmpl	%eax,%ecx
000000000000e1e6	jne	0x0000e1fb
000000000000e1e8	movb	$0x00,0x0000020d(%rbx)
000000000000e1ef	movl	$0x00000002,0x00000210(%rbx)
000000000000e1f9	jmp	0x0000e214
000000000000e1fb	movl	0x00000388(%rdx),%eax
000000000000e201	shrl	$0x1f,%eax
000000000000e204	movb	%al,0x0000020d(%rbx)
000000000000e20a	movl	$0x00000001,0x00000210(%rbx)
000000000000e214	movb	$0x00,0x0000020e(%rbx)
000000000000e21b	movb	$0x00,0x0000020d(%rbx)
000000000000e222	movl	$0x00000001,%edx
000000000000e227	movl	$0x00000001,%esi
000000000000e22c	movq	%rbx,%rdi
000000000000e22f	callq	0x10000d7b6
000000000000e234	movb	$0x00,0x0000020e(%rbx)
000000000000e23b	cmpq	$0x00,0x00000488(%rbx)
000000000000e243	je	0x0000e284
000000000000e245	cmpb	$0x00,0x0000020d(%rbx)
000000000000e24c	je	0x0000e284
000000000000e24e	movl	0x000003e8(%rbx),%eax
000000000000e254	testl	%eax,%eax
000000000000e256	je	0x0000e284
000000000000e258	cmpl	$0x01,%eax
000000000000e25b	je	0x0000e27d
000000000000e25d	testb	$0xf0,%al
000000000000e25f	jne	0x0000e27d
000000000000e261	leaq	0x00000218(%rbx),%rsi
000000000000e268	leaq	0x000003ec(%rbx),%rdi
000000000000e26f	movl	$0x00000080,%edx
000000000000e274	callq	0x0000e279
000000000000e279	testl	%eax,%eax
000000000000e27b	jne	0x0000e284
000000000000e27d	movb	$0x01,0x00000470(%rbx)
000000000000e284	movq	(%rbx),%rax
000000000000e287	movl	$0x00000020,%ecx
000000000000e28c	movl	$0x00000008,%edx
000000000000e291	leaq	0x00003df9(%rip),%rsi
000000000000e298	movq	%rbx,%rdi
000000000000e29b	call	*0x00000280(%rax)
000000000000e2a1	movq	(%rbx),%rax
000000000000e2a4	movl	$0x00000020,%ecx
000000000000e2a9	movl	$0x00000100,%edx
000000000000e2ae	leaq	0x00003deb(%rip),%rsi
000000000000e2b5	movq	%rbx,%rdi
000000000000e2b8	call	*0x00000280(%rax)
000000000000e2be	movzbl	0x0000020d(%rbx),%eax
000000000000e2c5	cmpb	$0x01,%al
000000000000e2c7	sbbl	%eax,%eax
000000000000e2c9	andl	$0x00000105,%eax
000000000000e2ce	subl	$0x05,%eax
000000000000e2d1	movl	%eax,0x000001dc(%rbx)
000000000000e2d7	testb	$0xf0,0x000003e8(%rbx)
000000000000e2de	je	0x0000e2f3
000000000000e2e0	movl	0x0000046c(%rbx),%eax
000000000000e2e6	cmpl	$0x00,%eax
000000000000e2e9	je	0x0000e2f3
000000000000e2eb	jl	0x0000e2f3
000000000000e2ed	movl	%eax,0x000001dc(%rbx)
000000000000e2f3	movl	$0x00000000,0x000001e0(%rbx)
000000000000e2fd	movq	0x000001d0(%rbx),%rdi
000000000000e304	callq	0x100003054
000000000000e309	movq	0x000001d0(%rbx),%rax
000000000000e310	movq	0x00000610(%rax),%rdi
000000000000e317	testq	%rdi,%rdi
000000000000e31a	je	0x0000e32c
000000000000e31c	movq	(%rdi),%rax
000000000000e31f	call	*0x00000150(%rax)
000000000000e325	movq	0x000001d0(%rbx),%rax
000000000000e32c	movq	0x00000440(%rax),%rdi
000000000000e333	testq	%rdi,%rdi
000000000000e336	je	0x0000e341
000000000000e338	movq	(%rdi),%rax
000000000000e33b	call	*0x00000150(%rax)
000000000000e341	movq	%rbx,%rdi
000000000000e344	callq	0x0000f63e
000000000000e349	xorl	%ecx,%ecx
000000000000e34b	movl	0x000001d8(%rbx),%eax
000000000000e351	cmpl	$0x01,%eax
000000000000e354	sbbl	%eax,%eax
000000000000e356	andl	$0xfffff800,%eax
000000000000e35b	movq	0x000001d0(%rbx),%rdx
000000000000e362	leal	0x0004a800(%rax,%rcx,4),%eax
000000000000e369	cdqe
000000000000e36b	addq	0x00000098(%rdx),%rax
000000000000e372	movl	$0x00bfbfbf,(%rax)
000000000000e378	incl	%ecx
000000000000e37a	cmpl	$0x00000100,%ecx
000000000000e380	jne	0x0000e34b
000000000000e382	movq	(%rbx),%rax
000000000000e385	movl	0x000001e0(%rbx),%edx
000000000000e38b	movl	0x000001dc(%rbx),%esi
000000000000e391	movq	%rbx,%rdi
000000000000e394	call	*0x000009f8(%rax)
000000000000e39a	movl	$0x0000000a,%edi
000000000000e39f	callq	0x0000e3a4
000000000000e3a4	movq	0x000001d0(%rbx),%rdx
000000000000e3ab	cmpb	$0x00,0x000004c0(%rdx)
000000000000e3b2	je	0x0000e3ce
000000000000e3b4	movl	0x000001d8(%rbx),%eax
000000000000e3ba	imulq	$0x000000f0,%rax,%rax
000000000000e3c1	orl	$0x40000000,0x000001e4(%rdx,%rax)
000000000000e3cc	jmp	0x0000e3e6
000000000000e3ce	movl	0x000001d8(%rbx),%eax
000000000000e3d4	imulq	$0x000000f0,%rax,%rax
000000000000e3db	andl	$0xbfffffff,0x000001e4(%rdx,%rax)
000000000000e3e6	movq	0x000001d0(%rbx),%rcx
000000000000e3ed	movl	0x000001d8(%rbx),%edx
000000000000e3f3	movl	%edx,%eax
000000000000e3f5	imulq	$0x000000f0,%rax,%rax
000000000000e3fc	movl	0x000001e4(%rcx,%rax),%esi
000000000000e403	cmpl	$0x01,%edx
000000000000e406	sbbq	%rdx,%rdx
000000000000e409	andq	$0xfffff000,%rdx
000000000000e410	movq	0x00000098(%rcx),%rax
000000000000e417	leaq	0x00071180(%rax,%rdx),%rax
000000000000e41f	movl	%esi,(%rax)
000000000000e421	movq	0x000001d0(%rbx),%rcx
000000000000e428	movl	0x000001d8(%rbx),%edx
000000000000e42e	movl	%edx,%eax
000000000000e430	imulq	$0x000000f0,%rax,%rax
000000000000e437	movl	0x000001f4(%rcx,%rax),%esi
000000000000e43e	cmpl	$0x01,%edx
000000000000e441	sbbq	%rdx,%rdx
000000000000e444	andq	$0xfffff000,%rdx
000000000000e44b	movq	0x00000098(%rcx),%rax
000000000000e452	leaq	0x0007119c(%rax,%rdx),%rax
000000000000e45a	movl	%esi,(%rax)
000000000000e45c	movb	$0x01,0x0000020c(%rbx)
000000000000e463	xorl	%eax,%eax
000000000000e465	addq	$0x08,%rsp
000000000000e469	popq	%rbx
000000000000e46a	popq	%r12
000000000000e46c	popq	%r13
000000000000e46e	leave
000000000000e46f	ret
__ZN21AppleIntelFramebuffer11getDDCBlockEijjjPhPy:
000000000000e470	pushq	%rbp
000000000000e471	movq	%rsp,%rbp
000000000000e474	pushq	%r15
000000000000e476	pushq	%r14
000000000000e478	pushq	%r13
000000000000e47a	pushq	%r12
000000000000e47c	pushq	%rbx
000000000000e47d	subq	$0x00000098,%rsp
000000000000e484	movq	%rdi,%r15
000000000000e487	movl	%esi,0xffffff4c(%rbp)
000000000000e48d	movl	%edx,0xffffff48(%rbp)
000000000000e493	movq	%r9,%rbx
000000000000e496	movq	0x00006933(%rip),%rdx
000000000000e49d	movl	(%rdx),%edi
000000000000e49f	testl	%edi,%edi
000000000000e4a1	je	0x0000e4be
000000000000e4a3	movl	%ecx,%ecx
000000000000e4a5	movl	0xffffff48(%rbp),%edx
000000000000e4ab	movslq	%esi,%rsi
000000000000e4ae	xorl	%r9d,%r9d
000000000000e4b1	movl	%r8d,%r8d
000000000000e4b4	movl	$0x061284a1,%edi
000000000000e4b9	callq	0x0000e4be
000000000000e4be	xorl	%esi,%esi
000000000000e4c0	movq	%r15,%rdi
000000000000e4c3	callq	0x100008310
000000000000e4c8	movl	0x000001d8(%r15),%ecx
000000000000e4cf	movq	0x000001d0(%r15),%rdx
000000000000e4d6	movzbl	0x00000190(%rdx),%eax
000000000000e4dd	cmpl	%eax,%ecx
000000000000e4df	jne	0x0000e4ef
000000000000e4e1	testb	$0x02,0x00000498(%r15)
000000000000e4e9	jne	0x0000e7f7
000000000000e4ef	movzbl	0x00000191(%rdx),%eax
000000000000e4f6	cmpl	%eax,%ecx
000000000000e4f8	jne	0x0000e50b
000000000000e4fa	testl	$0x000001fc,0x00000498(%r15)
000000000000e505	jne	0x0000e7f7
000000000000e50b	leaq	0xffffff50(%rbp),%rax
000000000000e512	movq	%rax,0xffffff40(%rbp)
000000000000e519	movl	$0x0000007c,%edx
000000000000e51e	xorl	%esi,%esi
000000000000e520	movq	%rax,%rdi
000000000000e523	callq	0x0000e528
000000000000e528	cmpq	$0x00,0x10(%rbp)
000000000000e52d	je	0x0000e53a
000000000000e52f	movq	0x10(%rbp),%rdx
000000000000e533	movq	$0x00000080,(%rdx)
000000000000e53a	movl	$0x00000002,0xffffff70(%rbp)
000000000000e544	movl	$0x00000000,0xffffff50(%rbp)
000000000000e54e	movl	$0x000000a0,0xffffff5c(%rbp)
000000000000e558	movl	0xffffff48(%rbp),%eax
000000000000e55e	shll	$0x07,%eax
000000000000e561	addl	$0x80,%eax
000000000000e564	movb	%al,0xffffff61(%rbp)
000000000000e56a	movl	$0x00000001,0xffffff54(%rbp)
000000000000e574	movq	%rbx,0x9c(%rbp)
000000000000e578	xorl	%r12d,%r12d
000000000000e57b	xorl	%r14d,%r14d
000000000000e57e	movl	$0x00000001,0xffffff78(%rbp)
000000000000e588	movq	0x10(%rbp),%rdx
000000000000e58c	movq	(%rdx),%rax
000000000000e58f	movl	%eax,0x88(%rbp)
000000000000e592	movq	(%r15),%rax
000000000000e595	movq	0xffffff40(%rbp),%rcx
000000000000e59c	xorl	%edx,%edx
000000000000e59e	movl	0xffffff4c(%rbp),%esi
000000000000e5a4	movq	%r15,%rdi
000000000000e5a7	call	*0x00000878(%rax)
000000000000e5ad	movl	%eax,%r13d
000000000000e5b0	cmpl	$0xe00002ed,%eax
000000000000e5b5	jne	0x0000e5bc
000000000000e5b7	incl	%r14d
000000000000e5ba	jmp	0x0000e5e3
000000000000e5bc	testl	%eax,%eax
000000000000e5be	jne	0x0000e5f9
000000000000e5c0	movzbl	(%rbx),%edx
000000000000e5c3	movl	$0x00000001,%eax
000000000000e5c8	addb	(%rax,%rbx),%dl
000000000000e5cb	incq	%rax
000000000000e5ce	cmpq	$0x00000080,%eax
000000000000e5d4	jne	0x0000e5c8
000000000000e5d6	testb	%dl,%dl
000000000000e5d8	je	0x0000e5f9
000000000000e5da	incl	%r12d
000000000000e5dd	movl	$0xe00002e5,%r13d
000000000000e5e3	movl	$0x00000005,%edi
000000000000e5e8	callq	0x0000e5ed
000000000000e5ed	cmpl	$0x04,%r14d
000000000000e5f1	ja	0x0000e5f9
000000000000e5f3	cmpl	$0x04,%r12d
000000000000e5f7	jbe	0x0000e57e
000000000000e5f9	movq	0x00005fe0(%rip),%rax
000000000000e600	testq	%rax,%rax
000000000000e603	je	0x0000e7fd
000000000000e609	cmpl	$0x01,0xffffff48(%rbp)
000000000000e610	jne	0x0000e7fd
000000000000e616	movl	0x000001d8(%r15),%ecx
000000000000e61d	testl	%ecx,%ecx
000000000000e61f	jne	0x0000e710
000000000000e625	testl	%r13d,%r13d
000000000000e628	jne	0x0000e6fc
000000000000e62e	movq	0x20(%rax),%rdi
000000000000e632	testq	%rdi,%rdi
000000000000e635	je	0x0000e66e
000000000000e637	cmpb	$0x00,(%rbx)
000000000000e63a	jne	0x0000e66e
000000000000e63c	cmpb	$0xff,0x01(%rbx)
000000000000e640	jne	0x0000e66e
000000000000e642	cmpb	$0xff,0x02(%rbx)
000000000000e646	jne	0x0000e66e
000000000000e648	cmpb	$0xff,0x03(%rbx)
000000000000e64c	jne	0x0000e66e
000000000000e64e	cmpb	$0xff,0x04(%rbx)
000000000000e652	jne	0x0000e66e
000000000000e654	cmpb	$0xff,0x05(%rbx)
000000000000e658	jne	0x0000e66e
000000000000e65a	cmpb	$0xff,0x06(%rbx)
000000000000e65e	jne	0x0000e66e
000000000000e660	cmpb	$0x00,0x07(%rbx)
000000000000e664	jne	0x0000e66e
000000000000e666	movl	0x28(%rax),%edx
000000000000e669	jmp	0x0000e7d4
000000000000e66e	movq	0x60(%rax),%rdi
000000000000e672	testq	%rdi,%rdi
000000000000e675	je	0x0000e6b4
000000000000e677	cmpb	$0x00,(%rbx)
000000000000e67a	jne	0x0000e6b4
000000000000e67c	cmpb	$0xff,0x01(%rbx)
000000000000e680	jne	0x0000e6b4
000000000000e682	cmpb	$0xff,0x02(%rbx)
000000000000e686	jne	0x0000e6b4
000000000000e688	cmpb	$0xff,0x03(%rbx)
000000000000e68c	jne	0x0000e6b4
000000000000e68e	cmpb	$0xff,0x04(%rbx)
000000000000e692	jne	0x0000e6b4
000000000000e694	cmpb	$0xff,0x05(%rbx)
000000000000e698	jne	0x0000e6b4
000000000000e69a	cmpb	$0xff,0x06(%rbx)
000000000000e69e	jne	0x0000e6b4
000000000000e6a0	cmpb	$0x00,0x07(%rbx)
000000000000e6a4	je	0x0000e823
000000000000e6aa	jmp	0x0000e6b4
000000000000e6ac	movl	0x68(%rax),%edx
000000000000e6af	jmp	0x0000e7d4
000000000000e6b4	movq	0x40(%rax),%rdi
000000000000e6b8	testq	%rdi,%rdi
000000000000e6bb	je	0x0000e7fd
000000000000e6c1	cmpb	$0x00,(%rbx)
000000000000e6c4	jne	0x0000e6f4
000000000000e6c6	cmpb	$0xff,0x01(%rbx)
000000000000e6ca	jne	0x0000e6f4
000000000000e6cc	cmpb	$0xff,0x02(%rbx)
000000000000e6d0	jne	0x0000e6f4
000000000000e6d2	cmpb	$0xff,0x03(%rbx)
000000000000e6d6	jne	0x0000e6f4
000000000000e6d8	cmpb	$0xff,0x04(%rbx)
000000000000e6dc	jne	0x0000e6f4
000000000000e6de	cmpb	$0xff,0x05(%rbx)
000000000000e6e2	jne	0x0000e6f4
000000000000e6e4	cmpb	$0xff,0x06(%rbx)
000000000000e6e8	jne	0x0000e6f4
000000000000e6ea	cmpb	$0x00,0x07(%rbx)
000000000000e6ee	je	0x0000e7fd
000000000000e6f4	movl	0x48(%rax),%edx
000000000000e6f7	jmp	0x0000e7d4
000000000000e6fc	movq	(%rax),%rdi
000000000000e6ff	testq	%rdi,%rdi
000000000000e702	je	0x0000e7fd
000000000000e708	movl	0x08(%rax),%edx
000000000000e70b	jmp	0x0000e7ea
000000000000e710	testl	%r13d,%r13d
000000000000e713	jne	0x0000e7de
000000000000e719	movq	0x30(%rax),%rdi
000000000000e71d	testq	%rdi,%rdi
000000000000e720	je	0x0000e756
000000000000e722	cmpb	$0x00,(%rbx)
000000000000e725	jne	0x0000e756
000000000000e727	cmpb	$0xff,0x01(%rbx)
000000000000e72b	jne	0x0000e756
000000000000e72d	cmpb	$0xff,0x02(%rbx)
000000000000e731	jne	0x0000e756
000000000000e733	cmpb	$0xff,0x03(%rbx)
000000000000e737	jne	0x0000e756
000000000000e739	cmpb	$0xff,0x04(%rbx)
000000000000e73d	jne	0x0000e756
000000000000e73f	cmpb	$0xff,0x05(%rbx)
000000000000e743	jne	0x0000e756
000000000000e745	cmpb	$0xff,0x06(%rbx)
000000000000e749	jne	0x0000e756
000000000000e74b	cmpb	$0x00,0x07(%rbx)
000000000000e74f	jne	0x0000e756
000000000000e751	movl	0x38(%rax),%edx
000000000000e754	jmp	0x0000e7d4
000000000000e756	movq	0x70(%rax),%rdi
000000000000e75a	testq	%rdi,%rdi
000000000000e75d	je	0x0000e799
000000000000e75f	cmpb	$0x00,(%rbx)
000000000000e762	jne	0x0000e799
000000000000e764	cmpb	$0xff,0x01(%rbx)
000000000000e768	jne	0x0000e799
000000000000e76a	cmpb	$0xff,0x02(%rbx)
000000000000e76e	jne	0x0000e799
000000000000e770	cmpb	$0xff,0x03(%rbx)
000000000000e774	jne	0x0000e799
000000000000e776	cmpb	$0xff,0x04(%rbx)
000000000000e77a	jne	0x0000e799
000000000000e77c	cmpb	$0xff,0x05(%rbx)
000000000000e780	jne	0x0000e799
000000000000e782	cmpb	$0xff,0x06(%rbx)
000000000000e786	jne	0x0000e799
000000000000e788	cmpb	$0x00,0x07(%rbx)
000000000000e78c	je	0x0000e832
000000000000e792	jmp	0x0000e799
000000000000e794	movl	0x78(%rax),%edx
000000000000e797	jmp	0x0000e7d4
000000000000e799	movq	0x50(%rax),%rdi
000000000000e79d	testq	%rdi,%rdi
000000000000e7a0	je	0x0000e7fd
000000000000e7a2	cmpb	$0x00,(%rbx)
000000000000e7a5	jne	0x0000e7d1
000000000000e7a7	cmpb	$0xff,0x01(%rbx)
000000000000e7ab	jne	0x0000e7d1
000000000000e7ad	cmpb	$0xff,0x02(%rbx)
000000000000e7b1	jne	0x0000e7d1
000000000000e7b3	cmpb	$0xff,0x03(%rbx)
000000000000e7b7	jne	0x0000e7d1
000000000000e7b9	cmpb	$0xff,0x04(%rbx)
000000000000e7bd	jne	0x0000e7d1
000000000000e7bf	cmpb	$0xff,0x05(%rbx)
000000000000e7c3	jne	0x0000e7d1
000000000000e7c5	cmpb	$0xff,0x06(%rbx)
000000000000e7c9	jne	0x0000e7d1
000000000000e7cb	cmpb	$0x00,0x07(%rbx)
000000000000e7cf	je	0x0000e7fd
000000000000e7d1	movl	0x58(%rax),%edx
000000000000e7d4	movq	%rbx,%rsi
000000000000e7d7	callq	0x0000e7dc
000000000000e7dc	jmp	0x0000e7fd
000000000000e7de	movq	0x10(%rax),%rdi
000000000000e7e2	testq	%rdi,%rdi
000000000000e7e5	je	0x0000e7fd
000000000000e7e7	movl	0x18(%rax),%edx
000000000000e7ea	movq	%rbx,%rsi
000000000000e7ed	callq	0x0000e7f2
000000000000e7f2	xorl	%r13d,%r13d
000000000000e7f5	jmp	0x0000e7fd
000000000000e7f7	movl	$0xe00002c7,%r13d
000000000000e7fd	movq	0x000065cc(%rip),%rax
000000000000e804	movl	(%rax),%edx
000000000000e806	testl	%edx,%edx
000000000000e808	je	0x0000e841
000000000000e80a	movslq	%r13d,%rsi
000000000000e80d	xorl	%r9d,%r9d
000000000000e810	xorl	%r8d,%r8d
000000000000e813	xorl	%ecx,%ecx
000000000000e815	xorl	%edx,%edx
000000000000e817	movl	$0x061284a2,%edi
000000000000e81c	callq	0x0000e821
000000000000e821	jmp	0x0000e841
000000000000e823	cmpb	$0x00,0x14(%rbx)
000000000000e827	jns	0x10000e6b4
000000000000e82d	jmp	0x10000e6ac
000000000000e832	cmpb	$0x00,0x14(%rbx)
000000000000e836	jns	0x10000e799
000000000000e83c	jmp	0x10000e794
000000000000e841	movl	$0x00000001,%esi
000000000000e846	movq	%r15,%rdi
000000000000e849	callq	0x100008310
000000000000e84e	movl	%r13d,%eax
000000000000e851	addq	$0x00000098,%rsp
000000000000e858	popq	%rbx
000000000000e859	popq	%r12
000000000000e85b	popq	%r13
000000000000e85d	popq	%r14
000000000000e85f	popq	%r15
000000000000e861	leave
000000000000e862	ret
000000000000e863	nop
__ZN21AppleIntelFramebuffer27maxCapabilityForDomainStateEm:
000000000000e864	pushq	%rbp
000000000000e865	movq	%rsp,%rbp
000000000000e868	andl	$0x02,%esi
000000000000e86b	cmpq	$0x01,%rsi
000000000000e86f	sbbq	%rax,%rax
000000000000e872	notq	%rax
000000000000e875	andl	$0x02,%eax
000000000000e878	leave
000000000000e879	ret
__ZN21AppleIntelFramebuffer31initialPowerStateForDomainStateEm:
000000000000e87a	pushq	%rbp
000000000000e87b	movq	%rsp,%rbp
000000000000e87e	andl	$0x02,%esi
000000000000e881	cmpq	$0x01,%rsi
000000000000e885	sbbq	%rax,%rax
000000000000e888	notq	%rax
000000000000e88b	andl	$0x02,%eax
000000000000e88e	leave
000000000000e88f	ret
__ZN22AppleIntelHDGraphicsFB10initPMModeEv:
000000000000e890	pushq	%rbp
000000000000e891	movq	%rsp,%rbp
000000000000e894	movq	0x00000098(%rdi),%rdx
000000000000e89b	addq	$0x00011190,%rdx
000000000000e8a2	movl	(%rdx),%eax
000000000000e8a4	orb	$0x40,%ah
000000000000e8a7	movl	%eax,(%rdx)
000000000000e8a9	leave
000000000000e8aa	ret
000000000000e8ab	nop
__ZN22AppleIntelHDGraphicsFB20deliverEvaluateEventEv:
000000000000e8ac	pushq	%rbp
000000000000e8ad	movq	%rsp,%rbp
000000000000e8b0	movq	0x000000e0(%rdi),%rdi
000000000000e8b7	movl	$0xe00002bc,%eax
000000000000e8bc	testq	%rdi,%rdi
000000000000e8bf	je	0x0000e8d2
000000000000e8c1	movq	(%rdi),%rax
000000000000e8c4	xorl	%ecx,%ecx
000000000000e8c6	xorl	%edx,%edx
000000000000e8c8	xorl	%esi,%esi
000000000000e8ca	call	*0x000001d8(%rax)
000000000000e8d0	xorl	%eax,%eax
000000000000e8d2	leave
000000000000e8d3	ret
__ZN22AppleIntelHDGraphicsFB16setRenderControlEv:
000000000000e8d4	pushq	%rbp
000000000000e8d5	movq	%rsp,%rbp
000000000000e8d8	cmpb	$0x00,0x00000729(%rdi)
000000000000e8df	jne	0x0000e8ee
000000000000e8e1	cmpb	$0x00,0x0000072a(%rdi)
000000000000e8e8	je	0x0000e9ef
000000000000e8ee	movl	0x00000108(%rdi),%eax
000000000000e8f4	andl	$0xfffff000,%eax
000000000000e8f9	orl	$0x01,%eax
000000000000e8fc	movq	0x00000098(%rdi),%rdx
000000000000e903	addq	$0x00002088,%rdx
000000000000e90a	movl	%eax,(%rdx)
000000000000e90c	movq	0x00000098(%rdi),%rdx
000000000000e913	movl	0x00002088(%rdx),%eax
000000000000e919	movl	0x000111f4(%rdx),%eax
000000000000e91f	orl	$0x10000000,%eax
000000000000e924	movl	%eax,0x000111f4(%rdx)
000000000000e92a	movq	0x00000098(%rdi),%rdx
000000000000e931	movl	0x00011230(%rdx),%eax
000000000000e937	orb	$0x80,%ah
000000000000e93a	movl	%eax,0x00001230(%rdx)
000000000000e940	movq	0x00000098(%rdi),%rax
000000000000e947	addq	$0x000111b8,%eax
000000000000e94d	movl	$0x070c3000,(%rax)
000000000000e953	movq	0x00000098(%rdi),%rax
000000000000e95a	addq	$0x000111ec,%eax
000000000000e960	movb	$0x0a,(%rax)
000000000000e963	movq	0x00000098(%rdi),%rax
000000000000e96a	addq	$0x00011100,%eax
000000000000e970	movw	$0x0800,(%rax)
000000000000e975	movq	0x00000098(%rdi),%rdx
000000000000e97c	addq	$0x000111bd,%rdx
000000000000e983	movl	(%rdx),%eax
000000000000e985	andl	$0xfe000000,%eax
000000000000e98a	orl	$0x0001e848,%eax
000000000000e98f	movl	%eax,(%rdx)
000000000000e991	movq	0x00000098(%rdi),%rax
000000000000e998	addq	$0x000111ca,%eax
000000000000e99e	movw	$0x00fa,(%rax)
000000000000e9a3	movq	0x00000098(%rdi),%rax
000000000000e9aa	addq	$0x000111e4,%eax
000000000000e9b0	movl	$0x00004e20,(%rax)
000000000000e9b6	movq	0x00000098(%rdi),%rax
000000000000e9bd	addq	$0x000111bc,%eax
000000000000e9c3	movb	$0x0d,(%rax)
000000000000e9c6	movq	0x00000098(%rdi),%rax
000000000000e9cd	addq	$0x000111da,%eax
000000000000e9d3	movw	$0x0019,(%rax)
000000000000e9d8	movq	0x00000098(%rdi),%rdx
000000000000e9df	addq	$0x000111b8,%rdx
000000000000e9e6	movl	(%rdx),%eax
000000000000e9e8	orl	$0x40000000,%eax
000000000000e9ed	movl	%eax,(%rdx)
000000000000e9ef	leave
000000000000e9f0	ret
000000000000e9f1	nop
__ZN22AppleIntelHDGraphicsFB23enableRenderStandbyFlowEv:
000000000000e9f2	pushq	%rbp
000000000000e9f3	movq	%rsp,%rbp
000000000000e9f6	cmpb	$0x00,0x00000729(%rdi)
000000000000e9fd	jne	0x0000ea08
000000000000e9ff	cmpb	$0x00,0x0000072a(%rdi)
000000000000ea06	je	0x0000ea1f
000000000000ea08	movq	0x00000098(%rdi),%rdx
000000000000ea0f	addq	$0x000111b8,%rdx
000000000000ea16	movl	(%rdx),%eax
000000000000ea18	orl	$0x40000000,%eax
000000000000ea1d	movl	%eax,(%rdx)
000000000000ea1f	leave
000000000000ea20	ret
000000000000ea21	nop
__ZN22AppleIntelHDGraphicsFB11drfcDisableEv:
000000000000ea22	pushq	%rbp
000000000000ea23	movq	%rsp,%rbp
000000000000ea26	movq	0x00000098(%rdi),%rax
000000000000ea2d	addq	$0x00011180,%eax
000000000000ea33	movw	$0x0080,(%rax)
000000000000ea38	movq	0x00000098(%rdi),%rdx
000000000000ea3f	addq	$0x00001184,%rdx
000000000000ea46	movzwl	(%rdx),%eax
000000000000ea49	orl	$0x10,%eax
000000000000ea4c	movw	%ax,(%rdx)
000000000000ea4f	leave
000000000000ea50	ret
000000000000ea51	nop
__ZN22AppleIntelHDGraphicsFB20callPlatformFunctionEPK8OSSymbolbPvS3_S3_S3_:
000000000000ea52	pushq	%rbp
000000000000ea53	movq	%rsp,%rbp
000000000000ea56	subq	$0x40,%rsp
000000000000ea5a	movq	%rbx,0xd8(%rbp)
000000000000ea5e	movq	%r12,0xe0(%rbp)
000000000000ea62	movq	%r13,0xe8(%rbp)
000000000000ea66	movq	%r14,0xf0(%rbp)
000000000000ea6a	movq	%r15,0xf8(%rbp)
000000000000ea6e	movq	%rdi,%r12
000000000000ea71	movq	%rsi,%rbx
000000000000ea74	movq	%rcx,0xc8(%rbp)
000000000000ea78	movq	%r8,0xc0(%rbp)
000000000000ea7c	movq	%r9,%r15
000000000000ea7f	movq	0x10(%rbp),%r14
000000000000ea83	movl	%edx,%r13d
000000000000ea86	movl	$0xe00002c2,%eax
000000000000ea8b	testq	%rsi,%rsi
000000000000ea8e	je	0x0000eafe
000000000000ea90	cmpq	%rsi,0x000006c0(%rdi)
000000000000ea97	jne	0x0000eab4
000000000000ea99	movq	%r14,%r8
000000000000ea9c	movq	%r9,%rcx
000000000000ea9f	movq	0xc0(%rbp),%rdx
000000000000eaa3	movl	0xc8(%rbp),%esi
000000000000eaa6	callq	0x1000016d8
000000000000eaab	cmpl	$0xe00002c2,%eax
000000000000eab0	jne	0x0000eafe
000000000000eab2	jmp	0x0000eabf
000000000000eab4	xorl	%eax,%eax
000000000000eab6	cmpq	%rsi,0x000006c8(%rdi)
000000000000eabd	je	0x0000eafe
000000000000eabf	movzbl	%ch,%edx
000000000000eac3	movq	%r14,0x10(%rbp)
000000000000eac7	movq	%r15,%r9
000000000000eaca	movq	0xc0(%rbp),%r8
000000000000eace	movq	0xc8(%rbp),%rcx
000000000000ead2	movq	%rbx,%rsi
000000000000ead5	movq	%r12,%rdi
000000000000ead8	movq	0x000062f9(%rip),%rax
000000000000eadf	movq	0x000006c8(%rax),%r11
000000000000eae6	movq	0xd8(%rbp),%rbx
000000000000eaea	movq	0xe0(%rbp),%r12
000000000000eaee	movq	0xe8(%rbp),%r13
000000000000eaf2	movq	0xf0(%rbp),%r14
000000000000eaf6	movq	0xf8(%rbp),%r15
000000000000eafa	leave
000000000000eafb	jmp	*%r11
000000000000eafe	movq	0xd8(%rbp),%rbx
000000000000eb02	movq	0xe0(%rbp),%r12
000000000000eb06	movq	0xe8(%rbp),%r13
000000000000eb0a	movq	0xf0(%rbp),%r14
000000000000eb0e	movq	0xf8(%rbp),%r15
000000000000eb12	leave
000000000000eb13	ret
__ZN22AppleIntelHDGraphicsFB10dumpPMRegsEv:
000000000000eb14	pushq	%rbp
000000000000eb15	movq	%rsp,%rbp
000000000000eb18	pushq	%rbx
000000000000eb19	subq	$0x08,%rsp
000000000000eb1d	movq	%rdi,%rbx
000000000000eb20	leaq	0x000035f1(%rip),%rdi
000000000000eb27	xorl	%eax,%eax
000000000000eb29	callq	0x0000eb2e
000000000000eb2e	movq	0x00000098(%rbx),%rax
000000000000eb35	addq	$0x00011110,%eax
000000000000eb3b	movl	(%rax),%esi
000000000000eb3d	leaq	0x000035e6(%rip),%rdi
000000000000eb44	xorl	%eax,%eax
000000000000eb46	callq	0x0000eb4b
000000000000eb4b	movq	0x00000098(%rbx),%rax
000000000000eb52	addq	$0x00011114,%eax
000000000000eb58	movl	(%rax),%esi
000000000000eb5a	leaq	0x000035db(%rip),%rdi
000000000000eb61	xorl	%eax,%eax
000000000000eb63	callq	0x0000eb68
000000000000eb68	movq	0x00000098(%rbx),%rax
000000000000eb6f	addq	$0x00011118,%eax
000000000000eb75	movl	(%rax),%esi
000000000000eb77	leaq	0x000035d0(%rip),%rdi
000000000000eb7e	xorl	%eax,%eax
000000000000eb80	callq	0x0000eb85
000000000000eb85	movq	0x00000098(%rbx),%rax
000000000000eb8c	addq	$0x0001111c,%eax
000000000000eb92	movl	(%rax),%esi
000000000000eb94	leaq	0x000035c5(%rip),%rdi
000000000000eb9b	xorl	%eax,%eax
000000000000eb9d	callq	0x0000eba2
000000000000eba2	movq	0x00000098(%rbx),%rax
000000000000eba9	addq	$0x00011120,%eax
000000000000ebaf	movl	(%rax),%esi
000000000000ebb1	leaq	0x000035ba(%rip),%rdi
000000000000ebb8	xorl	%eax,%eax
000000000000ebba	callq	0x0000ebbf
000000000000ebbf	movq	0x00000098(%rbx),%rax
000000000000ebc6	addq	$0x00011124,%eax
000000000000ebcc	movl	(%rax),%esi
000000000000ebce	leaq	0x000035af(%rip),%rdi
000000000000ebd5	xorl	%eax,%eax
000000000000ebd7	callq	0x0000ebdc
000000000000ebdc	movq	0x00000098(%rbx),%rax
000000000000ebe3	addq	$0x00011128,%eax
000000000000ebe9	movl	(%rax),%esi
000000000000ebeb	leaq	0x000035a4(%rip),%rdi
000000000000ebf2	xorl	%eax,%eax
000000000000ebf4	callq	0x0000ebf9
000000000000ebf9	movq	0x00000098(%rbx),%rax
000000000000ec00	addq	$0x0001112c,%eax
000000000000ec06	movl	(%rax),%esi
000000000000ec08	leaq	0x00003599(%rip),%rdi
000000000000ec0f	xorl	%eax,%eax
000000000000ec11	callq	0x0000ec16
000000000000ec16	movq	0x00000098(%rbx),%rax
000000000000ec1d	addq	$0x00011130,%eax
000000000000ec23	movl	(%rax),%esi
000000000000ec25	leaq	0x0000358e(%rip),%rdi
000000000000ec2c	xorl	%eax,%eax
000000000000ec2e	callq	0x0000ec33
000000000000ec33	movq	0x00000098(%rbx),%rax
000000000000ec3a	addq	$0x00011134,%eax
000000000000ec40	movl	(%rax),%esi
000000000000ec42	leaq	0x00003583(%rip),%rdi
000000000000ec49	xorl	%eax,%eax
000000000000ec4b	callq	0x0000ec50
000000000000ec50	movq	0x00000098(%rbx),%rax
000000000000ec57	addq	$0x00011138,%eax
000000000000ec5d	movl	(%rax),%esi
000000000000ec5f	leaq	0x00003578(%rip),%rdi
000000000000ec66	xorl	%eax,%eax
000000000000ec68	callq	0x0000ec6d
000000000000ec6d	movq	0x00000098(%rbx),%rax
000000000000ec74	addq	$0x0001113c,%eax
000000000000ec7a	movl	(%rax),%esi
000000000000ec7c	leaq	0x0000356e(%rip),%rdi
000000000000ec83	xorl	%eax,%eax
000000000000ec85	callq	0x0000ec8a
000000000000ec8a	movq	0x00000098(%rbx),%rax
000000000000ec91	addq	$0x00011140,%eax
000000000000ec97	movl	(%rax),%esi
000000000000ec99	leaq	0x00003564(%rip),%rdi
000000000000eca0	xorl	%eax,%eax
000000000000eca2	callq	0x0000eca7
000000000000eca7	movq	0x00000098(%rbx),%rax
000000000000ecae	addq	$0x00011144,%eax
000000000000ecb4	movl	(%rax),%esi
000000000000ecb6	leaq	0x0000355a(%rip),%rdi
000000000000ecbd	xorl	%eax,%eax
000000000000ecbf	callq	0x0000ecc4
000000000000ecc4	movq	0x00000098(%rbx),%rax
000000000000eccb	addq	$0x00011148,%eax
000000000000ecd1	movl	(%rax),%esi
000000000000ecd3	leaq	0x00003550(%rip),%rdi
000000000000ecda	xorl	%eax,%eax
000000000000ecdc	callq	0x0000ece1
000000000000ece1	movq	0x00000098(%rbx),%rax
000000000000ece8	addq	$0x0001114c,%eax
000000000000ecee	movl	(%rax),%esi
000000000000ecf0	leaq	0x00003546(%rip),%rdi
000000000000ecf7	xorl	%eax,%eax
000000000000ecf9	callq	0x0000ecfe
000000000000ecfe	movq	0x00000098(%rbx),%rax
000000000000ed05	addq	$0x00011300,%eax
000000000000ed0b	movl	(%rax),%esi
000000000000ed0d	leaq	0x0000353c(%rip),%rdi
000000000000ed14	xorl	%eax,%eax
000000000000ed16	callq	0x0000ed1b
000000000000ed1b	movq	0x00000098(%rbx),%rax
000000000000ed22	addq	$0x00011304,%eax
000000000000ed28	movl	(%rax),%esi
000000000000ed2a	leaq	0x00003532(%rip),%rdi
000000000000ed31	xorl	%eax,%eax
000000000000ed33	callq	0x0000ed38
000000000000ed38	movq	0x00000098(%rbx),%rax
000000000000ed3f	addq	$0x00011308,%eax
000000000000ed45	movl	(%rax),%esi
000000000000ed47	leaq	0x00003528(%rip),%rdi
000000000000ed4e	xorl	%eax,%eax
000000000000ed50	callq	0x0000ed55
000000000000ed55	movq	0x00000098(%rbx),%rax
000000000000ed5c	addq	$0x0001130c,%eax
000000000000ed62	movl	(%rax),%esi
000000000000ed64	leaq	0x0000351e(%rip),%rdi
000000000000ed6b	xorl	%eax,%eax
000000000000ed6d	callq	0x0000ed72
000000000000ed72	movq	0x00000098(%rbx),%rax
000000000000ed79	addq	$0x00011310,%eax
000000000000ed7f	movl	(%rax),%esi
000000000000ed81	leaq	0x00003514(%rip),%rdi
000000000000ed88	xorl	%eax,%eax
000000000000ed8a	callq	0x0000ed8f
000000000000ed8f	movq	0x00000098(%rbx),%rax
000000000000ed96	addq	$0x00011314,%eax
000000000000ed9c	movl	(%rax),%esi
000000000000ed9e	leaq	0x0000350a(%rip),%rdi
000000000000eda5	xorl	%eax,%eax
000000000000eda7	callq	0x0000edac
000000000000edac	movq	0x00000098(%rbx),%rax
000000000000edb3	addq	$0x00011318,%eax
000000000000edb9	movl	(%rax),%esi
000000000000edbb	leaq	0x00003500(%rip),%rdi
000000000000edc2	xorl	%eax,%eax
000000000000edc4	callq	0x0000edc9
000000000000edc9	movq	0x00000098(%rbx),%rax
000000000000edd0	addq	$0x0001131c,%eax
000000000000edd6	movl	(%rax),%esi
000000000000edd8	leaq	0x000034f6(%rip),%rdi
000000000000eddf	xorl	%eax,%eax
000000000000ede1	callq	0x0000ede6
000000000000ede6	movq	0x00000098(%rbx),%rax
000000000000eded	addq	$0x00011320,%eax
000000000000edf3	movl	(%rax),%esi
000000000000edf5	leaq	0x000034ec(%rip),%rdi
000000000000edfc	xorl	%eax,%eax
000000000000edfe	callq	0x0000ee03
000000000000ee03	movq	0x00000098(%rbx),%rax
000000000000ee0a	addq	$0x00011324,%eax
000000000000ee10	movl	(%rax),%esi
000000000000ee12	leaq	0x000034e2(%rip),%rdi
000000000000ee19	xorl	%eax,%eax
000000000000ee1b	callq	0x0000ee20
000000000000ee20	movq	0x00000098(%rbx),%rax
000000000000ee27	addq	$0x00011328,%eax
000000000000ee2d	movl	(%rax),%esi
000000000000ee2f	leaq	0x000034da(%rip),%rdi
000000000000ee36	xorl	%eax,%eax
000000000000ee38	callq	0x0000ee3d
000000000000ee3d	movq	0x00000098(%rbx),%rax
000000000000ee44	addq	$0x0001132c,%eax
000000000000ee4a	movl	(%rax),%esi
000000000000ee4c	leaq	0x000034d1(%rip),%rdi
000000000000ee53	xorl	%eax,%eax
000000000000ee55	callq	0x0000ee5a
000000000000ee5a	movq	0x00000098(%rbx),%rax
000000000000ee61	addq	$0x00011330,%eax
000000000000ee67	movl	(%rax),%esi
000000000000ee69	leaq	0x000034c8(%rip),%rdi
000000000000ee70	xorl	%eax,%eax
000000000000ee72	callq	0x0000ee77
000000000000ee77	movq	0x00000098(%rbx),%rax
000000000000ee7e	addq	$0x00011334,%eax
000000000000ee84	movl	(%rax),%esi
000000000000ee86	leaq	0x000034bf(%rip),%rdi
000000000000ee8d	xorl	%eax,%eax
000000000000ee8f	callq	0x0000ee94
000000000000ee94	movq	0x00000098(%rbx),%rax
000000000000ee9b	addq	$0x00011338,%eax
000000000000eea1	movl	(%rax),%esi
000000000000eea3	leaq	0x000034b6(%rip),%rdi
000000000000eeaa	xorl	%eax,%eax
000000000000eeac	callq	0x0000eeb1
000000000000eeb1	movq	0x00000098(%rbx),%rax
000000000000eeb8	addq	$0x0001133c,%eax
000000000000eebe	movl	(%rax),%esi
000000000000eec0	leaq	0x000034ad(%rip),%rdi
000000000000eec7	xorl	%eax,%eax
000000000000eec9	callq	0x0000eece
000000000000eece	movq	0x00000098(%rbx),%rax
000000000000eed5	addq	$0x00011340,%eax
000000000000eedb	movl	(%rax),%esi
000000000000eedd	leaq	0x000034a4(%rip),%rdi
000000000000eee4	xorl	%eax,%eax
000000000000eee6	callq	0x0000eeeb
000000000000eeeb	movq	0x00000098(%rbx),%rax
000000000000eef2	addq	$0x00011344,%eax
000000000000eef8	movl	(%rax),%esi
000000000000eefa	leaq	0x0000349b(%rip),%rdi
000000000000ef01	xorl	%eax,%eax
000000000000ef03	callq	0x0000ef08
000000000000ef08	movq	0x00000098(%rbx),%rax
000000000000ef0f	addq	$0x00011348,%eax
000000000000ef15	movl	(%rax),%esi
000000000000ef17	leaq	0x00003492(%rip),%rdi
000000000000ef1e	xorl	%eax,%eax
000000000000ef20	callq	0x0000ef25
000000000000ef25	movq	0x00000098(%rbx),%rax
000000000000ef2c	addq	$0x0001134c,%eax
000000000000ef32	movl	(%rax),%esi
000000000000ef34	leaq	0x00003489(%rip),%rdi
000000000000ef3b	xorl	%eax,%eax
000000000000ef3d	callq	0x0000ef42
000000000000ef42	movq	0x00000098(%rbx),%rax
000000000000ef49	addq	$0x00011350,%eax
000000000000ef4f	movl	(%rax),%esi
000000000000ef51	leaq	0x00003480(%rip),%rdi
000000000000ef58	xorl	%eax,%eax
000000000000ef5a	callq	0x0000ef5f
000000000000ef5f	movq	0x00000098(%rbx),%rax
000000000000ef66	addq	$0x00011354,%eax
000000000000ef6c	movl	(%rax),%esi
000000000000ef6e	leaq	0x00003477(%rip),%rdi
000000000000ef75	xorl	%eax,%eax
000000000000ef77	callq	0x0000ef7c
000000000000ef7c	movq	0x00000098(%rbx),%rax
000000000000ef83	addq	$0x00011358,%eax
000000000000ef89	movl	(%rax),%esi
000000000000ef8b	leaq	0x0000346e(%rip),%rdi
000000000000ef92	xorl	%eax,%eax
000000000000ef94	callq	0x0000ef99
000000000000ef99	movq	0x00000098(%rbx),%rax
000000000000efa0	addq	$0x0001135c,%eax
000000000000efa6	movl	(%rax),%esi
000000000000efa8	leaq	0x00003465(%rip),%rdi
000000000000efaf	xorl	%eax,%eax
000000000000efb1	callq	0x0000efb6
000000000000efb6	movq	0x00000098(%rbx),%rax
000000000000efbd	addq	$0x00011360,%eax
000000000000efc3	movl	(%rax),%esi
000000000000efc5	leaq	0x0000345c(%rip),%rdi
000000000000efcc	xorl	%eax,%eax
000000000000efce	callq	0x0000efd3
000000000000efd3	movq	0x00000098(%rbx),%rax
000000000000efda	addq	$0x00011364,%eax
000000000000efe0	movl	(%rax),%esi
000000000000efe2	leaq	0x00003453(%rip),%rdi
000000000000efe9	xorl	%eax,%eax
000000000000efeb	callq	0x0000eff0
000000000000eff0	movq	0x00000098(%rbx),%rax
000000000000eff7	addq	$0x00011368,%eax
000000000000effd	movl	(%rax),%esi
000000000000efff	leaq	0x0000344b(%rip),%rdi
000000000000f006	xorl	%eax,%eax
000000000000f008	callq	0x0000f00d
000000000000f00d	movq	0x00000098(%rbx),%rax
000000000000f014	addq	$0x0001136c,%eax
000000000000f01a	movl	(%rax),%esi
000000000000f01c	leaq	0x00003442(%rip),%rdi
000000000000f023	xorl	%eax,%eax
000000000000f025	callq	0x0000f02a
000000000000f02a	movq	0x00000098(%rbx),%rax
000000000000f031	addq	$0x00011370,%eax
000000000000f037	movl	(%rax),%esi
000000000000f039	leaq	0x00003439(%rip),%rdi
000000000000f040	xorl	%eax,%eax
000000000000f042	callq	0x0000f047
000000000000f047	movq	0x00000098(%rbx),%rax
000000000000f04e	addq	$0x00011374,%eax
000000000000f054	movl	(%rax),%esi
000000000000f056	leaq	0x00003430(%rip),%rdi
000000000000f05d	xorl	%eax,%eax
000000000000f05f	callq	0x0000f064
000000000000f064	movq	0x00000098(%rbx),%rax
000000000000f06b	addq	$0x00011378,%eax
000000000000f071	movl	(%rax),%esi
000000000000f073	leaq	0x00003427(%rip),%rdi
000000000000f07a	xorl	%eax,%eax
000000000000f07c	callq	0x0000f081
000000000000f081	movq	0x00000098(%rbx),%rax
000000000000f088	addq	$0x0001137c,%eax
000000000000f08e	movl	(%rax),%esi
000000000000f090	leaq	0x0000341e(%rip),%rdi
000000000000f097	xorl	%eax,%eax
000000000000f099	callq	0x0000f09e
000000000000f09e	leaq	0x0000342b(%rip),%rdi
000000000000f0a5	xorl	%eax,%eax
000000000000f0a7	callq	0x0000f0ac
000000000000f0ac	movq	0x00000098(%rbx),%rax
000000000000f0b3	addq	$0x00011170,%eax
000000000000f0b9	movzwl	(%rax),%esi
000000000000f0bc	movzwl	%si,%esi
000000000000f0bf	leaq	0x0000342b(%rip),%rdi
000000000000f0c6	xorl	%eax,%eax
000000000000f0c8	callq	0x0000f0cd
000000000000f0cd	movq	0x00000098(%rbx),%rax
000000000000f0d4	addq	$0x00011190,%eax
000000000000f0da	movl	(%rax),%esi
000000000000f0dc	leaq	0x0000341f(%rip),%rdi
000000000000f0e3	xorl	%eax,%eax
000000000000f0e5	callq	0x0000f0ea
000000000000f0ea	movq	0x00000098(%rbx),%rax
000000000000f0f1	addq	$0x000111f8,%eax
000000000000f0f7	movzwl	(%rax),%esi
000000000000f0fa	movzwl	%si,%esi
000000000000f0fd	leaq	0x00003411(%rip),%rdi
000000000000f104	xorl	%eax,%eax
000000000000f106	callq	0x0000f10b
000000000000f10b	movq	0x00000098(%rbx),%rax
000000000000f112	addq	$0x00011184,%eax
000000000000f118	movzwl	(%rax),%esi
000000000000f11b	movzwl	%si,%esi
000000000000f11e	leaq	0x00003400(%rip),%rdi
000000000000f125	xorl	%eax,%eax
000000000000f127	callq	0x0000f12c
000000000000f12c	movq	0x00000098(%rbx),%rax
000000000000f133	addq	$0x000111b8,%eax
000000000000f139	movl	(%rax),%esi
000000000000f13b	leaq	0x000033f6(%rip),%rdi
000000000000f142	xorl	%eax,%eax
000000000000f144	addq	$0x08,%rsp
000000000000f148	popq	%rbx
000000000000f149	leave
000000000000f14a	jmp	0x0000f14f
000000000000f14f	nop
__ZN22AppleIntelHDGraphicsFB24disableRenderStandbyFlowEv:
000000000000f150	pushq	%rbp
000000000000f151	movq	%rsp,%rbp
000000000000f154	pushq	%rbx
000000000000f155	subq	$0x08,%rsp
000000000000f159	movq	%rdi,%rbx
000000000000f15c	cmpb	$0x00,0x00000729(%rdi)
000000000000f163	jne	0x0000f16e
000000000000f165	cmpb	$0x00,0x0000072a(%rdi)
000000000000f16c	je	0x0000f1db
000000000000f16e	movq	0x00000098(%rbx),%rdx
000000000000f175	movl	0x000111b8(%rdx),%eax
000000000000f17b	orl	$0x00800000,%eax
000000000000f180	movl	%eax,0x000011b8(%rdx)
000000000000f186	movl	$0x00000001,%edi
000000000000f18b	callq	0x0000f190
000000000000f190	movq	0x00000098(%rbx),%rsi
000000000000f197	leaq	0x000111b8(%rsi),%rcx
000000000000f19e	xorl	%edx,%edx
000000000000f1a0	movl	(%rcx),%eax
000000000000f1a2	testl	$0x00700000,%eax
000000000000f1a7	je	0x0000f1b3
000000000000f1a9	incl	%edx
000000000000f1ab	cmpl	$0x00002710,%edx
000000000000f1b1	jne	0x0000f1a0
000000000000f1b3	movl	0x000111b8(%rsi),%eax
000000000000f1b9	andl	$0xbfffffff,%eax
000000000000f1be	movl	%eax,0x000111b8(%rsi)
000000000000f1c4	movq	0x00000098(%rbx),%rdx
000000000000f1cb	addq	$0x000111b8,%rdx
000000000000f1d2	movl	(%rdx),%eax
000000000000f1d4	andl	$0xff7fffff,%eax
000000000000f1d9	movl	%eax,(%rdx)
000000000000f1db	addq	$0x08,%rsp
000000000000f1df	popq	%rbx
000000000000f1e0	leave
000000000000f1e1	ret
__ZN22AppleIntelHDGraphicsFB12write_gstateEj:
000000000000f1e2	pushq	%rbp
000000000000f1e3	movq	%rsp,%rbp
000000000000f1e6	pushq	%r12
000000000000f1e8	pushq	%rbx
000000000000f1e9	movq	%rdi,%r12
000000000000f1ec	cmpb	$0x00,0x00000728(%rdi)
000000000000f1f3	je	0x0000f27b
000000000000f1f9	movq	0x00000098(%rdi),%rcx
000000000000f200	addq	$0x00011170,%rcx
000000000000f207	movzwl	(%rcx),%eax
000000000000f20a	movzwl	%ax,%edx
000000000000f20d	testb	$0x10,%dh
000000000000f210	je	0x0000f22b
000000000000f212	leaq	0x00003548(%rip),%rsi
000000000000f219	leaq	0x00003330(%rip),%rdi
000000000000f220	xorl	%eax,%eax
000000000000f222	popq	%rbx
000000000000f223	popq	%r12
000000000000f225	leave
000000000000f226	jmp	0x0000f22b
000000000000f22b	andw	$0x00ff,%ax
000000000000f22f	movl	%esi,%edx
000000000000f231	andl	$0x0f,%edx
000000000000f234	shll	$0x08,%edx
000000000000f237	orb	$0x40,%dh
000000000000f23a	orl	%eax,%edx
000000000000f23c	movw	%dx,(%rcx)
000000000000f23f	orb	$0x10,%dh
000000000000f242	movq	0x00000098(%rdi),%rax
000000000000f249	addq	$0x00011170,%eax
000000000000f24f	movw	%dx,(%rax)
000000000000f252	movl	$0x00002710,%ebx
000000000000f257	movq	0x00000098(%r12),%rax
000000000000f25f	addq	$0x00011170,%eax
000000000000f265	movzwl	(%rax),%eax
000000000000f268	testb	$0x10,%ah
000000000000f26b	je	0x0000f27b
000000000000f26d	movl	$0x0000000a,%edi
000000000000f272	callq	0x0000f277
000000000000f277	decl	%ebx
000000000000f279	jne	0x0000f257
000000000000f27b	popq	%rbx
000000000000f27c	popq	%r12
000000000000f27e	leave
000000000000f27f	ret
__ZN22AppleIntelHDGraphicsFB9drfcSetupEv:
000000000000f280	pushq	%rbp
000000000000f281	movq	%rsp,%rbp
000000000000f284	pushq	%r12
000000000000f286	pushq	%rbx
000000000000f287	movq	%rdi,%rbx
000000000000f28a	cmpb	$0x00,0x00000728(%rdi)
000000000000f291	je	0x0000f3a8
000000000000f297	movl	0x000006a0(%rdi),%edx
000000000000f29d	andl	$0x00ffffff,%edx
000000000000f2a3	movl	0x000006a4(%rdi),%esi
000000000000f2a9	andl	$0x00ffffff,%esi
000000000000f2af	movq	0x00000098(%rdi),%rax
000000000000f2b6	addq	$0x000111b0,%eax
000000000000f2bc	movl	%edx,(%rax)
000000000000f2be	movq	0x00000098(%rdi),%rax
000000000000f2c5	addq	$0x000111b4,%eax
000000000000f2cb	movl	%esi,(%rax)
000000000000f2cd	imull	0x000006a8(%rdi),%edx
000000000000f2d4	movl	$0x51eb851f,%ecx
000000000000f2d9	movl	%edx,%eax
000000000000f2db	mull	%ecx
000000000000f2dd	shrl	$0x05,%edx
000000000000f2e0	movq	0x00000098(%rdi),%rax
000000000000f2e7	addq	$0x0001119c,%eax
000000000000f2ed	movl	%edx,(%rax)
000000000000f2ef	imull	0x000006ac(%rdi),%esi
000000000000f2f6	movl	%esi,%eax
000000000000f2f8	mull	%ecx
000000000000f2fa	shrl	$0x05,%edx
000000000000f2fd	movq	0x00000098(%rdi),%rax
000000000000f304	addq	$0x000111a0,%eax
000000000000f30a	movl	%edx,(%rax)
000000000000f30c	movq	0x00000098(%rdi),%rax
000000000000f313	addq	$0x0001117c,%eax
000000000000f319	movl	$0x00000001,(%rax)
000000000000f31f	movq	0x00000098(%rdi),%rax
000000000000f326	addq	$0x00011180,%eax
000000000000f32c	movw	$0x0090,(%rax)
000000000000f331	movq	0x00000098(%rdi),%rdx
000000000000f338	addq	$0x00011190,%rdx
000000000000f33f	movl	(%rdx),%eax
000000000000f341	orb	$0x40,%ah
000000000000f344	movl	%eax,(%rdx)
000000000000f346	movq	0x00000098(%rdi),%rax
000000000000f34d	addq	$0x00011190,%eax
000000000000f353	movl	(%rax),%r12d
000000000000f356	shrl	$0x08,%r12d
000000000000f35a	andl	$0x0f,%r12d
000000000000f35e	cmpb	$0x00,0x0000072b(%rdi)
000000000000f365	je	0x0000f378
000000000000f367	movl	%r12d,%esi
000000000000f36a	leaq	0x00003203(%rip),%rdi
000000000000f371	xorl	%eax,%eax
000000000000f373	callq	0x0000f378
000000000000f378	movl	%r12d,%esi
000000000000f37b	movq	%rbx,%rdi
000000000000f37e	callq	0x10000f1e2
000000000000f383	movl	%r12d,0x000006d0(%rbx)
000000000000f38a	cmpb	$0x00,0x0000072b(%rbx)
000000000000f391	je	0x0000f3a8
000000000000f393	movl	%r12d,%esi
000000000000f396	leaq	0x000031f3(%rip),%rdi
000000000000f39d	xorl	%eax,%eax
000000000000f39f	popq	%rbx
000000000000f3a0	popq	%r12
000000000000f3a2	leave
000000000000f3a3	jmp	0x0000f3a8
000000000000f3a8	popq	%rbx
000000000000f3a9	popq	%r12
000000000000f3ab	leave
000000000000f3ac	ret
000000000000f3ad	nop
__ZN22AppleIntelHDGraphicsFB21deferredEvaluateEventEP8OSObjectP22IOInterruptEventSourcei:
000000000000f3ae	pushq	%rbp
000000000000f3af	movq	%rsp,%rbp
000000000000f3b2	leave
000000000000f3b3	jmp	0x10000376e
__ZN21AppleIntelFramebuffer15doSetPowerStateEj:
000000000000f3b8	pushq	%rbp
000000000000f3b9	movq	%rsp,%rbp
000000000000f3bc	subq	$0x00000150,%rsp
000000000000f3c3	movq	%rbx,0xd8(%rbp)
000000000000f3c7	movq	%r12,0xe0(%rbp)
000000000000f3cb	movq	%r13,0xe8(%rbp)
000000000000f3cf	movq	%r14,0xf0(%rbp)
000000000000f3d3	movq	%r15,0xf8(%rbp)
000000000000f3d7	movq	%rdi,%r15
000000000000f3da	movl	$0x00000002,0xac(%rbp)
000000000000f3e1	cmpl	$0x02,%esi
000000000000f3e4	cmoval	0xac(%rbp),%esi
000000000000f3e8	movl	%esi,0xac(%rbp)
000000000000f3eb	movl	0x00000208(%rdi),%eax
000000000000f3f1	movl	%eax,0xa4(%rbp)
000000000000f3f4	cmpl	%esi,%eax
000000000000f3f6	je	0x0000f611
000000000000f3fc	cmpl	$0x02,%eax
000000000000f3ff	jne	0x0000f43c
000000000000f401	xorl	%edx,%edx
000000000000f403	movl	$0x00000007,%esi
000000000000f408	callq	0x0000f40d
000000000000f40d	movl	$0x00000005,0xa8(%rbp)
000000000000f414	cmpb	$0x00,0x0000020d(%r15)
000000000000f41c	je	0x0000f45e
000000000000f41e	movl	0x000001d8(%r15),%esi
000000000000f425	movq	0x000001d0(%r15),%rdi
000000000000f42c	xorl	%edx,%edx
000000000000f42e	callq	0x1000031fc
000000000000f433	movl	$0x00000005,0xa8(%rbp)
000000000000f43a	jmp	0x0000f45e
000000000000f43c	movl	$0x00000000,0xa8(%rbp)
000000000000f443	cmpl	$0x02,0xac(%rbp)
000000000000f447	jne	0x0000f45e
000000000000f449	xorl	%edx,%edx
000000000000f44b	movl	$0x00000006,%esi
000000000000f450	callq	0x0000f455
000000000000f455	movl	$0x00000008,0xa8(%rbp)
000000000000f45c	jmp	0x0000f4af
000000000000f45e	movl	0xac(%rbp),%ecx
000000000000f461	testl	%ecx,%ecx
000000000000f463	jne	0x0000f4af
000000000000f465	movq	(%r15),%rax
000000000000f468	movq	%r15,%rdi
000000000000f46b	call	*0x000009b0(%rax)
000000000000f471	movq	%rax,%rbx
000000000000f474	testq	%rax,%rax
000000000000f477	je	0x0000f49d
000000000000f479	movq	(%rax),%rax
000000000000f47c	movl	$0x00000001,%edx
000000000000f481	movq	0x000059a8(%rip),%rcx
000000000000f488	movq	(%rcx),%rsi
000000000000f48b	movq	%rbx,%rdi
000000000000f48e	call	*0x00000210(%rax)
000000000000f494	movq	(%rbx),%rax
000000000000f497	movq	%rbx,%rdi
000000000000f49a	call	*0x28(%rax)
000000000000f49d	movl	$0x00000001,%edx
000000000000f4a2	movl	$0x00000003,%esi
000000000000f4a7	movq	%r15,%rdi
000000000000f4aa	callq	0x0000f4af
000000000000f4af	movq	$0x00000000,0xb8(%rbp)
000000000000f4b7	leaq	0xb8(%rbp),%rdx
000000000000f4bb	movl	$0x636c616d,%esi
000000000000f4c0	movq	%r15,%rdi
000000000000f4c3	movq	0x00005946(%rip),%rax
000000000000f4ca	call	*0x00000a40(%rax)
000000000000f4d0	leaq	0xc0(%rbp),%rcx
000000000000f4d4	leaq	0xc8(%rbp),%rdx
000000000000f4d8	movl	0x000001dc(%r15),%esi
000000000000f4df	movq	%r15,%rdi
000000000000f4e2	callq	0x100004e1a
000000000000f4e7	testl	%eax,%eax
000000000000f4e9	jne	0x0000f4f5
000000000000f4eb	cmpb	$0x00,0x0000020d(%r15)
000000000000f4f3	jne	0x0000f4fd
000000000000f4f5	movq	$0x00000000,0xc0(%rbp)
000000000000f4fd	movl	0x000001e0(%r15),%ebx
000000000000f504	movq	0xc0(%rbp),%r12
000000000000f508	movl	0x000001d8(%r15),%r13d
000000000000f50f	movq	0x000001d0(%r15),%r14
000000000000f516	leaq	0x00000298(%r15),%rsi
000000000000f51d	movl	$0x000000f0,%edx
000000000000f522	movq	%rsp,%rdi
000000000000f525	callq	0x0000f52a
000000000000f52a	movl	%ebx,%r9d
000000000000f52d	movq	%r12,%r8
000000000000f530	movl	%r13d,%ecx
000000000000f533	movl	0xac(%rbp),%edx
000000000000f536	movl	0xa4(%rbp),%esi
000000000000f539	movq	%r14,%rdi
000000000000f53c	callq	0x10000c104
000000000000f541	movl	0xac(%rbp),%edx
000000000000f544	movl	%edx,0x00000208(%r15)
000000000000f54b	movl	0xa4(%rbp),%edx
000000000000f54e	testl	%edx,%edx
000000000000f550	jne	0x0000f599
000000000000f552	movq	(%r15),%rax
000000000000f555	movq	%r15,%rdi
000000000000f558	call	*0x000009b0(%rax)
000000000000f55e	movq	%rax,%rbx
000000000000f561	testq	%rax,%rax
000000000000f564	je	0x0000f587
000000000000f566	movq	(%rax),%rax
000000000000f569	xorl	%edx,%edx
000000000000f56b	movq	0x000058be(%rip),%rcx
000000000000f572	movq	(%rcx),%rsi
000000000000f575	movq	%rbx,%rdi
000000000000f578	call	*0x00000210(%rax)
000000000000f57e	movq	(%rbx),%rax
000000000000f581	movq	%rbx,%rdi
000000000000f584	call	*0x28(%rax)
000000000000f587	movl	$0x00000001,%edx
000000000000f58c	movl	$0x00000004,%esi
000000000000f591	movq	%r15,%rdi
000000000000f594	callq	0x0000f599
000000000000f599	movl	0xa8(%rbp),%eax
000000000000f59c	testl	%eax,%eax
000000000000f59e	je	0x0000f5d5
000000000000f5a0	xorl	%edx,%edx
000000000000f5a2	movl	0xa8(%rbp),%esi
000000000000f5a5	movq	%r15,%rdi
000000000000f5a8	callq	0x0000f5ad
000000000000f5ad	cmpl	$0x08,0xa8(%rbp)
000000000000f5b1	jne	0x0000f5d5
000000000000f5b3	cmpb	$0x00,0x0000020d(%r15)
000000000000f5bb	je	0x0000f5d5
000000000000f5bd	movl	0x000001d8(%r15),%esi
000000000000f5c4	movq	0x000001d0(%r15),%rdi
000000000000f5cb	movl	$0x00000002,%edx
000000000000f5d0	callq	0x1000031fc
000000000000f5d5	movq	0x000001d0(%r15),%rdi
000000000000f5dc	cmpl	$0x01,0x00000194(%rdi)
000000000000f5e3	jle	0x0000f611
000000000000f5e5	xorl	%esi,%esi
000000000000f5e7	cmpl	$0x00,0x000001d8(%r15)
000000000000f5ef	sete	%dh
000000000000f5f3	callq	0x100001930
000000000000f5f8	cmpl	$0x01,0xac(%rbp)
000000000000f5fc	je	0x0000f606
000000000000f5fe	movl	0xac(%rbp),%edx
000000000000f601	cmpl	%edx,0xa4(%rbp)
000000000000f604	jae	0x0000f611
000000000000f606	movl	0xac(%rbp),%esi
000000000000f609	movq	%rax,%rdi
000000000000f60c	callq	0x10000f3b8
000000000000f611	xorl	%eax,%eax
000000000000f613	movq	0xd8(%rbp),%rbx
000000000000f617	movq	0xe0(%rbp),%r12
000000000000f61b	movq	0xe8(%rbp),%r13
000000000000f61f	movq	0xf0(%rbp),%r14
000000000000f623	movq	0xf8(%rbp),%r15
000000000000f627	leave
000000000000f628	ret
000000000000f629	nop
__ZN21AppleIntelFramebuffer24powerStateForDomainStateEm:
000000000000f62a	pushq	%rbp
000000000000f62b	movq	%rsp,%rbp
000000000000f62e	xorl	%eax,%eax
000000000000f630	andl	$0x02,%esi
000000000000f633	je	0x0000f63c
000000000000f635	callq	0x0000f63a
000000000000f63a	movl	%eax,%eax
000000000000f63c	leave
000000000000f63d	ret
__ZN21AppleIntelFramebuffer9initForPMEv:
000000000000f63e	pushq	%rbp
000000000000f63f	movq	%rsp,%rbp
000000000000f642	pushq	%r12
000000000000f644	pushq	%rbx
000000000000f645	subq	$0x00000120,%rsp
000000000000f64c	movq	%rdi,%rbx
000000000000f64f	leaq	0xfffffed0(%rbp),%r12
000000000000f656	movl	$0x00000120,%edx
000000000000f65b	xorl	%esi,%esi
000000000000f65d	movq	%r12,%rdi
000000000000f660	callq	0x0000f665
000000000000f665	movq	$0x00000001,0xfffffed0(%rbp)
000000000000f670	movq	$0x00000001,0xffffff30(%rbp)
000000000000f67b	movq	$0x00000002,0xffffff48(%rbp)
000000000000f686	movq	$0x00000001,0x90(%rbp)
000000000000f68e	movq	$0x00008000,0x98(%rbp)
000000000000f696	movq	$0x00000002,0xa0(%rbp)
000000000000f69e	movq	$0x00000002,0xa8(%rbp)
000000000000f6a6	movl	$0x00000002,0x00000208(%rbx)
000000000000f6b0	movq	(%rbx),%rax
000000000000f6b3	movl	$0x00000003,%ecx
000000000000f6b8	movq	%r12,%rdx
000000000000f6bb	movq	%rbx,%rsi
000000000000f6be	movq	%rbx,%rdi
000000000000f6c1	call	*0x000007a8(%rax)
000000000000f6c7	movq	%rbx,%rdi
000000000000f6ca	callq	0x0000f6cf
000000000000f6cf	movl	$0x00000001,%esi
000000000000f6d4	movq	%rbx,%rdi
000000000000f6d7	callq	0x0000f6dc
000000000000f6dc	addq	$0x00000120,%rsp
000000000000f6e3	popq	%rbx
000000000000f6e4	popq	%r12
000000000000f6e6	leave
000000000000f6e7	ret
__ZN22AppleIntelHDGraphicsFB17hwSetReducedSpeedEj:
000000000000f6e8	pushq	%rbp
000000000000f6e9	movq	%rsp,%rbp
000000000000f6ec	xorl	%eax,%eax
000000000000f6ee	movl	0x000006b0(%rdi),%r8d
000000000000f6f5	testl	%r8d,%r8d
000000000000f6f8	jne	0x0000f723
000000000000f6fa	cmpl	$0x0f,%esi
000000000000f6fd	ja	0x0000f71e
000000000000f6ff	leal	0x00011110(,%rsi,4),%eax
000000000000f706	movl	%eax,%eax
000000000000f708	addq	0x00000098(%rdi),%rax
000000000000f70f	movl	(%rax),%eax
000000000000f711	testl	%eax,%eax
000000000000f713	je	0x0000f71e
000000000000f715	callq	0x10000f1e2
000000000000f71a	xorl	%eax,%eax
000000000000f71c	jmp	0x0000f723
000000000000f71e	movl	$0xe00002c2,%eax
000000000000f723	leave
000000000000f724	ret
000000000000f725	nop
__ZN22AppleIntelHDGraphicsFB13drfcAlgorithmEj:
000000000000f726	pushq	%rbp
000000000000f727	movq	%rsp,%rbp
000000000000f72a	subq	$0x40,%rsp
000000000000f72e	movq	%rbx,0xd8(%rbp)
000000000000f732	movq	%r12,0xe0(%rbp)
000000000000f736	movq	%r13,0xe8(%rbp)
000000000000f73a	movq	%r14,0xf0(%rbp)
000000000000f73e	movq	%r15,0xf8(%rbp)
000000000000f742	movq	%rdi,%rbx
000000000000f745	movl	%esi,0xc8(%rbp)
000000000000f748	cmpb	$0x00,0x00000728(%rdi)
000000000000f74f	je	0x0000f8a7
000000000000f755	movl	0x000006d0(%rdi),%r13d
000000000000f75c	movq	0x00000098(%rdi),%rax
000000000000f763	movl	0x000113b8(%rax),%r12d
000000000000f76a	movl	0x000113bc(%rax),%r14d
000000000000f771	movl	0x0001119c(%rax),%r15d
000000000000f778	movl	0x000111a0(%rax),%eax
000000000000f77e	movl	%eax,0xcc(%rbp)
000000000000f781	cmpb	$0x00,0x0000072b(%rdi)
000000000000f788	je	0x0000f807
000000000000f78a	movl	%r13d,%esi
000000000000f78d	leaq	0x00002e1c(%rip),%rdi
000000000000f794	xorl	%eax,%eax
000000000000f796	callq	0x0000f79b
000000000000f79b	movl	%r12d,%esi
000000000000f79e	leaq	0x00002e2d(%rip),%rdi
000000000000f7a5	xorl	%eax,%eax
000000000000f7a7	callq	0x0000f7ac
000000000000f7ac	movl	%r14d,%esi
000000000000f7af	leaq	0x00002e28(%rip),%rdi
000000000000f7b6	xorl	%eax,%eax
000000000000f7b8	callq	0x0000f7bd
000000000000f7bd	movl	0x000006a8(%rbx),%esi
000000000000f7c3	leaq	0x00002e22(%rip),%rdi
000000000000f7ca	xorl	%eax,%eax
000000000000f7cc	callq	0x0000f7d1
000000000000f7d1	movl	0x000006ac(%rbx),%esi
000000000000f7d7	leaq	0x00002e27(%rip),%rdi
000000000000f7de	xorl	%eax,%eax
000000000000f7e0	callq	0x0000f7e5
000000000000f7e5	movl	0xcc(%rbp),%esi
000000000000f7e8	leaq	0x00002e31(%rip),%rdi
000000000000f7ef	xorl	%eax,%eax
000000000000f7f1	callq	0x0000f7f6
000000000000f7f6	movl	%r15d,%esi
000000000000f7f9	leaq	0x00002e30(%rip),%rdi
000000000000f800	xorl	%eax,%eax
000000000000f802	callq	0x0000f807
000000000000f807	movl	%r14d,%eax
000000000000f80a	orl	%r12d,%eax
000000000000f80d	je	0x0000f8a7
000000000000f813	cmpl	%r15d,%r12d
000000000000f816	jbe	0x0000f836
000000000000f818	movl	0x000006d0(%rbx),%esi
000000000000f81e	movl	0x00000674(%rbx),%ecx
000000000000f824	cmpl	%ecx,%esi
000000000000f826	je	0x0000f860
000000000000f828	leal	0xff(%rsi),%eax
000000000000f82b	cmpl	%ecx,%eax
000000000000f82d	movl	%ecx,%r13d
000000000000f830	cmovael	%eax,%r13d
000000000000f834	jmp	0x0000f860
000000000000f836	cmpl	0xcc(%rbp),%r14d
000000000000f83a	jae	0x0000f85a
000000000000f83c	movl	0x000006d0(%rbx),%esi
000000000000f842	movl	0x00000670(%rbx),%ecx
000000000000f848	cmpl	%ecx,%esi
000000000000f84a	je	0x0000f860
000000000000f84c	leal	0x01(%rsi),%eax
000000000000f84f	cmpl	%ecx,%eax
000000000000f851	movl	%ecx,%r13d
000000000000f854	cmovbel	%eax,%r13d
000000000000f858	jmp	0x0000f860
000000000000f85a	movl	0x000006d0(%rbx),%esi
000000000000f860	cmpl	$0x02,0xc8(%rbp)
000000000000f864	jne	0x0000f876
000000000000f866	movq	0x00000098(%rbx),%rax
000000000000f86d	addq	$0x00011170,%eax
000000000000f873	movzwl	(%rax),%eax
000000000000f876	cmpl	%r13d,%esi
000000000000f879	je	0x0000f8a7
000000000000f87b	cmpb	$0x00,0x0000072b(%rbx)
000000000000f882	je	0x0000f895
000000000000f884	movl	%r13d,%edx
000000000000f887	leaq	0x00002db2(%rip),%rdi
000000000000f88e	xorl	%eax,%eax
000000000000f890	callq	0x0000f895
000000000000f895	movl	%r13d,%esi
000000000000f898	movq	%rbx,%rdi
000000000000f89b	callq	0x10000f1e2
000000000000f8a0	movl	%r13d,0x000006d0(%rbx)
000000000000f8a7	movq	0xd8(%rbp),%rbx
000000000000f8ab	movq	0xe0(%rbp),%r12
000000000000f8af	movq	0xe8(%rbp),%r13
000000000000f8b3	movq	0xf0(%rbp),%r14
000000000000f8b7	movq	0xf8(%rbp),%r15
000000000000f8bb	leave
000000000000f8bc	ret
000000000000f8bd	nop
__ZN22AppleIntelHDGraphicsFB13setDRFCEnableEj:
000000000000f8be	pushq	%rbp
000000000000f8bf	movq	%rsp,%rbp
000000000000f8c2	movl	$0xe00002c7,%eax
000000000000f8c7	cmpb	$0x00,0x00000728(%rdi)
000000000000f8ce	je	0x0000f91e
000000000000f8d0	testl	%esi,%esi
000000000000f8d2	je	0x0000f8ed
000000000000f8d4	movl	0x000006b0(%rdi),%r9d
000000000000f8db	testl	%r9d,%r9d
000000000000f8de	jne	0x0000f8ed
000000000000f8e0	movl	%esi,0x000006b0(%rdi)
000000000000f8e6	callq	0x10000f280
000000000000f8eb	jmp	0x0000f91c
000000000000f8ed	movl	%esi,0x000006b0(%rdi)
000000000000f8f3	movq	0x00000098(%rdi),%rax
000000000000f8fa	addq	$0x00011180,%eax
000000000000f900	movw	$0x0080,(%rax)
000000000000f905	movq	0x00000098(%rdi),%rdx
000000000000f90c	addq	$0x00001184,%rdx
000000000000f913	movzwl	(%rdx),%eax
000000000000f916	orl	$0x10,%eax
000000000000f919	movw	%ax,(%rdx)
000000000000f91c	xorl	%eax,%eax
000000000000f91e	leave
000000000000f91f	ret
__ZN22AppleIntelHDGraphicsFB9initForPMEP9IOService:
000000000000f920	pushq	%rbp
000000000000f921	movq	%rsp,%rbp
000000000000f924	movl	$0x000186a0,0x000006a0(%rdi)
000000000000f92e	movl	$0x000186a0,0x000006a4(%rdi)
000000000000f938	movl	$0x00000032,0x000006a8(%rdi)
000000000000f942	movl	$0x0000000a,0x000006ac(%rdi)
000000000000f94c	cmpb	$0x00,0x00000728(%rdi)
000000000000f953	je	0x0000f9ca
000000000000f955	movl	$0x00000000,0x00000674(%rdi)
000000000000f95f	movl	$0x0000000f,0x00000670(%rdi)
000000000000f969	movq	0x00000098(%rdi),%rdx
000000000000f970	addq	$0x00011110,%rdx
000000000000f977	xorl	%ecx,%ecx
000000000000f979	movl	(%rdx),%eax
000000000000f97b	testl	%eax,%eax
000000000000f97d	jne	0x0000f98a
000000000000f97f	leal	0xff(%rcx),%eax
000000000000f982	movl	%eax,0x00000670(%rdi)
000000000000f988	jmp	0x0000f995
000000000000f98a	incl	%ecx
000000000000f98c	addq	$0x04,%rdx
000000000000f990	cmpl	$0x10,%ecx
000000000000f993	jne	0x0000f979
000000000000f995	movb	$0x00,0x0000072b(%rdi)
000000000000f99c	movq	0x00000098(%rdi),%rdx
000000000000f9a3	addq	$0x00011190,%rdx
000000000000f9aa	movl	(%rdx),%eax
000000000000f9ac	orb	$0x40,%ah
000000000000f9af	movl	%eax,(%rdx)
000000000000f9b1	movl	$0x00000000,0x000006b0(%rdi)
000000000000f9bb	cmpb	$0x00,0x00000729(%rdi)
000000000000f9c2	je	0x0000f9ca
000000000000f9c4	leave
000000000000f9c5	jmp	0x10000e8d4
000000000000f9ca	leave
000000000000f9cb	ret
__ZN21AppleIntelFramebuffer17setAggressivenessEmm:
000000000000f9cc	pushq	%rbp
000000000000f9cd	movq	%rsp,%rbp
000000000000f9d0	subq	$0x40,%rsp
000000000000f9d4	movq	%rbx,0xd8(%rbp)
000000000000f9d8	movq	%r12,0xe0(%rbp)
000000000000f9dc	movq	%r13,0xe8(%rbp)
000000000000f9e0	movq	%r14,0xf0(%rbp)
000000000000f9e4	movq	%r15,0xf8(%rbp)
000000000000f9e8	movq	%rdi,%r14
000000000000f9eb	movq	%rsi,%r13
000000000000f9ee	movq	%rdx,%r15
000000000000f9f1	movl	$0xe0014001,%eax
000000000000f9f6	cmpq	%rax,%rsi
000000000000f9f9	jne	0x0000fe5f
000000000000f9ff	cmpq	$0x49,%rdx
000000000000fa03	ja	0x0000fe5f
000000000000fa09	leaq	0x0000000c(%rip),%rdx
000000000000fa10	movslq	(%rdx,%r15,4),%rax
000000000000fa14	addq	%rdx,%rax
000000000000fa17	jmp	*%rax
000000000000fa19	nopl	(%rax)
000000000000fa1c	subb	%al,(%rcx)
000000000000fa1e	addb	%al,(%rax)
000000000000fa20	subb	%al,(%rcx)
000000000000fa22	addb	%al,(%rax)
000000000000fa24	subb	%al,(%rcx)
000000000000fa26	addb	%al,(%rax)
000000000000fa28	subb	%al,(%rcx)
000000000000fa2a	addb	%al,(%rax)
000000000000fa2c	subb	%al,(%rcx)
000000000000fa2e	addb	%al,(%rax)
000000000000fa30	subb	%al,(%rcx)
000000000000fa32	addb	%al,(%rax)
000000000000fa34	subb	%al,(%rcx)
000000000000fa36	addb	%al,(%rax)
000000000000fa38	subb	%al,(%rcx)
000000000000fa3a	addb	%al,(%rax)
000000000000fa3c	subb	%al,(%rcx)
000000000000fa3e	addb	%al,(%rax)
000000000000fa40	subb	%al,(%rcx)
000000000000fa42	addb	%al,(%rax)
000000000000fa44	subb	%al,(%rcx)
000000000000fa46	addb	%al,(%rax)
000000000000fa48	subb	%al,(%rcx)
000000000000fa4a	addb	%al,(%rax)
000000000000fa4c	subb	%al,(%rcx)
000000000000fa4e	addb	%al,(%rax)
000000000000fa50	subb	%al,(%rcx)
000000000000fa52	addb	%al,(%rax)
000000000000fa54	subb	%al,(%rcx)
000000000000fa56	addb	%al,(%rax)
000000000000fa58	subb	%al,(%rcx)
000000000000fa5a	addb	%al,(%rax)
000000000000fa5c	addq	%rax,(%r8)
000000000000fa5f	addb	%bl,0x00(%rcx,%rax)
000000000000fa63	addb	%dl,0xa6000001(%rbp)
000000000000fa69	addl	%eax,(%rax)
000000000000fa6b	addb	%dh,0xe0000001(%rdi)
000000000000fa71	addl	%eax,(%rax)
000000000000fa73	addb	%ah,(%rdx)
000000000000fa75	addb	(%rax),%al
000000000000fa77	addb	%bh,(%rdx,%rax)
000000000000fa7a	addb	%al,(%rax)
000000000000fa7c	addb	$0x00,%al
000000000000fa7f	addb	%al,0x04(%rbx)
000000000000fa82	addb	%al,(%rax)
000000000000fa84	addb	$0x00,%al
000000000000fa87	addb	%al,0x04(%rbx)
000000000000fa8a	addb	%al,(%rax)
000000000000fa8c	addb	$0x00,%al
000000000000fa8f	addb	%al,0x04(%rbx)
000000000000fa92	addb	%al,(%rax)
000000000000fa94	addb	$0x00,%al
000000000000fa97	addb	%al,0x04(%rbx)
000000000000fa9a	addb	%al,(%rax)
000000000000fa9c	addb	$0x00,%al
000000000000fa9f	addb	%al,0x04(%rbx)
000000000000faa2	addb	%al,(%rax)
000000000000faa4	addb	$0x00,%al
000000000000faa7	addb	%al,0x04(%rbx)
000000000000faaa	addb	%al,(%rax)
000000000000faac	addb	$0x00,%al
000000000000faaf	addb	%al,0x04(%rbx)
000000000000fab2	addb	%al,(%rax)
000000000000fab4	addb	$0x00,%al
000000000000fab7	addb	%al,0x04(%rbx)
000000000000faba	addb	%al,(%rax)
000000000000fabc	addb	$0x00,%al
000000000000fabf	addb	%al,0x04(%rbx)
000000000000fac2	addb	%al,(%rax)
000000000000fac4	addb	$0x00,%al
000000000000fac7	addb	%al,0x04(%rbx)
000000000000faca	addb	%al,(%rax)
000000000000facc	addb	$0x00,%al
000000000000facf	addb	%al,0x04(%rbx)
000000000000fad2	addb	%al,(%rax)
000000000000fad4	addb	$0x00,%al
000000000000fad7	addb	%al,0x04(%rbx)
000000000000fada	addb	%al,(%rax)
000000000000fadc	addb	$0x00,%al
000000000000fadf	addb	%al,0x04(%rbx)
000000000000fae2	addb	%al,(%rax)
000000000000fae4	nop
000000000000fae5	addb	(%rax),%al
000000000000fae7	addb	%bh,0xdb000002(%rsi)
000000000000faed	addb	(%rax),%al
000000000000faef	addb	%bl,0x30000003(%rip)
000000000000faf5	addl	(%rax),%eax
000000000000faf7	addb	%al,0x04(%rbx)
000000000000fafa	addb	%al,(%rax)
000000000000fafc	addb	$0x00,%al
000000000000faff	addb	%al,0x04(%rbx)
000000000000fb02	addb	%al,(%rax)
000000000000fb04	addb	$0x00,%al
000000000000fb07	addb	%al,0x04(%rbx)
000000000000fb0a	addb	%al,(%rax)
000000000000fb0c	addl	(%r8),%eax
000000000000fb0f	addb	%dl,0x03(%rsi)
000000000000fb12	addb	%al,(%rax)
000000000000fb14	imull	$0x037a0000,(%rbx),%eax
000000000000fb1a	addb	%al,(%rax)
000000000000fb1c	addb	$0x00,%al
000000000000fb1f	addb	%al,0x04(%rbx)
000000000000fb22	addb	%al,(%rax)
000000000000fb24	addb	$0x00,%al
000000000000fb27	addb	%al,0x04(%rbx)
000000000000fb2a	addb	%al,(%rax)
000000000000fb2c	addb	$0x00,%al
000000000000fb2f	addb	%al,0x04(%rbx)
000000000000fb32	addb	%al,(%rax)
000000000000fb34	movl	(%rbx),%eax
000000000000fb36	addb	%al,(%rax)
000000000000fb38	pushf
000000000000fb39	addl	(%rax),%eax
000000000000fb3b	addb	%ch,0xbe000003(%rbp)
000000000000fb41	addl	(%rax),%eax
000000000000fb43	addb	%cl,0x8b(%rax)
000000000000fb46	xchgl	%eax,%edx
000000000000fb48	addl	%eax,(%rax)
000000000000fb4a	addb	%al,0x90(%rbx,%rcx,4)
000000000000fb4e	movb	$0x06,%al
000000000000fb50	addb	%al,(%rax)
000000000000fb52	testl	%r10d,%r10d
000000000000fb55	je	0x0000fe5f
000000000000fb5b	movl	%r15d,0x00000674(%rax)
000000000000fb62	jmp	0x0000fe5f
000000000000fb67	movq	0x000001d0(%rdi),%rdi
000000000000fb6e	callq	0x10000e8d4
000000000000fb73	jmp	0x0000fe5f
000000000000fb78	movq	0x000001d0(%rdi),%rax
000000000000fb7f	cmpb	$0x00,0x00000729(%rax)
000000000000fb86	jne	0x0000fb95
000000000000fb88	cmpb	$0x00,0x0000072a(%rax)
000000000000fb8f	je	0x0000fe5f
000000000000fb95	movq	0x00000098(%rax),%rdx
000000000000fb9c	addq	$0x000111b8,%rdx
000000000000fba3	movl	(%rdx),%eax
000000000000fba5	orl	$0x40000000,%eax
000000000000fbaa	movl	%eax,(%rdx)
000000000000fbac	jmp	0x0000fe5f
000000000000fbb1	movq	0x000001d0(%rdi),%rdi
000000000000fbb8	callq	0x10000f150
000000000000fbbd	jmp	0x0000fe5f
000000000000fbc2	movq	0x000001d0(%rdi),%rdi
000000000000fbc9	callq	0x10000eb14
000000000000fbce	jmp	0x0000fe5f
000000000000fbd3	movq	0x000001d0(%rdi),%rdi
000000000000fbda	callq	0x10000f280
000000000000fbdf	movq	0x000001d0(%r14),%rax
000000000000fbe6	movl	$0x00000001,0x000006b0(%rax)
000000000000fbf0	leaq	0x00002a80(%rip),%rdi
000000000000fbf7	jmp	0x0000fca0
000000000000fbfc	movq	0x000001d0(%rdi),%rax
000000000000fc03	movb	$0x01,0x0000072b(%rax)
000000000000fc0a	movq	0x000001d0(%rdi),%rax
000000000000fc11	movl	0x00000670(%rax),%esi
000000000000fc17	leaq	0x00002a68(%rip),%rdi
000000000000fc1e	xorl	%eax,%eax
000000000000fc20	callq	0x0000fc25
000000000000fc25	movq	0x000001d0(%r14),%rax
000000000000fc2c	movl	0x00000674(%rax),%esi
000000000000fc32	leaq	0x00002a61(%rip),%rdi
000000000000fc39	jmp	0x0000fe58
000000000000fc3e	movq	0x000001d0(%rdi),%rdi
000000000000fc45	callq	0x100002b2a
000000000000fc4a	movl	%eax,%esi
000000000000fc4c	leaq	0x00002a5b(%rip),%rdi
000000000000fc53	jmp	0x0000fe58
000000000000fc58	movq	0x000001d0(%rdi),%rdx
000000000000fc5f	movq	0x00000098(%rdx),%rax
000000000000fc66	addq	$0x00011180,%eax
000000000000fc6c	movw	$0x0080,(%rax)
000000000000fc71	movq	0x00000098(%rdx),%rdx
000000000000fc78	addq	$0x00001184,%rdx
000000000000fc7f	movzwl	(%rdx),%eax
000000000000fc82	orl	$0x10,%eax
000000000000fc85	movw	%ax,(%rdx)
000000000000fc88	movq	0x000001d0(%rdi),%rax
000000000000fc8f	movl	$0x00000000,0x000006b0(%rax)
000000000000fc99	leaq	0x00002a20(%rip),%rdi
000000000000fca0	xorl	%eax,%eax
000000000000fca2	callq	0x0000fca7
000000000000fca7	jmp	0x0000fe5f
000000000000fcac	movq	0x000001d0(%rdi),%rdi
000000000000fcb3	cmpb	$0x00,0x000006f0(%rdi)
000000000000fcba	je	0x0000fe5f
000000000000fcc0	xorl	%esi,%esi
000000000000fcc2	callq	0x100006570
000000000000fcc7	movq	0x000001d0(%r14),%rax
000000000000fcce	movb	$0x00,0x000006f0(%rax)
000000000000fcd5	jmp	0x0000fe5f
000000000000fcda	movq	0x000001d0(%rdi),%rax
000000000000fce1	cmpb	$0x00,0x000006f0(%rax)
000000000000fce8	jne	0x0000fe5f
000000000000fcee	movb	$0x01,0x000006f0(%rax)
000000000000fcf5	jmp	0x0000fd23
000000000000fcf7	movq	0x000001d0(%rdi),%rax
000000000000fcfe	movl	$0x00000001,0x000006fc(%rax)
000000000000fd08	movq	0x000001d0(%r14),%rdi
000000000000fd0f	cmpb	$0x00,0x000006f1(%rdi)
000000000000fd16	je	0x0000fe5f
000000000000fd1c	xorl	%esi,%esi
000000000000fd1e	callq	0x100006570
000000000000fd23	movq	0x000001d0(%r14),%rdi
000000000000fd2a	movl	$0x00000001,%esi
000000000000fd2f	callq	0x100006570
000000000000fd34	jmp	0x0000fe5f
000000000000fd39	movq	0x000001d0(%rdi),%rax
000000000000fd40	movl	$0x00000002,0x000006fc(%rax)
000000000000fd4a	jmp	0x0000fd08
000000000000fd4c	movq	0x000001d0(%rdi),%rax
000000000000fd53	movl	$0x00000004,0x000006fc(%rax)
000000000000fd5d	jmp	0x0000fd08
000000000000fd5f	movq	0x000001d0(%rdi),%rax
000000000000fd66	movb	$0x00,0x0000072a(%rax)
000000000000fd6d	jmp	0x0000fe5f
000000000000fd72	movq	0x000001d0(%rdi),%rax
000000000000fd79	movb	$0x01,0x0000072a(%rax)
000000000000fd80	jmp	0x0000fe5f
000000000000fd85	movq	0x000001d0(%rdi),%rdi
000000000000fd8c	callq	0x100007c04
000000000000fd91	jmp	0x0000fe5f
000000000000fd96	movq	0x000001d0(%rdi),%rdi
000000000000fd9d	callq	0x100007dda
000000000000fda2	jmp	0x0000fe5f
000000000000fda7	movq	0x000001d0(%rdi),%rdi
000000000000fdae	callq	0x100002b46
000000000000fdb3	jmp	0x0000fe5f
000000000000fdb8	movq	0x000001d0(%rdi),%rdi
000000000000fdbf	callq	0x100002b84
000000000000fdc4	jmp	0x0000fe5f
000000000000fdc9	movq	0x000001d0(%rdi),%rdi
000000000000fdd0	callq	0x100002bc2
000000000000fdd5	jmp	0x0000fe5f
000000000000fdda	movq	0x000001d0(%rdi),%rax
000000000000fde1	movq	0x00000098(%rax),%rax
000000000000fde8	movl	0x000113b8(%rax),%esi
000000000000fdee	movl	0x000113bc(%rax),%ebx
000000000000fdf4	movl	0x0001119c(%rax),%edx
000000000000fdfa	movl	%edx,0xcc(%rbp)
000000000000fdfd	movl	0x000111a0(%rax),%r12d
000000000000fe04	leaq	0x000028c5(%rip),%rdi
000000000000fe0b	xorl	%eax,%eax
000000000000fe0d	callq	0x0000fe12
000000000000fe12	movl	%ebx,%esi
000000000000fe14	leaq	0x000028ce(%rip),%rdi
000000000000fe1b	xorl	%eax,%eax
000000000000fe1d	callq	0x0000fe22
000000000000fe22	movl	%r12d,%esi
000000000000fe25	leaq	0x000028d8(%rip),%rdi
000000000000fe2c	xorl	%eax,%eax
000000000000fe2e	callq	0x0000fe33
000000000000fe33	movl	0xcc(%rbp),%esi
000000000000fe36	leaq	0x000028e4(%rip),%rdi
000000000000fe3d	xorl	%eax,%eax
000000000000fe3f	callq	0x0000fe44
000000000000fe44	movq	0x000001d0(%r14),%rax
000000000000fe4b	movl	0x000006d0(%rax),%esi
000000000000fe51	leaq	0x000028e8(%rip),%rdi
000000000000fe58	xorl	%eax,%eax
000000000000fe5a	callq	0x0000fe5f
000000000000fe5f	movq	%r15,%rdx
000000000000fe62	movq	%r13,%rsi
000000000000fe65	movq	%r14,%rdi
000000000000fe68	movq	0x00004fa1(%rip),%rax
000000000000fe6f	movq	0x000007d0(%rax),%r11
000000000000fe76	movq	0xd8(%rbp),%rbx
000000000000fe7a	movq	0xe0(%rbp),%r12
000000000000fe7e	movq	0xe8(%rbp),%r13
000000000000fe82	movq	0xf0(%rbp),%r14
000000000000fe86	movq	0xf8(%rbp),%r15
000000000000fe8a	leave
000000000000fe8b	jmp	*%r11
__Z7Ltl2Bigj:
000000000000fe8e	pushq	%rbp
000000000000fe8f	movq	%rsp,%rbp
000000000000fe92	movl	%edi,%eax
000000000000fe94	andl	$0x0000ff00,%eax
000000000000fe99	shll	$0x08,%eax
000000000000fe9c	movl	%edi,%edx
000000000000fe9e	shll	$0x18,%edx
000000000000fea1	addl	%edx,%eax
000000000000fea3	movl	%edi,%edx
000000000000fea5	andl	$0x00ff0000,%edx
000000000000feab	shrl	$0x08,%edx
000000000000feae	addl	%edx,%eax
000000000000feb0	shrl	$0x18,%edi
000000000000feb3	addl	%edi,%eax
000000000000feb5	leave
000000000000feb6	ret
000000000000feb7	nop
__ZN22AppleIntelHDGraphicsFB8DoI2CAuxEPjcjtccPhS1_:
000000000000feb8	pushq	%rbp
000000000000feb9	movq	%rsp,%rbp
000000000000febc	pushq	%r15
000000000000febe	pushq	%r14
000000000000fec0	pushq	%r13
000000000000fec2	pushq	%r12
000000000000fec4	pushq	%rbx
000000000000fec5	subq	$0x38,%rsp
000000000000fec9	movq	%rdi,0xc8(%rbp)
000000000000fecd	movq	%rsi,%r14
000000000000fed0	movl	%ecx,0xc4(%rbp)
000000000000fed3	movq	0x18(%rbp),%rax
000000000000fed7	movq	%rax,0xb8(%rbp)
000000000000fedb	movq	0x20(%rbp),%r10
000000000000fedf	movl	%edx,%r15d
000000000000fee2	movb	%r9b,0xc3(%rbp)
000000000000fee6	movzbl	0x10(%rbp),%edx
000000000000feea	movb	%dl,0xc2(%rbp)
000000000000feed	movsbl	%bh,%eax
000000000000fef1	movl	%eax,0xb4(%rbp)
000000000000fef4	shll	$0x1c,%eax
000000000000fef7	movzbl	%cl,%edx
000000000000fefa	shll	$0x08,%edx
000000000000fefd	orl	%eax,%edx
000000000000feff	testw	%r8d,%r8d
000000000000ff03	je	0x0000ff0d
000000000000ff05	movzwl	%ax,%eax
000000000000ff09	decl	%eax
000000000000ff0b	orl	%eax,%edx
000000000000ff0d	movl	%edx,%eax
000000000000ff0f	orl	$0x40000000,%eax
000000000000ff14	cmpb	$0x01,0xc3(%rbp)
000000000000ff18	cmovel	%eax,%edx
000000000000ff1b	leaq	0x000e4110(%r14),%r12
000000000000ff22	movl	0x000e4110(%r14),%ecx
000000000000ff29	movl	%ecx,%eax
000000000000ff2b	andl	$0x80000000,%eax
000000000000ff30	movl	$0xe00002d5,%esi
000000000000ff35	cmpl	$0x80000000,%eax
000000000000ff3a	je	0x00010122
000000000000ff40	movl	%ecx,0x000e4110(%r14)
000000000000ff47	movzwl	%ax,%r13d
000000000000ff4b	leal	0x03(%r13),%edi
000000000000ff4f	cmpb	$0x01,0xc2(%rbp)
000000000000ff53	je	0x0000ff5d
000000000000ff55	movzwl	%ax,%r13d
000000000000ff59	leal	0x04(%r13),%edi
000000000000ff5d	movl	%edx,0x000e4114(%r14)
000000000000ff64	xorl	%esi,%esi
000000000000ff66	testb	%r15b,%r15b
000000000000ff69	je	0x0000ffa7
000000000000ff6b	jmp	0x0000ffac
000000000000ff6d	movl	%esi,%eax
000000000000ff6f	movq	0xb8(%rbp),%rdx
000000000000ff73	movl	(%rax,%rdx),%ecx
000000000000ff76	movl	%ecx,%edx
000000000000ff78	andl	$0x0000ff00,%edx
000000000000ff7e	shll	$0x08,%edx
000000000000ff81	movl	%ecx,%eax
000000000000ff83	shll	$0x18,%eax
000000000000ff86	addl	%eax,%edx
000000000000ff88	movl	%ecx,%eax
000000000000ff8a	andl	$0x00ff0000,%eax
000000000000ff8f	shrl	$0x08,%eax
000000000000ff92	addl	%eax,%edx
000000000000ff94	shrl	$0x18,%ecx
000000000000ff97	addl	%ecx,%edx
000000000000ff99	leal	0x000e4118(%rsi),%eax
000000000000ff9f	addq	%r14,%rax
000000000000ffa2	movl	%edx,(%rax)
000000000000ffa4	addl	$0x04,%esi
000000000000ffa7	cmpl	%r13d,%esi
000000000000ffaa	jb	0x0000ff6d
000000000000ffac	shll	$0x14,%edi
000000000000ffaf	orl	$0x8c00003e,%edi
000000000000ffb5	movl	%edi,(%r12)
000000000000ffb9	movl	$0x0000012c,%edi
000000000000ffbe	movq	%r10,0xa8(%rbp)
000000000000ffc2	callq	0x0000ffc7
000000000000ffc7	movl	(%r12),%eax
000000000000ffcb	movl	$0x00000001,%ebx
000000000000ffd0	movq	0xa8(%rbp),%r10
000000000000ffd4	testl	$0x40000000,%eax
000000000000ffd9	je	0x0000ffed
000000000000ffdb	movl	$0xe00002d6,%esi
000000000000ffe0	testl	$0x10000000,%eax
000000000000ffe5	jne	0x00010122
000000000000ffeb	jmp	0x00010015
000000000000ffed	movl	$0x0000012c,%edi
000000000000fff2	movq	%r10,0xa8(%rbp)
000000000000fff6	callq	0x0000fffb
000000000000fffb	movl	(%r12),%eax
000000000000ffff	incl	%ebx
0000000000010001	cmpw	$0x64,%bx
0000000000010005	movq	0xa8(%rbp),%r10
0000000000010009	jne	0x0000ffd4
000000000001000b	movl	$0xe00002ed,%esi
0000000000010010	jmp	0x00010122
0000000000010015	testl	$0x02000000,%eax
000000000001001a	jne	0x0001011d
0000000000010020	movl	0x000e4114(%r14),%edx
0000000000010027	movl	%edx,%eax
0000000000010029	andl	$0xf0000000,%eax
000000000001002e	cmpl	$0x20000000,%eax
0000000000010033	jne	0x00010070
0000000000010035	movsbl	0xc2(%rbp),%eax
0000000000010039	movq	%r10,0x20(%rbp)
000000000001003d	movq	0xb8(%rbp),%rdx
0000000000010041	movq	%rdx,0x18(%rbp)
0000000000010045	movl	%eax,0x10(%rbp)
0000000000010048	movsbl	0xc3(%rbp),%r9d
000000000001004d	movl	%r13d,%r8d
0000000000010050	movl	0xc4(%rbp),%ecx
0000000000010053	movl	0xb4(%rbp),%edx
0000000000010056	movq	%r14,%rsi
0000000000010059	movq	0xc8(%rbp),%rdi
000000000001005d	addq	$0x38,%rsp
0000000000010061	popq	%rbx
0000000000010062	popq	%r12
0000000000010064	popq	%r13
0000000000010066	popq	%r14
0000000000010068	popq	%r15
000000000001006a	leave
000000000001006b	jmp	0x10000feb8
0000000000010070	cmpl	$0x40000000,%eax
0000000000010075	je	0x0001011d
000000000001007b	xorl	%esi,%esi
000000000001007d	decb	%r15b
0000000000010080	jne	0x00010122
0000000000010086	movl	%edx,%eax
0000000000010088	shrl	$0x10,%eax
000000000001008b	movb	%al,(%r10)
000000000001008e	movl	%edx,%eax
0000000000010090	shrl	$0x08,%eax
0000000000010093	movb	%al,0x01(%r10)
0000000000010097	movb	%dl,0x02(%r10)
000000000001009b	movl	0x000e4118(%r14),%edx
00000000000100a2	movl	%edx,%eax
00000000000100a4	shrl	$0x18,%eax
00000000000100a7	movb	%al,0x03(%r10)
00000000000100ab	movl	%edx,%eax
00000000000100ad	shrl	$0x10,%eax
00000000000100b0	movb	%al,0x04(%r10)
00000000000100b4	movl	%edx,%eax
00000000000100b6	shrl	$0x08,%eax
00000000000100b9	movb	%al,0x05(%r10)
00000000000100bd	movb	%dl,0x06(%r10)
00000000000100c1	movl	0x000e411c(%r14),%edx
00000000000100c8	movl	%edx,%eax
00000000000100ca	shrl	$0x18,%eax
00000000000100cd	movb	%al,0x07(%r10)
00000000000100d1	movl	%edx,%eax
00000000000100d3	shrl	$0x10,%eax
00000000000100d6	movb	%al,0x08(%r10)
00000000000100da	movl	%edx,%eax
00000000000100dc	shrl	$0x08,%eax
00000000000100df	movb	%al,0x09(%r10)
00000000000100e3	movb	%dl,0x0a(%r10)
00000000000100e7	movl	0x000e4120(%r14),%edx
00000000000100ee	movl	%edx,%eax
00000000000100f0	shrl	$0x18,%eax
00000000000100f3	movb	%al,0x0b(%r10)
00000000000100f7	movl	%edx,%eax
00000000000100f9	shrl	$0x10,%eax
00000000000100fc	movb	%al,0x0c(%r10)
0000000000010100	movl	%edx,%eax
0000000000010102	shrl	$0x08,%eax
0000000000010105	movb	%al,0x0d(%r10)
0000000000010109	movb	%dl,0x0e(%r10)
000000000001010d	movl	0x000e4124(%r14),%eax
0000000000010114	shrl	$0x18,%eax
0000000000010117	movb	%al,0x0f(%r10)
000000000001011b	jmp	0x00010122
000000000001011d	movl	$0xe00002bc,%esi
0000000000010122	movl	%esi,%eax
0000000000010124	addq	$0x38,%rsp
0000000000010128	popq	%rbx
0000000000010129	popq	%r12
000000000001012b	popq	%r13
000000000001012d	popq	%r14
000000000001012f	popq	%r15
0000000000010131	leave
0000000000010132	ret
0000000000010133	nop
__ZN22AppleIntelHDGraphicsFB10getEDIDAuxEPjPhj:
0000000000010134	pushq	%rbp
0000000000010135	movq	%rsp,%rbp
0000000000010138	pushq	%r15
000000000001013a	pushq	%r14
000000000001013c	pushq	%r13
000000000001013e	pushq	%r12
0000000000010140	pushq	%rbx
0000000000010141	subq	$0x58,%rsp
0000000000010145	movq	%rdi,%r14
0000000000010148	movq	%rsi,%r13
000000000001014b	movq	%rdx,%r15
000000000001014e	movq	0x00004cc3(%rip),%rax
0000000000010155	movq	(%rax),%rdx
0000000000010158	movq	%rdx,0xc8(%rbp)
000000000001015c	xorl	%edx,%edx
000000000001015e	movb	$0x00,0xb0(%rbp)
0000000000010162	movq	%r15,0x10(%rsp)
0000000000010167	leaq	0xb0(%rbp),%rcx
000000000001016b	movq	%rcx,0xa8(%rbp)
000000000001016f	movq	%rcx,0x08(%rsp)
0000000000010174	movl	$0x00000001,(%rsp)
000000000001017b	movl	$0x00000001,%r9d
0000000000010181	xorl	%r8d,%r8d
0000000000010184	movl	$0x00000050,%ecx
0000000000010189	callq	0x10000feb8
000000000001018e	movb	$0x00,0xb0(%rbp)
0000000000010192	movq	%r15,0x10(%rsp)
0000000000010197	movq	0xa8(%rbp),%rax
000000000001019b	movq	%rax,0x08(%rsp)
00000000000101a0	movl	$0x00000000,(%rsp)
00000000000101a7	movl	$0x00000001,%r9d
00000000000101ad	movl	$0x00000001,%r8d
00000000000101b3	movl	$0x00000050,%ecx
00000000000101b8	xorl	%edx,%edx
00000000000101ba	movq	%r13,%rsi
00000000000101bd	movq	%r14,%rdi
00000000000101c0	callq	0x10000feb8
00000000000101c5	movb	$0x00,0xb0(%rbp)
00000000000101c9	movq	%r15,0x10(%rsp)
00000000000101ce	movq	0xa8(%rbp),%rdx
00000000000101d2	movq	%rdx,0x08(%rsp)
00000000000101d7	movl	$0x00000001,(%rsp)
00000000000101de	movl	$0x00000001,%r9d
00000000000101e4	xorl	%r8d,%r8d
00000000000101e7	movl	$0x00000050,%ecx
00000000000101ec	xorl	%edx,%edx
00000000000101ee	movq	%r13,%rsi
00000000000101f1	movq	%r14,%rdi
00000000000101f4	callq	0x10000feb8
00000000000101f9	movq	%r15,%rbx
00000000000101fc	xorl	%r12d,%r12d
00000000000101ff	movb	$0x00,0xb0(%rbp)
0000000000010203	movq	%rbx,0x10(%rsp)
0000000000010208	movq	0xa8(%rbp),%rcx
000000000001020c	movq	%rcx,0x08(%rsp)
0000000000010211	movl	$0x00000000,(%rsp)
0000000000010218	movl	$0x00000001,%r9d
000000000001021e	movl	$0x0000000f,%r8d
0000000000010224	movl	$0x00000050,%ecx
0000000000010229	movl	$0x00000001,%edx
000000000001022e	movq	%r13,%rsi
0000000000010231	movq	%r14,%rdi
0000000000010234	callq	0x10000feb8
0000000000010239	testl	%eax,%eax
000000000001023b	jne	0x00010299
000000000001023d	movl	$0x0000012c,%edi
0000000000010242	callq	0x00010247
0000000000010247	incl	%r12d
000000000001024a	addq	$0x0f,%rbx
000000000001024e	cmpl	$0x08,%r12d
0000000000010252	jne	0x000101ff
0000000000010254	movl	$0x0000012c,%edi
0000000000010259	callq	0x0001025e
000000000001025e	movb	$0x00,0xb0(%rbp)
0000000000010262	leaq	0x78(%r15),%rax
0000000000010266	movq	%rax,0x10(%rsp)
000000000001026b	movq	0xa8(%rbp),%rax
000000000001026f	movq	%rax,0x08(%rsp)
0000000000010274	movl	$0x00000000,(%rsp)
000000000001027b	xorl	%r9d,%r9d
000000000001027e	movl	$0x0000000f,%r8d
0000000000010284	movl	$0x00000050,%ecx
0000000000010289	movl	$0x00000001,%edx
000000000001028e	movq	%r13,%rsi
0000000000010291	movq	%r14,%rdi
0000000000010294	callq	0x10000feb8
0000000000010299	movq	0x00004b78(%rip),%rdx
00000000000102a0	movq	0xc8(%rbp),%rcx
00000000000102a4	xorq	(%rdx),%rcx
00000000000102a7	je	0x000102ae
00000000000102a9	callq	0x000102ae
00000000000102ae	addq	$0x58,%rsp
00000000000102b2	popq	%rbx
00000000000102b3	popq	%r12
00000000000102b5	popq	%r13
00000000000102b7	popq	%r14
00000000000102b9	popq	%r15
00000000000102bb	leave
00000000000102bc	ret
00000000000102bd	nop
__ZN22AppleIntelHDGraphicsFB11DoNativeAuxEPjcjtPhS1_:
00000000000102be	pushq	%rbp
00000000000102bf	movq	%rsp,%rbp
00000000000102c2	pushq	%r15
00000000000102c4	pushq	%r14
00000000000102c6	pushq	%r13
00000000000102c8	pushq	%r12
00000000000102ca	pushq	%rbx
00000000000102cb	subq	$0x28,%rsp
00000000000102cf	movq	%rdi,0xc8(%rbp)
00000000000102d3	movq	%rsi,%r13
00000000000102d6	movl	%ecx,0xc4(%rbp)
00000000000102d9	movq	%r9,%r15
00000000000102dc	movq	0x10(%rbp),%r9
00000000000102e0	leaq	0x000e4110(%rsi),%r12
00000000000102e7	movl	0x000e4110(%rsi),%esi
00000000000102ed	movl	%esi,%eax
00000000000102ef	andl	$0x80000000,%eax
00000000000102f4	cmpl	$0x80000000,%eax
00000000000102f9	je	0x000104f9
00000000000102ff	movzwl	%ax,%r14d
0000000000010303	movsbl	%dl,%eax
0000000000010306	movl	%eax,0xc0(%rbp)
0000000000010309	movl	%eax,%ecx
000000000001030b	orl	$0x08,%ecx
000000000001030e	shll	$0x1c,%ecx
0000000000010311	movl	0xc4(%rbp),%eax
0000000000010314	shll	$0x08,%eax
0000000000010317	orl	%eax,%ecx
0000000000010319	leal	0xff(%r14),%eax
000000000001031d	orl	%eax,%ecx
000000000001031f	movl	%esi,0x000e4110(%r13)
0000000000010326	movl	0x000e4110(%r13),%eax
000000000001032d	cmpb	$0x01,%dl
0000000000010330	je	0x00010500
0000000000010336	leal	0x04(%r14),%r8d
000000000001033a	shll	$0x14,%r8d
000000000001033e	orl	$0x8c00003e,%r8d
0000000000010345	movl	%ecx,0x000e4114(%r13)
000000000001034c	xorl	%esi,%esi
000000000001034e	testb	%dl,%dl
0000000000010350	je	0x0001038d
0000000000010352	jmp	0x00010395
0000000000010354	movl	%esi,%eax
0000000000010356	movl	(%rax,%r15),%ecx
000000000001035a	movl	%ecx,%edx
000000000001035c	andl	$0x0000ff00,%edx
0000000000010362	shll	$0x08,%edx
0000000000010365	movl	%ecx,%eax
0000000000010367	shll	$0x18,%eax
000000000001036a	addl	%eax,%edx
000000000001036c	movl	%ecx,%eax
000000000001036e	andl	$0x00ff0000,%eax
0000000000010373	shrl	$0x08,%eax
0000000000010376	addl	%eax,%edx
0000000000010378	shrl	$0x18,%ecx
000000000001037b	addl	%ecx,%edx
000000000001037d	movzwl	%di,%eax
0000000000010380	leaq	0x000e4114(%r13,%rax),%rax
0000000000010388	movl	%edx,(%rax)
000000000001038a	addl	$0x04,%esi
000000000001038d	leal	0x04(%rsi),%edi
0000000000010390	cmpl	%r14d,%esi
0000000000010393	jb	0x00010354
0000000000010395	movl	%r8d,(%r12)
0000000000010399	movl	$0x0000012c,%edi
000000000001039e	movq	%r9,0xb8(%rbp)
00000000000103a2	callq	0x000103a7
00000000000103a7	movl	(%r12),%edx
00000000000103ab	movl	$0x00000001,%ebx
00000000000103b0	movq	0xb8(%rbp),%r9
00000000000103b4	testl	$0x40000000,%edx
00000000000103ba	je	0x000103cf
00000000000103bc	movl	$0xe00002d6,%eax
00000000000103c1	testl	$0x10000000,%edx
00000000000103c7	jne	0x00010512
00000000000103cd	jmp	0x000103f7
00000000000103cf	movl	$0x0000012c,%edi
00000000000103d4	movq	%r9,0xb8(%rbp)
00000000000103d8	callq	0x000103dd
00000000000103dd	movl	(%r12),%edx
00000000000103e1	incl	%ebx
00000000000103e3	cmpw	$0x14,%bx
00000000000103e7	movq	0xb8(%rbp),%r9
00000000000103eb	jne	0x000103b4
00000000000103ed	movl	$0xe00002ed,%eax
00000000000103f2	jmp	0x00010512
00000000000103f7	andl	$0x02000000,%edx
00000000000103fd	jne	0x000104f9
0000000000010403	movl	0x000e4114(%r13),%ecx
000000000001040a	movl	%ecx,%edx
000000000001040c	andl	$0xf0000000,%edx
0000000000010412	cmpl	$0x20000000,%edx
0000000000010418	jne	0x00010444
000000000001041a	movq	%r9,0x10(%rbp)
000000000001041e	movq	%r15,%r9
0000000000010421	movl	%r14d,%r8d
0000000000010424	movl	0xc4(%rbp),%ecx
0000000000010427	movl	0xc0(%rbp),%edx
000000000001042a	movq	%r13,%rsi
000000000001042d	movq	0xc8(%rbp),%rdi
0000000000010431	addq	$0x28,%rsp
0000000000010435	popq	%rbx
0000000000010436	popq	%r12
0000000000010438	popq	%r13
000000000001043a	popq	%r14
000000000001043c	popq	%r15
000000000001043e	leave
000000000001043f	jmp	0x1000102be
0000000000010444	movl	$0xe00002bc,%eax
0000000000010449	cmpl	$0x40000000,%edx
000000000001044f	je	0x00010512
0000000000010455	xorl	%eax,%eax
0000000000010457	testq	%r9,%r9
000000000001045a	je	0x00010512
0000000000010460	movl	%ecx,%eax
0000000000010462	shrl	$0x10,%eax
0000000000010465	movb	%al,(%r9)
0000000000010468	movl	%ecx,%eax
000000000001046a	shrl	$0x08,%eax
000000000001046d	movb	%al,0x01(%r9)
0000000000010471	movb	%cl,0x02(%r9)
0000000000010475	movl	0x000e4118(%r13),%edx
000000000001047c	movl	%edx,%eax
000000000001047e	shrl	$0x18,%eax
0000000000010481	movb	%al,0x03(%r9)
0000000000010485	movl	%edx,%eax
0000000000010487	shrl	$0x10,%eax
000000000001048a	movb	%al,0x04(%r9)
000000000001048e	movl	%edx,%eax
0000000000010490	shrl	$0x08,%eax
0000000000010493	movb	%al,0x05(%r9)
0000000000010497	movb	%dl,0x06(%r9)
000000000001049b	movl	0x000e411c(%r13),%edx
00000000000104a2	movl	%edx,%eax
00000000000104a4	shrl	$0x18,%eax
00000000000104a7	movb	%al,0x07(%r9)
00000000000104ab	movl	%edx,%eax
00000000000104ad	shrl	$0x10,%eax
00000000000104b0	movb	%al,0x08(%r9)
00000000000104b4	movl	%edx,%eax
00000000000104b6	shrl	$0x08,%eax
00000000000104b9	movb	%al,0x09(%r9)
00000000000104bd	movb	%dl,0x0a(%r9)
00000000000104c1	movl	0x000e4120(%r13),%edx
00000000000104c8	movl	%edx,%eax
00000000000104ca	shrl	$0x18,%eax
00000000000104cd	movb	%al,0x0b(%r9)
00000000000104d1	movl	%edx,%eax
00000000000104d3	shrl	$0x10,%eax
00000000000104d6	movb	%al,0x0c(%r9)
00000000000104da	movl	%edx,%eax
00000000000104dc	shrl	$0x08,%eax
00000000000104df	movb	%al,0x0d(%r9)
00000000000104e3	movb	%dl,0x0e(%r9)
00000000000104e7	movl	0x000e4124(%r13),%eax
00000000000104ee	shrl	$0x18,%eax
00000000000104f1	movb	%al,0x0f(%r9)
00000000000104f5	xorl	%eax,%eax
00000000000104f7	jmp	0x00010512
00000000000104f9	movl	$0xe00002d5,%eax
00000000000104fe	jmp	0x00010512
0000000000010500	movl	%ecx,0x000e4114(%r13)
0000000000010507	movl	$0x8c40003e,%r8d
000000000001050d	jmp	0x100010395
0000000000010512	addq	$0x28,%rsp
0000000000010516	popq	%rbx
0000000000010517	popq	%r12
0000000000010519	popq	%r13
000000000001051b	popq	%r14
000000000001051d	popq	%r15
000000000001051f	leave
0000000000010520	ret
0000000000010521	nop
__ZN22AppleIntelHDGraphicsFB16DoAuxTransactionEP9I2CParams:
0000000000010522	pushq	%rbp
0000000000010523	movq	%rsp,%rbp
0000000000010526	subq	$0x40,%rsp
000000000001052a	movq	%rbx,0xd8(%rbp)
000000000001052e	movq	%r12,0xe0(%rbp)
0000000000010532	movq	%r13,0xe8(%rbp)
0000000000010536	movq	%r14,0xf0(%rbp)
000000000001053a	movq	%r15,0xf8(%rbp)
000000000001053e	movq	%rdi,%r12
0000000000010541	movq	0x10(%rsi),%rbx
0000000000010545	cmpl	$0x7f,0x28(%rbx)
0000000000010549	ja	0x000106ae
000000000001054f	cmpl	$0x7f,0x38(%rbx)
0000000000010553	ja	0x000106ae
0000000000010559	leaq	0x00002210(%rip),%rdi
0000000000010560	xorl	%eax,%eax
0000000000010562	callq	0x00010567
0000000000010567	cmpl	$0x04,(%rbx)
000000000001056a	jne	0x000105fe
0000000000010570	movl	0x28(%rbx),%edx
0000000000010573	testl	%edx,%edx
0000000000010575	je	0x000105fe
000000000001057b	movl	0x08(%rbx),%r14d
000000000001057f	cmpl	$0x0007fffe,%r14d
0000000000010586	ja	0x00010602
0000000000010588	leal	(%r14,%rdx),%eax
000000000001058c	cmpl	$0x0007fffe,%eax
0000000000010591	ja	0x00010602
0000000000010593	movl	%edx,%r13d
0000000000010596	movq	0x44(%rbx),%r15
000000000001059a	cmpw	$0x0f,%r13d
000000000001059f	jbe	0x000105d8
00000000000105a1	movq	0x00000098(%r12),%rsi
00000000000105a9	movq	$0x00000000,(%rsp)
00000000000105b1	movq	%r15,%r9
00000000000105b4	movl	$0x00000010,%r8d
00000000000105ba	movl	%r14d,%ecx
00000000000105bd	xorl	%edx,%edx
00000000000105bf	movq	%r12,%rdi
00000000000105c2	callq	0x1000102be
00000000000105c7	subw	$0x10,%r13d
00000000000105cc	je	0x00010607
00000000000105ce	addq	$0x10,%r15
00000000000105d2	addl	$0x10,%r14d
00000000000105d6	jmp	0x0001059a
00000000000105d8	movq	0x00000098(%r12),%rsi
00000000000105e0	movq	$0x00000000,(%rsp)
00000000000105e8	movq	%r15,%r9
00000000000105eb	movzwl	%bp,%r8d
00000000000105ef	movl	%r14d,%ecx
00000000000105f2	xorl	%edx,%edx
00000000000105f4	movq	%r12,%rdi
00000000000105f7	callq	0x1000102be
00000000000105fc	jmp	0x00010607
00000000000105fe	xorl	%eax,%eax
0000000000010600	jmp	0x00010607
0000000000010602	movl	$0xe00002c2,%eax
0000000000010607	cmpl	$0x04,0x04(%rbx)
000000000001060b	jne	0x000106ba
0000000000010611	movl	0x38(%rbx),%edx
0000000000010614	testl	%edx,%edx
0000000000010616	je	0x000106ba
000000000001061c	movl	0x0c(%rbx),%r14d
0000000000010620	cmpl	$0x0007fffe,%r14d
0000000000010627	ja	0x000106b5
000000000001062d	leal	(%r14,%rdx),%eax
0000000000010631	cmpl	$0x0007fffe,%eax
0000000000010636	ja	0x000106b5
0000000000010638	movl	%edx,%r13d
000000000001063b	movq	0x4c(%rbx),%rbx
000000000001063f	movzwl	%dx,%edx
0000000000010642	xorl	%esi,%esi
0000000000010644	movq	%rbx,%rdi
0000000000010647	callq	0x0001064c
000000000001064c	cmpw	$0x0f,%r13d
0000000000010651	jbe	0x00010689
0000000000010653	movq	0x00000098(%r12),%rsi
000000000001065b	movq	%rbx,(%rsp)
000000000001065f	xorl	%r9d,%r9d
0000000000010662	movl	$0x00000010,%r8d
0000000000010668	movl	%r14d,%ecx
000000000001066b	movl	$0x00000001,%edx
0000000000010670	movq	%r12,%rdi
0000000000010673	callq	0x1000102be
0000000000010678	subw	$0x10,%r13d
000000000001067d	je	0x000106ba
000000000001067f	addq	$0x10,%rbx
0000000000010683	addl	$0x10,%r14d
0000000000010687	jmp	0x0001064c
0000000000010689	movq	0x00000098(%r12),%rsi
0000000000010691	movq	%rbx,(%rsp)
0000000000010695	xorl	%r9d,%r9d
0000000000010698	movzwl	%bp,%r8d
000000000001069c	movl	%r14d,%ecx
000000000001069f	movl	$0x00000001,%edx
00000000000106a4	movq	%r12,%rdi
00000000000106a7	callq	0x1000102be
00000000000106ac	jmp	0x000106ba
00000000000106ae	movl	$0xe00002c7,%eax
00000000000106b3	jmp	0x000106ba
00000000000106b5	movl	$0xe00002c2,%eax
00000000000106ba	movq	0xd8(%rbp),%rbx
00000000000106be	movq	0xe0(%rbp),%r12
00000000000106c2	movq	0xe8(%rbp),%r13
00000000000106c6	movq	0xf0(%rbp),%r14
00000000000106ca	movq	0xf8(%rbp),%r15
00000000000106ce	leave
00000000000106cf	ret
__ZN22AppleIntelHDGraphicsFB11DoLinkTrainEPj:
00000000000106d0	pushq	%rbp
00000000000106d1	movq	%rsp,%rbp
00000000000106d4	addq	$0x80,%rsp
00000000000106d8	movq	%rbx,0xd8(%rbp)
00000000000106dc	movq	%r12,0xe0(%rbp)
00000000000106e0	movq	%r13,0xe8(%rbp)
00000000000106e4	movq	%r14,0xf0(%rbp)
00000000000106e8	movq	%r15,0xf8(%rbp)
00000000000106ec	movq	%rdi,%r12
00000000000106ef	movq	%rsi,%rbx
00000000000106f2	movq	0x0000471f(%rip),%rax
00000000000106f9	movq	(%rax),%rdx
00000000000106fc	movq	%rdx,0xc8(%rbp)
0000000000010700	xorl	%edx,%edx
0000000000010702	leaq	0x000e4300(%rsi),%r15
0000000000010709	movl	0x000e4300(%rsi),%eax
000000000001070f	orl	$0x20000000,%eax
0000000000010714	movl	%eax,0x000e4300(%rsi)
000000000001071a	movl	$0x00004268,%edi
000000000001071f	callq	0x00010724
0000000000010724	movl	0x000e4300(%rbx),%eax
000000000001072a	andl	$0x7fffffff,%eax
000000000001072f	movl	%eax,0x000e4300(%rbx)
0000000000010735	movl	0x000e4300(%rbx),%eax
000000000001073b	orl	$0x00180000,%eax
0000000000010740	movl	%eax,0x000e4300(%rbx)
0000000000010746	movl	0x000e4300(%rbx),%eax
000000000001074c	orl	$0x80000000,%eax
0000000000010751	movl	%eax,0x000e4300(%rbx)
0000000000010757	movb	$0x0a,0xb0(%rbp)
000000000001075b	leaq	0xb0(%rbp),%r14
000000000001075f	leaq	0xa0(%rbp),%r13
0000000000010763	movq	%r13,(%rsp)
0000000000010767	movq	%r14,%r9
000000000001076a	movl	$0x00000001,%r8d
0000000000010770	movl	$0x00000100,%ecx
0000000000010775	xorl	%edx,%edx
0000000000010777	movq	%rbx,%rsi
000000000001077a	movq	%r12,%rdi
000000000001077d	callq	0x1000102be
0000000000010782	testl	%eax,%eax
0000000000010784	jne	0x00010a7f
000000000001078a	movb	$0x04,0xb0(%rbp)
000000000001078e	movq	%r13,(%rsp)
0000000000010792	movq	%r14,%r9
0000000000010795	movl	$0x00000001,%r8d
000000000001079b	movl	$0x00000101,%ecx
00000000000107a0	xorl	%edx,%edx
00000000000107a2	movq	%rbx,%rsi
00000000000107a5	movq	%r12,%rdi
00000000000107a8	callq	0x1000102be
00000000000107ad	testl	%eax,%eax
00000000000107af	jne	0x00010a7f
00000000000107b5	movl	0x000e4300(%rbx),%eax
00000000000107bb	andl	$0xcfffffff,%eax
00000000000107c0	movl	%eax,0x000e4300(%rbx)
00000000000107c6	movb	$0x00,0xb1(%rbp)
00000000000107ca	movb	$0x00,0xb2(%rbp)
00000000000107ce	movb	$0x00,0xb3(%rbp)
00000000000107d2	movb	$0x00,0xb4(%rbp)
00000000000107d6	movb	$0x01,0xb0(%rbp)
00000000000107da	movq	%r13,(%rsp)
00000000000107de	movq	%r14,%r9
00000000000107e1	movl	$0x00000005,%r8d
00000000000107e7	movl	$0x00000102,%ecx
00000000000107ec	xorl	%edx,%edx
00000000000107ee	movq	%rbx,%rsi
00000000000107f1	movq	%r12,%rdi
00000000000107f4	callq	0x1000102be
00000000000107f9	testl	%eax,%eax
00000000000107fb	jne	0x00010a7f
0000000000010801	movb	$0x00,0x94(%rbp)
0000000000010805	movb	$0x00,0x95(%rbp)
0000000000010809	movb	$0x00,0x96(%rbp)
000000000001080d	movb	$0x00,0x97(%rbp)
0000000000010811	movl	$0x00000000,0x98(%rbp)
0000000000010818	movl	(%r15),%esi
000000000001081b	andl	$0xf03fffff,%esi
0000000000010821	movsbl	0x95(%rbp),%ecx
0000000000010825	movsbl	0x94(%rbp),%eax
0000000000010829	shll	$0x19,%eax
000000000001082c	movl	%ecx,%edx
000000000001082e	shll	$0x16,%edx
0000000000010831	orl	%edx,%eax
0000000000010833	orl	%esi,%eax
0000000000010835	movl	%eax,(%r15)
0000000000010838	shll	$0x03,%ecx
000000000001083b	movzbl	0x94(%rbp),%eax
000000000001083f	orl	%ecx,%eax
0000000000010841	movzbl	0x96(%rbp),%edx
0000000000010845	shll	$0x05,%edx
0000000000010848	orl	%eax,%edx
000000000001084a	movzbl	0x97(%rbp),%eax
000000000001084e	shll	$0x02,%eax
0000000000010851	orl	%edx,%eax
0000000000010853	movb	%al,0xb0(%rbp)
0000000000010856	movq	%r13,(%rsp)
000000000001085a	movq	%r14,%r9
000000000001085d	movl	$0x00000004,%r8d
0000000000010863	movl	$0x00000103,%ecx
0000000000010868	xorl	%edx,%edx
000000000001086a	movq	%rbx,%rsi
000000000001086d	movq	%r12,%rdi
0000000000010870	callq	0x1000102be
0000000000010875	testl	%eax,%eax
0000000000010877	jne	0x00010a7f
000000000001087d	movl	$0x00000064,%edi
0000000000010882	callq	0x00010887
0000000000010887	movb	$0x00,0xb0(%rbp)
000000000001088b	movq	%r13,(%rsp)
000000000001088f	movq	%r14,%r9
0000000000010892	movl	$0x00000001,%r8d
0000000000010898	movl	$0x00000202,%ecx
000000000001089d	movl	$0x00000001,%edx
00000000000108a2	movq	%rbx,%rsi
00000000000108a5	movq	%r12,%rdi
00000000000108a8	callq	0x1000102be
00000000000108ad	testl	%eax,%eax
00000000000108af	jne	0x00010a7f
00000000000108b5	testb	$0x01,0xa0(%rbp)
00000000000108b9	jne	0x0001094b
00000000000108bf	movb	$0x00,0xb0(%rbp)
00000000000108c3	movq	%r13,(%rsp)
00000000000108c7	movq	%r14,%r9
00000000000108ca	movl	$0x00000001,%r8d
00000000000108d0	movl	$0x00000206,%ecx
00000000000108d5	movl	$0x00000001,%edx
00000000000108da	movq	%rbx,%rsi
00000000000108dd	movq	%r12,%rdi
00000000000108e0	callq	0x1000102be
00000000000108e5	testl	%eax,%eax
00000000000108e7	jne	0x00010a7f
00000000000108ed	movzbl	0xa0(%rbp),%eax
00000000000108f1	movl	%eax,%ecx
00000000000108f3	andl	$0x03,%ecx
00000000000108f6	movb	%cl,0x94(%rbp)
00000000000108f9	shrb	$0x02,%al
00000000000108fc	andl	$0x03,%eax
00000000000108ff	movb	%al,0x95(%rbp)
0000000000010902	movb	$0x00,0x96(%rbp)
0000000000010906	decb	%al
0000000000010908	jle	0x00010912
000000000001090a	movb	$0x02,0x95(%rbp)
000000000001090e	movb	$0x01,0x96(%rbp)
0000000000010912	movb	$0x00,0x97(%rbp)
0000000000010916	cmpb	$0x01,0x94(%rbp)
000000000001091a	jle	0x00010924
000000000001091c	movb	$0x02,0x94(%rbp)
0000000000010920	movb	$0x01,0x97(%rbp)
0000000000010924	movl	$0x0000012c,%edi
0000000000010929	callq	0x0001092e
000000000001092e	cmpl	$0x05,0x98(%rbp)
0000000000010932	jne	0x0001093e
0000000000010934	movl	$0xe00002cc,%eax
0000000000010939	jmp	0x00010a7f
000000000001093e	incl	0x98(%rbp)
0000000000010941	cmpl	$0x06,0x98(%rbp)
0000000000010945	jne	0x100010818
000000000001094b	movl	(%r15),%eax
000000000001094e	orl	$0x10000000,%eax
0000000000010953	movl	%eax,0x9c(%rbp)
0000000000010956	movl	%eax,(%r15)
0000000000010959	movb	$0x02,0xb0(%rbp)
000000000001095d	movq	%r13,(%rsp)
0000000000010961	movq	%r14,%r9
0000000000010964	movl	$0x00000001,%r8d
000000000001096a	movl	$0x00000102,%ecx
000000000001096f	xorl	%edx,%edx
0000000000010971	movq	%rbx,%rsi
0000000000010974	movq	%r12,%rdi
0000000000010977	callq	0x1000102be
000000000001097c	testl	%eax,%eax
000000000001097e	jne	0x00010a7f
0000000000010984	movb	$0x00,0xb0(%rbp)
0000000000010988	movq	%r13,(%rsp)
000000000001098c	movq	%r14,%r9
000000000001098f	movl	$0x00000001,%r8d
0000000000010995	movl	$0x00000206,%ecx
000000000001099a	movl	$0x00000001,%edx
000000000001099f	movq	%rbx,%rsi
00000000000109a2	movq	%r12,%rdi
00000000000109a5	callq	0x1000102be
00000000000109aa	testl	%eax,%eax
00000000000109ac	jne	0x00010a7f
00000000000109b2	andl	$0xf03fffff,0x9c(%rbp)
00000000000109b9	movsbl	0x95(%rbp),%ecx
00000000000109bd	movsbl	0x94(%rbp),%eax
00000000000109c1	shll	$0x19,%eax
00000000000109c4	movl	%ecx,%edx
00000000000109c6	shll	$0x16,%edx
00000000000109c9	orl	%edx,%eax
00000000000109cb	orl	0x9c(%rbp),%eax
00000000000109ce	movl	%eax,(%r15)
00000000000109d1	andl	$0x03,%ecx
00000000000109d4	shll	$0x03,%ecx
00000000000109d7	orb	%cl,0x94(%rbp)
00000000000109da	shlb	$0x05,0x96(%rbp)
00000000000109de	movzbl	0x94(%rbp),%edx
00000000000109e2	orb	%dl,0x96(%rbp)
00000000000109e5	movzbl	0x97(%rbp),%eax
00000000000109e9	shll	$0x02,%eax
00000000000109ec	orb	0x96(%rbp),%al
00000000000109ef	movb	%al,0xb0(%rbp)
00000000000109f2	movq	%r13,(%rsp)
00000000000109f6	movq	%r14,%r9
00000000000109f9	movl	$0x00000004,%r8d
00000000000109ff	movl	$0x00000103,%ecx
0000000000010a04	xorl	%edx,%edx
0000000000010a06	movq	%rbx,%rsi
0000000000010a09	movq	%r12,%rdi
0000000000010a0c	callq	0x1000102be
0000000000010a11	testl	%eax,%eax
0000000000010a13	jne	0x00010a7f
0000000000010a15	movl	$0x00000190,%edi
0000000000010a1a	callq	0x00010a1f
0000000000010a1f	movq	%r13,(%rsp)
0000000000010a23	movq	%r14,%r9
0000000000010a26	movl	$0x00000001,%r8d
0000000000010a2c	movl	$0x00000202,%ecx
0000000000010a31	movl	$0x00000001,%edx
0000000000010a36	movq	%rbx,%rsi
0000000000010a39	movq	%r12,%rdi
0000000000010a3c	callq	0x1000102be
0000000000010a41	testl	%eax,%eax
0000000000010a43	jne	0x00010a7f
0000000000010a45	movl	(%r15),%eax
0000000000010a48	orl	$0x30000000,%eax
0000000000010a4d	movl	%eax,(%r15)
0000000000010a50	movb	$0x00,0xb0(%rbp)
0000000000010a54	movb	$0x00,0xb1(%rbp)
0000000000010a58	movb	$0x00,0xb2(%rbp)
0000000000010a5c	movb	$0x00,0xb3(%rbp)
0000000000010a60	movq	%r13,(%rsp)
0000000000010a64	movq	%r14,%r9
0000000000010a67	movl	$0x00000004,%r8d
0000000000010a6d	movl	$0x00000102,%ecx
0000000000010a72	xorl	%edx,%edx
0000000000010a74	movq	%rbx,%rsi
0000000000010a77	movq	%r12,%rdi
0000000000010a7a	callq	0x1000102be
0000000000010a7f	movq	0x00004392(%rip),%rcx
0000000000010a86	movq	0xc8(%rbp),%rdx
0000000000010a8a	xorq	(%rcx),%rdx
0000000000010a8d	je	0x00010a94
0000000000010a8f	callq	0x00010a94
0000000000010a94	movq	0xd8(%rbp),%rbx
0000000000010a98	movq	0xe0(%rbp),%r12
0000000000010a9c	movq	0xe8(%rbp),%r13
0000000000010aa0	movq	0xf0(%rbp),%r14
0000000000010aa4	movq	0xf8(%rbp),%r15
0000000000010aa8	leave
0000000000010aa9	ret
__ZN21AppleIntelFramebuffer23getAttributeAUMsgStatusEPm:
0000000000010aaa	pushq	%rbp
0000000000010aab	movq	%rsp,%rbp
0000000000010aae	testq	%rsi,%rsi
0000000000010ab1	je	0x00010aba
0000000000010ab3	movq	$0x00000000,(%rsi)
0000000000010aba	xorl	%eax,%eax
0000000000010abc	leave
0000000000010abd	ret
__ZN21AppleIntelFramebuffer24getAttributeAUHDCPStatusEPm:
0000000000010abe	pushq	%rbp
0000000000010abf	movq	%rsp,%rbp
0000000000010ac2	testq	%rsi,%rsi
0000000000010ac5	je	0x00010ace
0000000000010ac7	movq	$0x00000000,(%rsi)
0000000000010ace	xorl	%eax,%eax
0000000000010ad0	leave
0000000000010ad1	ret
__ZN21AppleIntelFramebuffer21getAttributeAUMsgSizeEPm:
0000000000010ad2	pushq	%rbp
0000000000010ad3	movq	%rsp,%rbp
0000000000010ad6	testq	%rsi,%rsi
0000000000010ad9	je	0x00010ae2
0000000000010adb	movq	$0x00000028,(%rsi)
0000000000010ae2	xorl	%eax,%eax
0000000000010ae4	leave
0000000000010ae5	ret
__ZN21AppleIntelFramebuffer21setAttributeAUMsgReadEm:
0000000000010ae6	pushq	%rbp
0000000000010ae7	movq	%rsp,%rbp
0000000000010aea	movb	$0x48,(%rsi)
0000000000010aed	movb	$0x44,0x01(%rsi)
0000000000010af1	movb	$0x43,0x02(%rsi)
0000000000010af5	movb	$0x50,0x03(%rsi)
0000000000010af9	movb	$0x07,0x04(%rsi)
0000000000010afd	movb	$0x01,0x05(%rsi)
0000000000010b01	movb	$0x02,0x06(%rsi)
0000000000010b05	movb	$0x02,0x07(%rsi)
0000000000010b09	movl	$0x00000040,0x08(%rsi)
0000000000010b10	movb	$0x00,0x0c(%rsi)
0000000000010b14	movb	$0x00,0x0d(%rsi)
0000000000010b18	movw	$0x1800,0x0e(%rsi)
0000000000010b1e	movq	0x000001d0(%rdi),%rax
0000000000010b25	movq	0x00000098(%rax),%rax
0000000000010b2c	movl	0x00004430(%rax),%eax
0000000000010b32	movl	%eax,0x10(%rsi)
0000000000010b35	movq	0x000001d0(%rdi),%rax
0000000000010b3c	movq	0x00000098(%rax),%rax
0000000000010b43	movl	0x00004434(%rax),%eax
0000000000010b49	movl	%eax,0x14(%rsi)
0000000000010b4c	movq	0x000001d0(%rdi),%rax
0000000000010b53	movq	0x00000098(%rax),%rax
0000000000010b5a	movl	0x00004438(%rax),%eax
0000000000010b60	movl	%eax,0x18(%rsi)
0000000000010b63	movq	0x000001d0(%rdi),%rax
0000000000010b6a	movq	0x00000098(%rax),%rax
0000000000010b71	movl	0x0000443c(%rax),%eax
0000000000010b77	movl	%eax,0x1c(%rsi)
0000000000010b7a	xorl	%eax,%eax
0000000000010b7c	leave
0000000000010b7d	ret
__ZN21AppleIntelFramebuffer31getAttributeAUSupportedProtocolEPm:
0000000000010b7e	pushq	%rbp
0000000000010b7f	movq	%rsp,%rbp
0000000000010b82	testq	%rsi,%rsi
0000000000010b85	je	0x00010b8e
0000000000010b87	movq	$0x00000007,(%rsi)
0000000000010b8e	xorl	%eax,%eax
0000000000010b90	leave
0000000000010b91	ret
__ZN21AppleIntelFramebuffer21setAtributeAUMsgWriteEm:
0000000000010b92	pushq	%rbp
0000000000010b93	movq	%rsp,%rbp
0000000000010b96	leaq	0x20(%rsi),%rdx
0000000000010b9a	cmpb	$0x48,0x20(%rsi)
0000000000010b9e	jne	0x00010c48
0000000000010ba4	cmpb	$0x44,0x01(%rdx)
0000000000010ba8	jne	0x00010c48
0000000000010bae	cmpb	$0x43,0x02(%rdx)
0000000000010bb2	jne	0x00010c48
0000000000010bb8	cmpb	$0x50,0x03(%rdx)
0000000000010bbc	jne	0x00010c48
0000000000010bc2	movq	0x000001d0(%rdi),%rax
0000000000010bc9	movq	0x00000098(%rax),%rax
0000000000010bd0	movl	0x00004430(%rax),%eax
0000000000010bd6	movl	%eax,0x10(%rsi)
0000000000010bd9	movq	0x000001d0(%rdi),%rax
0000000000010be0	movq	0x00000098(%rax),%rax
0000000000010be7	movl	0x00004434(%rax),%eax
0000000000010bed	movl	%eax,0x14(%rsi)
0000000000010bf0	movq	0x000001d0(%rdi),%rax
0000000000010bf7	movq	0x00000098(%rax),%rax
0000000000010bfe	movl	0x00004438(%rax),%eax
0000000000010c04	movl	%eax,0x18(%rsi)
0000000000010c07	movq	0x000001d0(%rdi),%rax
0000000000010c0e	movq	0x00000098(%rax),%rax
0000000000010c15	movl	0x0000443c(%rax),%eax
0000000000010c1b	movl	%eax,0x1c(%rsi)
0000000000010c1e	movl	0x10(%rdx),%edx
0000000000010c21	movq	0x000001d0(%rdi),%rax
0000000000010c28	movq	0x00000098(%rax),%rax
0000000000010c2f	movl	%edx,0x00004440(%rax)
0000000000010c35	movq	0x000001d0(%rdi),%rsi
0000000000010c3c	addq	$0x00000448,%rsi
0000000000010c43	callq	0x100009b4c
0000000000010c48	xorl	%eax,%eax
0000000000010c4a	leave
0000000000010c4b	ret
__ZN21AppleIntelFramebuffer23setAttributeForUpstreamEjm:
0000000000010c4c	pushq	%rbp
0000000000010c4d	movq	%rsp,%rbp
0000000000010c50	subq	$0x20,%rsp
0000000000010c54	movq	%rbx,(%rsp)
0000000000010c58	movq	%r12,0x08(%rsp)
0000000000010c5d	movq	%r13,0x10(%rsp)
0000000000010c62	movq	%r14,0x18(%rsp)
0000000000010c67	movq	%rdi,%r13
0000000000010c6a	movl	%esi,%ebx
0000000000010c6c	movq	%rdx,%r14
0000000000010c6f	cmpl	$0x61757063,%esi
0000000000010c75	je	0x00010c99
0000000000010c77	ja	0x00010c89
0000000000010c79	cmpl	$0x00617573,%esi
0000000000010c7f	je	0x00010c99
0000000000010c81	cmpl	$0x61756d73,%esi
0000000000010c87	jmp	0x00010c97
0000000000010c89	cmpl	$0x61757068,%esi
0000000000010c8f	je	0x00010c99
0000000000010c91	cmpl	$0x61757070,%esi
0000000000010c97	jne	0x00010ca4
0000000000010c99	movl	$0xe00002c7,%r12d
0000000000010c9f	jmp	0x00010d34
0000000000010ca4	movq	0x000001d0(%r13),%rdi
0000000000010cab	callq	0x10000f150
0000000000010cb0	movq	0x000001d0(%r13),%rdi
0000000000010cb7	xorl	%r12d,%r12d
0000000000010cba	movl	0x00000618(%rdi),%eax
0000000000010cc0	testl	%eax,%eax
0000000000010cc2	jne	0x00010cee
0000000000010cc4	callq	0x10000a06e
0000000000010cc9	movl	$0xe00002c7,%r12d
0000000000010ccf	testl	%eax,%eax
0000000000010cd1	jne	0x00010ce7
0000000000010cd3	movq	0x000001d0(%r13),%rax
0000000000010cda	movl	$0x00000001,0x00000618(%rax)
0000000000010ce4	xorl	%r12d,%r12d
0000000000010ce7	movq	0x000001d0(%r13),%rdi
0000000000010cee	cmpl	$0x01,0x00000618(%rdi)
0000000000010cf5	jne	0x00010d2f
0000000000010cf7	cmpl	$0x00617577,%ebx
0000000000010cfd	jne	0x00010d0c
0000000000010cff	movq	%r14,%rsi
0000000000010d02	movq	%r13,%rdi
0000000000010d05	callq	0x100010b92
0000000000010d0a	jmp	0x00010d25
0000000000010d0c	movl	$0xe00002c7,%r12d
0000000000010d12	cmpl	$0x00617572,%ebx
0000000000010d18	jne	0x00010d2f
0000000000010d1a	movq	%r14,%rsi
0000000000010d1d	movq	%r13,%rdi
0000000000010d20	callq	0x100010ae6
0000000000010d25	movl	%eax,%r12d
0000000000010d28	movq	0x000001d0(%r13),%rdi
0000000000010d2f	callq	0x10000e9f2
0000000000010d34	movl	%r12d,%eax
0000000000010d37	movq	(%rsp),%rbx
0000000000010d3b	movq	0x08(%rsp),%r12
0000000000010d40	movq	0x10(%rsp),%r13
0000000000010d45	movq	0x18(%rsp),%r14
0000000000010d4a	leave
0000000000010d4b	ret
__ZN21AppleIntelFramebuffer30getAttributeAUHDCPConfigStatusEPm:
0000000000010d4c	pushq	%rbp
0000000000010d4d	movq	%rsp,%rbp
0000000000010d50	pushq	%rbx
0000000000010d51	subq	$0x08,%rsp
0000000000010d55	movq	%rsi,%rbx
0000000000010d58	testq	%rsi,%rsi
0000000000010d5b	je	0x00010d64
0000000000010d5d	movq	$0x00000004,(%rsi)
0000000000010d64	movq	0x000001d0(%rdi),%rdi
0000000000010d6b	movl	$0x000e1180,%esi
0000000000010d70	callq	0x10000191e
0000000000010d75	testb	$0x02,%al
0000000000010d77	je	0x00010d82
0000000000010d79	testq	%rbx,%rbx
0000000000010d7c	je	0x00010d82
0000000000010d7e	orq	$0x01,(%rbx)
0000000000010d82	xorl	%eax,%eax
0000000000010d84	addq	$0x08,%rsp
0000000000010d88	popq	%rbx
0000000000010d89	leave
0000000000010d8a	ret
0000000000010d8b	nop
__ZN21AppleIntelFramebuffer23getAttributeForUpstreamEjPm:
0000000000010d8c	pushq	%rbp
0000000000010d8d	movq	%rsp,%rbp
0000000000010d90	subq	$0x20,%rsp
0000000000010d94	movq	%rbx,0xe8(%rbp)
0000000000010d98	movq	%r12,0xf0(%rbp)
0000000000010d9c	movq	%r13,0xf8(%rbp)
0000000000010da0	movq	%rdi,%r13
0000000000010da3	movl	%esi,%ebx
0000000000010da5	movq	%rdx,%r12
0000000000010da8	cmpl	$0x00617577,%esi
0000000000010dae	je	0x00010dde
0000000000010db0	ja	0x00010dc4
0000000000010db2	cmpl	$0x00617572,%esi
0000000000010db8	je	0x00010dde
0000000000010dba	cmpl	$0x00617573,%esi
0000000000010dc0	jne	0x00010e28
0000000000010dc2	jmp	0x00010de8
0000000000010dc4	cmpl	$0x61757063,%esi
0000000000010dca	je	0x00010dfd
0000000000010dcc	cmpl	$0x61757068,%esi
0000000000010dd2	je	0x00010e12
0000000000010dd4	cmpl	$0x61756d73,%esi
0000000000010dda	jne	0x00010e28
0000000000010ddc	jmp	0x00010e12
0000000000010dde	movl	$0xe00002c7,%eax
0000000000010de3	jmp	0x00010eb1
0000000000010de8	testq	%rdx,%rdx
0000000000010deb	je	0x00010eaf
0000000000010df1	movq	$0x00000028,(%rdx)
0000000000010df8	jmp	0x00010eaf
0000000000010dfd	testq	%rdx,%rdx
0000000000010e00	je	0x00010eaf
0000000000010e06	movq	$0x00000007,(%rdx)
0000000000010e0d	jmp	0x00010eaf
0000000000010e12	testq	%r12,%r12
0000000000010e15	je	0x00010eaf
0000000000010e1b	movq	$0x00000000,(%r12)
0000000000010e23	jmp	0x00010eaf
0000000000010e28	movq	0x000001d0(%r13),%rdi
0000000000010e2f	callq	0x10000f150
0000000000010e34	movq	0x000001d0(%r13),%rdi
0000000000010e3b	movl	0x00000618(%rdi),%edx
0000000000010e41	testl	%edx,%edx
0000000000010e43	jne	0x00010e66
0000000000010e45	callq	0x10000a06e
0000000000010e4a	testl	%eax,%eax
0000000000010e4c	jne	0x00010e5f
0000000000010e4e	movq	0x000001d0(%r13),%rax
0000000000010e55	movl	$0x00000001,0x00000618(%rax)
0000000000010e5f	movq	0x000001d0(%r13),%rdi
0000000000010e66	cmpl	$0x01,0x00000618(%rdi)
0000000000010e6d	jne	0x00010eaa
0000000000010e6f	cmpl	$0x61757070,%ebx
0000000000010e75	jne	0x00010eaa
0000000000010e77	testq	%r12,%r12
0000000000010e7a	je	0x00010e8b
0000000000010e7c	movq	$0x00000004,(%r12)
0000000000010e84	movq	0x000001d0(%r13),%rdi
0000000000010e8b	movl	$0x000e1180,%esi
0000000000010e90	callq	0x10000191e
0000000000010e95	testb	$0x02,%al
0000000000010e97	je	0x00010ea3
0000000000010e99	testq	%r12,%r12
0000000000010e9c	je	0x00010ea3
0000000000010e9e	orq	$0x01,(%r12)
0000000000010ea3	movq	0x000001d0(%r13),%rdi
0000000000010eaa	callq	0x10000e9f2
0000000000010eaf	xorl	%eax,%eax
0000000000010eb1	movq	0xe8(%rbp),%rbx
0000000000010eb5	movq	0xf0(%rbp),%r12
0000000000010eb9	movq	0xf8(%rbp),%r13
0000000000010ebd	leave
0000000000010ebe	ret
__start:
0000000000010ebf	pushq	%rbp
0000000000010ec0	movq	%rsp,%rbp
0000000000010ec3	leaq	0x00003ede(%rip),%rax
0000000000010eca	movq	(%rax),%rax
0000000000010ecd	testq	%rax,%rax
0000000000010ed0	je	0x00010ed9
0000000000010ed2	movq	%rax,%r11
0000000000010ed5	leave
0000000000010ed6	jmp	*%r11
0000000000010ed9	xorl	%eax,%eax
0000000000010edb	leave
0000000000010edc	ret
_OSKextGetCurrentIdentifier:
0000000000010edd	pushq	%rbp
0000000000010ede	movq	%rsp,%rbp
0000000000010ee1	leaq	0x00003df8(%rip),%rax
0000000000010ee8	addq	$0x10,%rax
0000000000010eec	leave
0000000000010eed	ret
_OSKextGetCurrentVersionString:
0000000000010eee	pushq	%rbp
0000000000010eef	movq	%rsp,%rbp
0000000000010ef2	leaq	0x00003de7(%rip),%rax
0000000000010ef9	addq	$0x50,%rax
0000000000010efd	leave
0000000000010efe	ret
_OSKextGetCurrentLoadTag:
0000000000010eff	pushq	%rbp
0000000000010f00	movq	%rsp,%rbp
0000000000010f03	leaq	0x00003dd6(%rip),%rax
0000000000010f0a	movl	0x0c(%rax),%eax
0000000000010f0d	leave
0000000000010f0e	ret
__stop:
0000000000010f0f	pushq	%rbp
0000000000010f10	movq	%rsp,%rbp
0000000000010f13	leaq	0x00003e96(%rip),%rax
0000000000010f1a	movq	(%rax),%rax
0000000000010f1d	testq	%rax,%rax
0000000000010f20	je	0x00010f29
0000000000010f22	movq	%rax,%r11
0000000000010f25	leave
0000000000010f26	jmp	*%r11
0000000000010f29	xorl	%eax,%eax
0000000000010f2b	leave
0000000000010f2c	ret
